{
  "$schema": "https://raw.githubusercontent.com/schemastore/schemastore/master/src/schemas/json/sarif-2.1.0-rtm.5.json",
  "version": "2.1.0",
  "runs": [
    {
      "tool": {
        "driver": {
          "name": "IC",
          "fullName": "Qodana",
          "version": "242.20224.419",
          "rules": [],
          "taxa": [
            {
              "id": "Language injection",
              "name": "Language injection"
            },
            {
              "id": "JVM languages",
              "name": "JVM languages"
            },
            {
              "id": "Kotlin",
              "name": "Kotlin"
            },
            {
              "id": "Kotlin/Style issues",
              "name": "Style issues",
              "relationships": [
                {
                  "target": {
                    "id": "Kotlin",
                    "index": 2,
                    "toolComponent": {
                      "name": "IC"
                    }
                  },
                  "kinds": [
                    "superset"
                  ]
                }
              ]
            },
            {
              "id": "Kotlin/Redundant constructs",
              "name": "Redundant constructs",
              "relationships": [
                {
                  "target": {
                    "id": "Kotlin",
                    "index": 2,
                    "toolComponent": {
                      "name": "IC"
                    }
                  },
                  "kinds": [
                    "superset"
                  ]
                }
              ]
            },
            {
              "id": "Android Lint: Correctness",
              "name": "Android Lint: Correctness"
            },
            {
              "id": "Java",
              "name": "Java"
            },
            {
              "id": "Java/Internationalization",
              "name": "Internationalization",
              "relationships": [
                {
                  "target": {
                    "id": "Java",
                    "index": 6,
                    "toolComponent": {
                      "name": "IC"
                    }
                  },
                  "kinds": [
                    "superset"
                  ]
                }
              ]
            },
            {
              "id": "Java/Performance",
              "name": "Performance",
              "relationships": [
                {
                  "target": {
                    "id": "Java",
                    "index": 6,
                    "toolComponent": {
                      "name": "IC"
                    }
                  },
                  "kinds": [
                    "superset"
                  ]
                }
              ]
            },
            {
              "id": "Java/Code style issues",
              "name": "Code style issues",
              "relationships": [
                {
                  "target": {
                    "id": "Java",
                    "index": 6,
                    "toolComponent": {
                      "name": "IC"
                    }
                  },
                  "kinds": [
                    "superset"
                  ]
                }
              ]
            },
            {
              "id": "Java/Error handling",
              "name": "Error handling",
              "relationships": [
                {
                  "target": {
                    "id": "Java",
                    "index": 6,
                    "toolComponent": {
                      "name": "IC"
                    }
                  },
                  "kinds": [
                    "superset"
                  ]
                }
              ]
            },
            {
              "id": "Java/Declaration redundancy",
              "name": "Declaration redundancy",
              "relationships": [
                {
                  "target": {
                    "id": "Java",
                    "index": 6,
                    "toolComponent": {
                      "name": "IC"
                    }
                  },
                  "kinds": [
                    "superset"
                  ]
                }
              ]
            },
            {
              "id": "Java/Probable bugs",
              "name": "Probable bugs",
              "relationships": [
                {
                  "target": {
                    "id": "Java",
                    "index": 6,
                    "toolComponent": {
                      "name": "IC"
                    }
                  },
                  "kinds": [
                    "superset"
                  ]
                }
              ]
            },
            {
              "id": "Kotlin/Migration",
              "name": "Migration",
              "relationships": [
                {
                  "target": {
                    "id": "Kotlin",
                    "index": 2,
                    "toolComponent": {
                      "name": "IC"
                    }
                  },
                  "kinds": [
                    "superset"
                  ]
                }
              ]
            },
            {
              "id": "Android Lint: Performance",
              "name": "Android Lint: Performance"
            },
            {
              "id": "Java/Class structure",
              "name": "Class structure",
              "relationships": [
                {
                  "target": {
                    "id": "Java",
                    "index": 6,
                    "toolComponent": {
                      "name": "IC"
                    }
                  },
                  "kinds": [
                    "superset"
                  ]
                }
              ]
            },
            {
              "id": "Java/Serialization issues",
              "name": "Serialization issues",
              "relationships": [
                {
                  "target": {
                    "id": "Java",
                    "index": 6,
                    "toolComponent": {
                      "name": "IC"
                    }
                  },
                  "kinds": [
                    "superset"
                  ]
                }
              ]
            },
            {
              "id": "Groovy",
              "name": "Groovy"
            },
            {
              "id": "Groovy/GPath",
              "name": "GPath",
              "relationships": [
                {
                  "target": {
                    "id": "Groovy",
                    "index": 17,
                    "toolComponent": {
                      "name": "IC"
                    }
                  },
                  "kinds": [
                    "superset"
                  ]
                }
              ]
            },
            {
              "id": "Java/Imports",
              "name": "Imports",
              "relationships": [
                {
                  "target": {
                    "id": "Java",
                    "index": 6,
                    "toolComponent": {
                      "name": "IC"
                    }
                  },
                  "kinds": [
                    "superset"
                  ]
                }
              ]
            },
            {
              "id": "Maven",
              "name": "Maven"
            },
            {
              "id": "Kotlin/Probable bugs",
              "name": "Probable bugs",
              "relationships": [
                {
                  "target": {
                    "id": "Kotlin",
                    "index": 2,
                    "toolComponent": {
                      "name": "IC"
                    }
                  },
                  "kinds": [
                    "superset"
                  ]
                }
              ]
            },
            {
              "id": "Java/Threading issues",
              "name": "Threading issues",
              "relationships": [
                {
                  "target": {
                    "id": "Java",
                    "index": 6,
                    "toolComponent": {
                      "name": "IC"
                    }
                  },
                  "kinds": [
                    "superset"
                  ]
                }
              ]
            },
            {
              "id": "Java/Control flow issues",
              "name": "Control flow issues",
              "relationships": [
                {
                  "target": {
                    "id": "Java",
                    "index": 6,
                    "toolComponent": {
                      "name": "IC"
                    }
                  },
                  "kinds": [
                    "superset"
                  ]
                }
              ]
            },
            {
              "id": "Java/Numeric issues",
              "name": "Numeric issues",
              "relationships": [
                {
                  "target": {
                    "id": "Java",
                    "index": 6,
                    "toolComponent": {
                      "name": "IC"
                    }
                  },
                  "kinds": [
                    "superset"
                  ]
                }
              ]
            },
            {
              "id": "Java/Initialization",
              "name": "Initialization",
              "relationships": [
                {
                  "target": {
                    "id": "Java",
                    "index": 6,
                    "toolComponent": {
                      "name": "IC"
                    }
                  },
                  "kinds": [
                    "superset"
                  ]
                }
              ]
            },
            {
              "id": "HTML",
              "name": "HTML"
            },
            {
              "id": "Java/Security",
              "name": "Security",
              "relationships": [
                {
                  "target": {
                    "id": "Java",
                    "index": 6,
                    "toolComponent": {
                      "name": "IC"
                    }
                  },
                  "kinds": [
                    "superset"
                  ]
                }
              ]
            },
            {
              "id": "Properties files",
              "name": "Properties files"
            },
            {
              "id": "Groovy/Naming conventions",
              "name": "Naming conventions",
              "relationships": [
                {
                  "target": {
                    "id": "Groovy",
                    "index": 17,
                    "toolComponent": {
                      "name": "IC"
                    }
                  },
                  "kinds": [
                    "superset"
                  ]
                }
              ]
            },
            {
              "id": "Java/Packaging issues",
              "name": "Packaging issues",
              "relationships": [
                {
                  "target": {
                    "id": "Java",
                    "index": 6,
                    "toolComponent": {
                      "name": "IC"
                    }
                  },
                  "kinds": [
                    "superset"
                  ]
                }
              ]
            },
            {
              "id": "Java/Verbose or redundant code constructs",
              "name": "Verbose or redundant code constructs",
              "relationships": [
                {
                  "target": {
                    "id": "Java",
                    "index": 6,
                    "toolComponent": {
                      "name": "IC"
                    }
                  },
                  "kinds": [
                    "superset"
                  ]
                }
              ]
            },
            {
              "id": "Gradle",
              "name": "Gradle"
            },
            {
              "id": "Gradle/Probable bugs",
              "name": "Probable bugs",
              "relationships": [
                {
                  "target": {
                    "id": "Gradle",
                    "index": 32,
                    "toolComponent": {
                      "name": "IC"
                    }
                  },
                  "kinds": [
                    "superset"
                  ]
                }
              ]
            },
            {
              "id": "JVM languages/Logging",
              "name": "Logging",
              "relationships": [
                {
                  "target": {
                    "id": "JVM languages",
                    "index": 1,
                    "toolComponent": {
                      "name": "IC"
                    }
                  },
                  "kinds": [
                    "superset"
                  ]
                }
              ]
            },
            {
              "id": "EditorConfig",
              "name": "EditorConfig"
            },
            {
              "id": "General",
              "name": "General"
            },
            {
              "id": "Gradle/Validity issues",
              "name": "Validity issues",
              "relationships": [
                {
                  "target": {
                    "id": "Gradle",
                    "index": 32,
                    "toolComponent": {
                      "name": "IC"
                    }
                  },
                  "kinds": [
                    "superset"
                  ]
                }
              ]
            },
            {
              "id": "Java/Code maturity",
              "name": "Code maturity",
              "relationships": [
                {
                  "target": {
                    "id": "Java",
                    "index": 6,
                    "toolComponent": {
                      "name": "IC"
                    }
                  },
                  "kinds": [
                    "superset"
                  ]
                }
              ]
            },
            {
              "id": "Android Lint: Interoperability",
              "name": "Android Lint: Interoperability"
            },
            {
              "id": "Groovy/Probable bugs",
              "name": "Probable bugs",
              "relationships": [
                {
                  "target": {
                    "id": "Groovy",
                    "index": 17,
                    "toolComponent": {
                      "name": "IC"
                    }
                  },
                  "kinds": [
                    "superset"
                  ]
                }
              ]
            },
            {
              "id": "Kotlin/Other problems",
              "name": "Other problems",
              "relationships": [
                {
                  "target": {
                    "id": "Kotlin",
                    "index": 2,
                    "toolComponent": {
                      "name": "IC"
                    }
                  },
                  "kinds": [
                    "superset"
                  ]
                }
              ]
            },
            {
              "id": "Android Lint: Usability",
              "name": "Android Lint: Usability"
            },
            {
              "id": "Java/Data flow",
              "name": "Data flow",
              "relationships": [
                {
                  "target": {
                    "id": "Java",
                    "index": 6,
                    "toolComponent": {
                      "name": "IC"
                    }
                  },
                  "kinds": [
                    "superset"
                  ]
                }
              ]
            },
            {
              "id": "Android Lint: Security",
              "name": "Android Lint: Security"
            },
            {
              "id": "Java/Java language level migration aids",
              "name": "Java language level migration aids",
              "relationships": [
                {
                  "target": {
                    "id": "Java",
                    "index": 6,
                    "toolComponent": {
                      "name": "IC"
                    }
                  },
                  "kinds": [
                    "superset"
                  ]
                }
              ]
            },
            {
              "id": "Kotlin/Naming conventions",
              "name": "Naming conventions",
              "relationships": [
                {
                  "target": {
                    "id": "Kotlin",
                    "index": 2,
                    "toolComponent": {
                      "name": "IC"
                    }
                  },
                  "kinds": [
                    "superset"
                  ]
                }
              ]
            },
            {
              "id": "Java/Finalization",
              "name": "Finalization",
              "relationships": [
                {
                  "target": {
                    "id": "Java",
                    "index": 6,
                    "toolComponent": {
                      "name": "IC"
                    }
                  },
                  "kinds": [
                    "superset"
                  ]
                }
              ]
            },
            {
              "id": "Java/Modularization issues",
              "name": "Modularization issues",
              "relationships": [
                {
                  "target": {
                    "id": "Java",
                    "index": 6,
                    "toolComponent": {
                      "name": "IC"
                    }
                  },
                  "kinds": [
                    "superset"
                  ]
                }
              ]
            },
            {
              "id": "Java/Javadoc",
              "name": "Javadoc",
              "relationships": [
                {
                  "target": {
                    "id": "Java",
                    "index": 6,
                    "toolComponent": {
                      "name": "IC"
                    }
                  },
                  "kinds": [
                    "superset"
                  ]
                }
              ]
            },
            {
              "id": "Kotlin/Java interop issues",
              "name": "Java interop issues",
              "relationships": [
                {
                  "target": {
                    "id": "Kotlin",
                    "index": 2,
                    "toolComponent": {
                      "name": "IC"
                    }
                  },
                  "kinds": [
                    "superset"
                  ]
                }
              ]
            },
            {
              "id": "Java/Naming conventions",
              "name": "Naming conventions",
              "relationships": [
                {
                  "target": {
                    "id": "Java",
                    "index": 6,
                    "toolComponent": {
                      "name": "IC"
                    }
                  },
                  "kinds": [
                    "superset"
                  ]
                }
              ]
            },
            {
              "id": "Java/Naming conventions/Class",
              "name": "Class",
              "relationships": [
                {
                  "target": {
                    "id": "Java/Naming conventions",
                    "index": 51,
                    "toolComponent": {
                      "name": "IC"
                    }
                  },
                  "kinds": [
                    "superset"
                  ]
                }
              ]
            },
            {
              "id": "Java/Abstraction issues",
              "name": "Abstraction issues",
              "relationships": [
                {
                  "target": {
                    "id": "Java",
                    "index": 6,
                    "toolComponent": {
                      "name": "IC"
                    }
                  },
                  "kinds": [
                    "superset"
                  ]
                }
              ]
            },
            {
              "id": "Java/Assignment issues",
              "name": "Assignment issues",
              "relationships": [
                {
                  "target": {
                    "id": "Java",
                    "index": 6,
                    "toolComponent": {
                      "name": "IC"
                    }
                  },
                  "kinds": [
                    "superset"
                  ]
                }
              ]
            },
            {
              "id": "Java/Java language level migration aids/Java 9",
              "name": "Java 9",
              "relationships": [
                {
                  "target": {
                    "id": "Java/Java language level migration aids",
                    "index": 45,
                    "toolComponent": {
                      "name": "IC"
                    }
                  },
                  "kinds": [
                    "superset"
                  ]
                }
              ]
            },
            {
              "id": "Groovy/Threading issues",
              "name": "Threading issues",
              "relationships": [
                {
                  "target": {
                    "id": "Groovy",
                    "index": 17,
                    "toolComponent": {
                      "name": "IC"
                    }
                  },
                  "kinds": [
                    "superset"
                  ]
                }
              ]
            },
            {
              "id": "Groovy/Control flow issues",
              "name": "Control flow issues",
              "relationships": [
                {
                  "target": {
                    "id": "Groovy",
                    "index": 17,
                    "toolComponent": {
                      "name": "IC"
                    }
                  },
                  "kinds": [
                    "superset"
                  ]
                }
              ]
            },
            {
              "id": "Java/JUnit",
              "name": "JUnit",
              "relationships": [
                {
                  "target": {
                    "id": "Java",
                    "index": 6,
                    "toolComponent": {
                      "name": "IC"
                    }
                  },
                  "kinds": [
                    "superset"
                  ]
                }
              ]
            },
            {
              "id": "Groovy/Style",
              "name": "Style",
              "relationships": [
                {
                  "target": {
                    "id": "Groovy",
                    "index": 17,
                    "toolComponent": {
                      "name": "IC"
                    }
                  },
                  "kinds": [
                    "superset"
                  ]
                }
              ]
            },
            {
              "id": "Java/Portability",
              "name": "Portability",
              "relationships": [
                {
                  "target": {
                    "id": "Java",
                    "index": 6,
                    "toolComponent": {
                      "name": "IC"
                    }
                  },
                  "kinds": [
                    "superset"
                  ]
                }
              ]
            },
            {
              "id": "JavaFX",
              "name": "JavaFX"
            },
            {
              "id": "Java/TestNG",
              "name": "TestNG",
              "relationships": [
                {
                  "target": {
                    "id": "Java",
                    "index": 6,
                    "toolComponent": {
                      "name": "IC"
                    }
                  },
                  "kinds": [
                    "superset"
                  ]
                }
              ]
            },
            {
              "id": "Android Lint: Internationalization",
              "name": "Android Lint: Internationalization"
            },
            {
              "id": "Java/Visibility",
              "name": "Visibility",
              "relationships": [
                {
                  "target": {
                    "id": "Java",
                    "index": 6,
                    "toolComponent": {
                      "name": "IC"
                    }
                  },
                  "kinds": [
                    "superset"
                  ]
                }
              ]
            },
            {
              "id": "RegExp",
              "name": "RegExp"
            },
            {
              "id": "Java/Concurrency annotation issues",
              "name": "Concurrency annotation issues",
              "relationships": [
                {
                  "target": {
                    "id": "Java",
                    "index": 6,
                    "toolComponent": {
                      "name": "IC"
                    }
                  },
                  "kinds": [
                    "superset"
                  ]
                }
              ]
            },
            {
              "id": "JUnit",
              "name": "JUnit"
            },
            {
              "id": "Android Lint: Accessibility",
              "name": "Android Lint: Accessibility"
            },
            {
              "id": "UI form",
              "name": "UI form"
            },
            {
              "id": "Java/Naming conventions/Method",
              "name": "Method",
              "relationships": [
                {
                  "target": {
                    "id": "Java/Naming conventions",
                    "index": 51,
                    "toolComponent": {
                      "name": "IC"
                    }
                  },
                  "kinds": [
                    "superset"
                  ]
                }
              ]
            },
            {
              "id": "Kotlin/Code migration",
              "name": "Code migration",
              "relationships": [
                {
                  "target": {
                    "id": "Kotlin",
                    "index": 2,
                    "toolComponent": {
                      "name": "IC"
                    }
                  },
                  "kinds": [
                    "superset"
                  ]
                }
              ]
            },
            {
              "id": "Compose preview",
              "name": "Compose preview"
            },
            {
              "id": "Groovy/Annotations",
              "name": "Annotations",
              "relationships": [
                {
                  "target": {
                    "id": "Groovy",
                    "index": 17,
                    "toolComponent": {
                      "name": "IC"
                    }
                  },
                  "kinds": [
                    "superset"
                  ]
                }
              ]
            },
            {
              "id": "Proofreading",
              "name": "Proofreading"
            },
            {
              "id": "XML",
              "name": "XML"
            },
            {
              "id": "Java/Cloning issues",
              "name": "Cloning issues",
              "relationships": [
                {
                  "target": {
                    "id": "Java",
                    "index": 6,
                    "toolComponent": {
                      "name": "IC"
                    }
                  },
                  "kinds": [
                    "superset"
                  ]
                }
              ]
            },
            {
              "id": "Manifest",
              "name": "Manifest"
            },
            {
              "id": "Groovy/Potentially confusing code constructs",
              "name": "Potentially confusing code constructs",
              "relationships": [
                {
                  "target": {
                    "id": "Groovy",
                    "index": 17,
                    "toolComponent": {
                      "name": "IC"
                    }
                  },
                  "kinds": [
                    "superset"
                  ]
                }
              ]
            },
            {
              "id": "Java/Logging",
              "name": "Logging",
              "relationships": [
                {
                  "target": {
                    "id": "Java",
                    "index": 6,
                    "toolComponent": {
                      "name": "IC"
                    }
                  },
                  "kinds": [
                    "superset"
                  ]
                }
              ]
            },
            {
              "id": "Markdown",
              "name": "Markdown"
            },
            {
              "id": "Groovy/Error handling",
              "name": "Error handling",
              "relationships": [
                {
                  "target": {
                    "id": "Groovy",
                    "index": 17,
                    "toolComponent": {
                      "name": "IC"
                    }
                  },
                  "kinds": [
                    "superset"
                  ]
                }
              ]
            },
            {
              "id": "Java/Java language level migration aids/Java 5",
              "name": "Java 5",
              "relationships": [
                {
                  "target": {
                    "id": "Java/Java language level migration aids",
                    "index": 45,
                    "toolComponent": {
                      "name": "IC"
                    }
                  },
                  "kinds": [
                    "superset"
                  ]
                }
              ]
            },
            {
              "id": "Android",
              "name": "Android"
            },
            {
              "id": "Android/Shrinker",
              "name": "Shrinker",
              "relationships": [
                {
                  "target": {
                    "id": "Android",
                    "index": 83,
                    "toolComponent": {
                      "name": "IC"
                    }
                  },
                  "kinds": [
                    "superset"
                  ]
                }
              ]
            },
            {
              "id": "Java/Java language level migration aids/Java 8",
              "name": "Java 8",
              "relationships": [
                {
                  "target": {
                    "id": "Java/Java language level migration aids",
                    "index": 45,
                    "toolComponent": {
                      "name": "IC"
                    }
                  },
                  "kinds": [
                    "superset"
                  ]
                }
              ]
            },
            {
              "id": "JVM languages/Test frameworks",
              "name": "Test frameworks",
              "relationships": [
                {
                  "target": {
                    "id": "JVM languages",
                    "index": 1,
                    "toolComponent": {
                      "name": "IC"
                    }
                  },
                  "kinds": [
                    "superset"
                  ]
                }
              ]
            },
            {
              "id": "Android/Lint",
              "name": "Lint",
              "relationships": [
                {
                  "target": {
                    "id": "Android",
                    "index": 83,
                    "toolComponent": {
                      "name": "IC"
                    }
                  },
                  "kinds": [
                    "superset"
                  ]
                }
              ]
            },
            {
              "id": "Android/Lint/Screen sizes",
              "name": "Screen sizes",
              "relationships": [
                {
                  "target": {
                    "id": "Android/Lint",
                    "index": 87,
                    "toolComponent": {
                      "name": "IC"
                    }
                  },
                  "kinds": [
                    "superset"
                  ]
                }
              ]
            },
            {
              "id": "Groovy/Assignment issues",
              "name": "Assignment issues",
              "relationships": [
                {
                  "target": {
                    "id": "Groovy",
                    "index": 17,
                    "toolComponent": {
                      "name": "IC"
                    }
                  },
                  "kinds": [
                    "superset"
                  ]
                }
              ]
            },
            {
              "id": "Java/Class metrics",
              "name": "Class metrics",
              "relationships": [
                {
                  "target": {
                    "id": "Java",
                    "index": 6,
                    "toolComponent": {
                      "name": "IC"
                    }
                  },
                  "kinds": [
                    "superset"
                  ]
                }
              ]
            },
            {
              "id": "Android/Room",
              "name": "Room",
              "relationships": [
                {
                  "target": {
                    "id": "Android",
                    "index": 83,
                    "toolComponent": {
                      "name": "IC"
                    }
                  },
                  "kinds": [
                    "superset"
                  ]
                }
              ]
            },
            {
              "id": "Security",
              "name": "Security"
            },
            {
              "id": "Java/Encapsulation",
              "name": "Encapsulation",
              "relationships": [
                {
                  "target": {
                    "id": "Java",
                    "index": 6,
                    "toolComponent": {
                      "name": "IC"
                    }
                  },
                  "kinds": [
                    "superset"
                  ]
                }
              ]
            },
            {
              "id": "Java/Test frameworks",
              "name": "Test frameworks",
              "relationships": [
                {
                  "target": {
                    "id": "Java",
                    "index": 6,
                    "toolComponent": {
                      "name": "IC"
                    }
                  },
                  "kinds": [
                    "superset"
                  ]
                }
              ]
            },
            {
              "id": "Java/Reflective access",
              "name": "Reflective access",
              "relationships": [
                {
                  "target": {
                    "id": "Java",
                    "index": 6,
                    "toolComponent": {
                      "name": "IC"
                    }
                  },
                  "kinds": [
                    "superset"
                  ]
                }
              ]
            },
            {
              "id": "Code Coverage",
              "name": "Code Coverage"
            },
            {
              "id": "Java/Java language level migration aids/Java 15",
              "name": "Java 15",
              "relationships": [
                {
                  "target": {
                    "id": "Java/Java language level migration aids",
                    "index": 45,
                    "toolComponent": {
                      "name": "IC"
                    }
                  },
                  "kinds": [
                    "superset"
                  ]
                }
              ]
            },
            {
              "id": "Java/Method metrics",
              "name": "Method metrics",
              "relationships": [
                {
                  "target": {
                    "id": "Java",
                    "index": 6,
                    "toolComponent": {
                      "name": "IC"
                    }
                  },
                  "kinds": [
                    "superset"
                  ]
                }
              ]
            },
            {
              "id": "Java/Resource management",
              "name": "Resource management",
              "relationships": [
                {
                  "target": {
                    "id": "Java",
                    "index": 6,
                    "toolComponent": {
                      "name": "IC"
                    }
                  },
                  "kinds": [
                    "superset"
                  ]
                }
              ]
            },
            {
              "id": "Java/Java language level migration aids/Java 14",
              "name": "Java 14",
              "relationships": [
                {
                  "target": {
                    "id": "Java/Java language level migration aids",
                    "index": 45,
                    "toolComponent": {
                      "name": "IC"
                    }
                  },
                  "kinds": [
                    "superset"
                  ]
                }
              ]
            },
            {
              "id": "Java/Numeric issues/Cast",
              "name": "Cast",
              "relationships": [
                {
                  "target": {
                    "id": "Java/Numeric issues",
                    "index": 24,
                    "toolComponent": {
                      "name": "IC"
                    }
                  },
                  "kinds": [
                    "superset"
                  ]
                }
              ]
            },
            {
              "id": "Java/JavaBeans issues",
              "name": "JavaBeans issues",
              "relationships": [
                {
                  "target": {
                    "id": "Java",
                    "index": 6,
                    "toolComponent": {
                      "name": "IC"
                    }
                  },
                  "kinds": [
                    "superset"
                  ]
                }
              ]
            },
            {
              "id": "Android Lint: Productivity",
              "name": "Android Lint: Productivity"
            },
            {
              "id": "Pattern validation",
              "name": "Pattern validation"
            },
            {
              "id": "Java/Dependency issues",
              "name": "Dependency issues",
              "relationships": [
                {
                  "target": {
                    "id": "Java",
                    "index": 6,
                    "toolComponent": {
                      "name": "IC"
                    }
                  },
                  "kinds": [
                    "superset"
                  ]
                }
              ]
            },
            {
              "id": "Java/Java language level issues",
              "name": "Java language level issues",
              "relationships": [
                {
                  "target": {
                    "id": "Java",
                    "index": 6,
                    "toolComponent": {
                      "name": "IC"
                    }
                  },
                  "kinds": [
                    "superset"
                  ]
                }
              ]
            },
            {
              "id": "HTML/Accessibility",
              "name": "Accessibility",
              "relationships": [
                {
                  "target": {
                    "id": "HTML",
                    "index": 26,
                    "toolComponent": {
                      "name": "IC"
                    }
                  },
                  "kinds": [
                    "superset"
                  ]
                }
              ]
            },
            {
              "id": "JSON and JSON5",
              "name": "JSON and JSON5"
            },
            {
              "id": "Groovy/Method metrics",
              "name": "Method metrics",
              "relationships": [
                {
                  "target": {
                    "id": "Groovy",
                    "index": 17,
                    "toolComponent": {
                      "name": "IC"
                    }
                  },
                  "kinds": [
                    "superset"
                  ]
                }
              ]
            },
            {
              "id": "Java/Inheritance issues",
              "name": "Inheritance issues",
              "relationships": [
                {
                  "target": {
                    "id": "Java",
                    "index": 6,
                    "toolComponent": {
                      "name": "IC"
                    }
                  },
                  "kinds": [
                    "superset"
                  ]
                }
              ]
            },
            {
              "id": "Wear Tile preview",
              "name": "Wear Tile preview"
            },
            {
              "id": "Kotlin/Migration/Maven",
              "name": "Maven",
              "relationships": [
                {
                  "target": {
                    "id": "Kotlin/Migration",
                    "index": 13,
                    "toolComponent": {
                      "name": "IC"
                    }
                  },
                  "kinds": [
                    "superset"
                  ]
                }
              ]
            },
            {
              "id": "Internationalization",
              "name": "Internationalization"
            },
            {
              "id": "Java/Java language level migration aids/Java 10",
              "name": "Java 10",
              "relationships": [
                {
                  "target": {
                    "id": "Java/Java language level migration aids",
                    "index": 45,
                    "toolComponent": {
                      "name": "IC"
                    }
                  },
                  "kinds": [
                    "superset"
                  ]
                }
              ]
            },
            {
              "id": "Java/Java language level migration aids/Java 7",
              "name": "Java 7",
              "relationships": [
                {
                  "target": {
                    "id": "Java/Java language level migration aids",
                    "index": 45,
                    "toolComponent": {
                      "name": "IC"
                    }
                  },
                  "kinds": [
                    "superset"
                  ]
                }
              ]
            },
            {
              "id": "Java/Compiler issues",
              "name": "Compiler issues",
              "relationships": [
                {
                  "target": {
                    "id": "Java",
                    "index": 6,
                    "toolComponent": {
                      "name": "IC"
                    }
                  },
                  "kinds": [
                    "superset"
                  ]
                }
              ]
            },
            {
              "id": "Version control",
              "name": "Version control"
            },
            {
              "id": "Kotlin/Migration/Gradle",
              "name": "Gradle",
              "relationships": [
                {
                  "target": {
                    "id": "Kotlin/Migration",
                    "index": 13,
                    "toolComponent": {
                      "name": "IC"
                    }
                  },
                  "kinds": [
                    "superset"
                  ]
                }
              ]
            },
            {
              "id": "Java/Memory",
              "name": "Memory",
              "relationships": [
                {
                  "target": {
                    "id": "Java",
                    "index": 6,
                    "toolComponent": {
                      "name": "IC"
                    }
                  },
                  "kinds": [
                    "superset"
                  ]
                }
              ]
            },
            {
              "id": "Structural search",
              "name": "Structural search"
            },
            {
              "id": "Gradle/Style",
              "name": "Style",
              "relationships": [
                {
                  "target": {
                    "id": "Gradle",
                    "index": 32,
                    "toolComponent": {
                      "name": "IC"
                    }
                  },
                  "kinds": [
                    "superset"
                  ]
                }
              ]
            },
            {
              "id": "YAML",
              "name": "YAML"
            },
            {
              "id": "Java/Performance/Embedded",
              "name": "Embedded",
              "relationships": [
                {
                  "target": {
                    "id": "Java/Performance",
                    "index": 8,
                    "toolComponent": {
                      "name": "IC"
                    }
                  },
                  "kinds": [
                    "superset"
                  ]
                }
              ]
            },
            {
              "id": "Java/Probable bugs/Nullability problems",
              "name": "Nullability problems",
              "relationships": [
                {
                  "target": {
                    "id": "Java/Probable bugs",
                    "index": 12,
                    "toolComponent": {
                      "name": "IC"
                    }
                  },
                  "kinds": [
                    "superset"
                  ]
                }
              ]
            },
            {
              "id": "RELAX NG",
              "name": "RELAX NG"
            },
            {
              "id": "Android Lint: Lint",
              "name": "Android Lint: Lint"
            },
            {
              "id": "Java/Properties files",
              "name": "Properties files",
              "relationships": [
                {
                  "target": {
                    "id": "Java",
                    "index": 6,
                    "toolComponent": {
                      "name": "IC"
                    }
                  },
                  "kinds": [
                    "superset"
                  ]
                }
              ]
            },
            {
              "id": "Android Lint: Testing",
              "name": "Android Lint: Testing"
            },
            {
              "id": "Glance Preview",
              "name": "Glance Preview"
            },
            {
              "id": "Java/Java language level migration aids/Java 11",
              "name": "Java 11",
              "relationships": [
                {
                  "target": {
                    "id": "Java/Java language level migration aids",
                    "index": 45,
                    "toolComponent": {
                      "name": "IC"
                    }
                  },
                  "kinds": [
                    "superset"
                  ]
                }
              ]
            },
            {
              "id": "Groovy/Data flow",
              "name": "Data flow",
              "relationships": [
                {
                  "target": {
                    "id": "Groovy",
                    "index": 17,
                    "toolComponent": {
                      "name": "IC"
                    }
                  },
                  "kinds": [
                    "superset"
                  ]
                }
              ]
            },
            {
              "id": "Kotlin Android",
              "name": "Kotlin Android"
            },
            {
              "id": "Qodana",
              "name": "Qodana"
            },
            {
              "id": "Android Lint: Compliance",
              "name": "Android Lint: Compliance"
            },
            {
              "id": "Gradle Declarative",
              "name": "Gradle Declarative"
            },
            {
              "id": "Java/Java language level migration aids/Java 16",
              "name": "Java 16",
              "relationships": [
                {
                  "target": {
                    "id": "Java/Java language level migration aids",
                    "index": 45,
                    "toolComponent": {
                      "name": "IC"
                    }
                  },
                  "kinds": [
                    "superset"
                  ]
                }
              ]
            },
            {
              "id": "Shell script",
              "name": "Shell script"
            },
            {
              "id": "Java/Java language level migration aids/Java 21",
              "name": "Java 21",
              "relationships": [
                {
                  "target": {
                    "id": "Java/Java language level migration aids",
                    "index": 45,
                    "toolComponent": {
                      "name": "IC"
                    }
                  },
                  "kinds": [
                    "superset"
                  ]
                }
              ]
            },
            {
              "id": "Groovy/Other",
              "name": "Other",
              "relationships": [
                {
                  "target": {
                    "id": "Groovy",
                    "index": 17,
                    "toolComponent": {
                      "name": "IC"
                    }
                  },
                  "kinds": [
                    "superset"
                  ]
                }
              ]
            },
            {
              "id": "Java/Bitwise operation issues",
              "name": "Bitwise operation issues",
              "relationships": [
                {
                  "target": {
                    "id": "Java",
                    "index": 6,
                    "toolComponent": {
                      "name": "IC"
                    }
                  },
                  "kinds": [
                    "superset"
                  ]
                }
              ]
            },
            {
              "id": "Groovy/Validity issues",
              "name": "Validity issues",
              "relationships": [
                {
                  "target": {
                    "id": "Groovy",
                    "index": 17,
                    "toolComponent": {
                      "name": "IC"
                    }
                  },
                  "kinds": [
                    "superset"
                  ]
                }
              ]
            },
            {
              "id": "TOML",
              "name": "TOML"
            },
            {
              "id": "Kotlin/Logging",
              "name": "Logging",
              "relationships": [
                {
                  "target": {
                    "id": "Kotlin",
                    "index": 2,
                    "toolComponent": {
                      "name": "IC"
                    }
                  },
                  "kinds": [
                    "superset"
                  ]
                }
              ]
            },
            {
              "id": "Java/toString() issues",
              "name": "toString() issues",
              "relationships": [
                {
                  "target": {
                    "id": "Java",
                    "index": 6,
                    "toolComponent": {
                      "name": "IC"
                    }
                  },
                  "kinds": [
                    "superset"
                  ]
                }
              ]
            },
            {
              "id": "Kotlin/React",
              "name": "React",
              "relationships": [
                {
                  "target": {
                    "id": "Kotlin",
                    "index": 2,
                    "toolComponent": {
                      "name": "IC"
                    }
                  },
                  "kinds": [
                    "superset"
                  ]
                }
              ]
            },
            {
              "id": "Kotlin/React/Probable bugs",
              "name": "Probable bugs",
              "relationships": [
                {
                  "target": {
                    "id": "Kotlin/React",
                    "index": 145,
                    "toolComponent": {
                      "name": "IC"
                    }
                  },
                  "kinds": [
                    "superset"
                  ]
                }
              ]
            },
            {
              "id": "Gradle/Best practises",
              "name": "Best practises",
              "relationships": [
                {
                  "target": {
                    "id": "Gradle",
                    "index": 32,
                    "toolComponent": {
                      "name": "IC"
                    }
                  },
                  "kinds": [
                    "superset"
                  ]
                }
              ]
            },
            {
              "id": "Kotlin/Coroutine inspections",
              "name": "Coroutine inspections",
              "relationships": [
                {
                  "target": {
                    "id": "Kotlin",
                    "index": 2,
                    "toolComponent": {
                      "name": "IC"
                    }
                  },
                  "kinds": [
                    "superset"
                  ]
                }
              ]
            },
            {
              "id": "Groovy/Declaration redundancy",
              "name": "Declaration redundancy",
              "relationships": [
                {
                  "target": {
                    "id": "Groovy",
                    "index": 17,
                    "toolComponent": {
                      "name": "IC"
                    }
                  },
                  "kinds": [
                    "superset"
                  ]
                }
              ]
            }
          ],
          "language": "en-US",
          "contents": [
            "localizedData",
            "nonLocalizedData"
          ],
          "isComprehensive": false
        },
        "extensions": [
          {
            "name": "org.intellij.intelliLang",
            "version": "242.20224.419",
            "rules": [
              {
                "id": "InjectionNotApplicable",
                "shortDescription": {
                  "text": "Injection annotation is not applicable"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "error",
                  "parameters": {
                    "suppressToolId": "InjectionNotApplicable",
                    "ideaSeverity": "ERROR",
                    "qodanaSeverity": "Critical"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Language injection",
                      "index": 0,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "PatternOverriddenByNonAnnotatedMethod",
                "shortDescription": {
                  "text": "Non-annotated Method overrides @Pattern Method"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "PatternOverriddenByNonAnnotatedMethod",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Pattern validation",
                      "index": 104,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "InjectedReferences",
                "shortDescription": {
                  "text": "Injected references"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "error",
                  "parameters": {
                    "suppressToolId": "InjectedReferences",
                    "ideaSeverity": "ERROR",
                    "qodanaSeverity": "Critical"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "General",
                      "index": 36,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "PatternNotApplicable",
                "shortDescription": {
                  "text": "Pattern annotation is not applicable"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "error",
                  "parameters": {
                    "suppressToolId": "PatternNotApplicable",
                    "ideaSeverity": "ERROR",
                    "qodanaSeverity": "Critical"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Pattern validation",
                      "index": 104,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "UnknownLanguage",
                "shortDescription": {
                  "text": "Unknown Language ID"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "error",
                  "parameters": {
                    "suppressToolId": "UnknownLanguage",
                    "ideaSeverity": "ERROR",
                    "qodanaSeverity": "Critical"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Language injection",
                      "index": 0,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "PatternValidation",
                "shortDescription": {
                  "text": "Validate annotated patterns"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "PatternValidation",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Pattern validation",
                      "index": 104,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "LanguageMismatch",
                "shortDescription": {
                  "text": "Language mismatch"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "LanguageMismatch",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Language injection",
                      "index": 0,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              }
            ],
            "language": "en-US",
            "contents": [
              "localizedData",
              "nonLocalizedData"
            ],
            "isComprehensive": false
          },
          {
            "name": "com.intellij.java",
            "version": "242.20224.419",
            "rules": [
              {
                "id": "OverrideOnly",
                "shortDescription": {
                  "text": "Method can only be overridden"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": true,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "OverrideOnly",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "JVM languages",
                      "index": 1,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "CallToSuspiciousStringMethod",
                "shortDescription": {
                  "text": "Call to suspicious 'String' method"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "CallToSuspiciousStringMethod",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Internationalization",
                      "index": 7,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "KeySetIterationMayUseEntrySet",
                "shortDescription": {
                  "text": "Iteration over 'keySet()' can be optimized"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "KeySetIterationMayUseEntrySet",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Performance",
                      "index": 8,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "UnnecessaryQualifierForThis",
                "shortDescription": {
                  "text": "Unnecessary qualifier for 'this' or 'super'"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "UnnecessaryQualifierForThis",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Code style issues",
                      "index": 9,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "UncheckedExceptionClass",
                "shortDescription": {
                  "text": "Unchecked 'Exception' class"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "UncheckedExceptionClass",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Error handling",
                      "index": 10,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "UnusedReturnValue",
                "shortDescription": {
                  "text": "Method can be made 'void'"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "UnusedReturnValue",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Declaration redundancy",
                      "index": 11,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "SizeReplaceableByIsEmpty",
                "shortDescription": {
                  "text": "'size() == 0' can be replaced with 'isEmpty()'"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "SizeReplaceableByIsEmpty",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Code style issues",
                      "index": 9,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "UnsupportedChronoFieldUnitCall",
                "shortDescription": {
                  "text": "Call methods with unsupported 'java.time.temporal.ChronoUnit' and 'java.time.temporal.ChronoField'"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": true,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "UnsupportedChronoFieldUnitCall",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Probable bugs",
                      "index": 12,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "NumberEquality",
                "shortDescription": {
                  "text": "Number comparison using '==', instead of 'equals()'"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": true,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "NumberEquality",
                    "cweIds": [
                      480
                    ],
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Probable bugs",
                      "index": 12,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "ClassWithOnlyPrivateConstructors",
                "shortDescription": {
                  "text": "Class with only 'private' constructors should be declared 'final'"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "ClassWithOnlyPrivateConstructors",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Class structure",
                      "index": 15,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "ComparatorNotSerializable",
                "shortDescription": {
                  "text": "'Comparator' class not declared 'Serializable'"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "ComparatorNotSerializable",
                    "cweIds": [
                      502
                    ],
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Serialization issues",
                      "index": 16,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "UNUSED_IMPORT",
                "shortDescription": {
                  "text": "Unused import"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "UNUSED_IMPORT",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Imports",
                      "index": 19,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "FieldAccessedSynchronizedAndUnsynchronized",
                "shortDescription": {
                  "text": "Field accessed in both 'synchronized' and unsynchronized contexts"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "FieldAccessedSynchronizedAndUnsynchronized",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Threading issues",
                      "index": 22,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "NegatedEqualityExpression",
                "shortDescription": {
                  "text": "Negated equality expression"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "NegatedEqualityExpression",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Control flow issues",
                      "index": 23,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "RemoveLiteralUnderscores",
                "shortDescription": {
                  "text": "Underscores in numeric literal"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "note",
                  "parameters": {
                    "suppressToolId": "RemoveLiteralUnderscores",
                    "ideaSeverity": "INFORMATION",
                    "qodanaSeverity": "Info"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Numeric issues",
                      "index": 24,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "MathRandomCastToInt",
                "shortDescription": {
                  "text": "'Math.random()' cast to 'int'"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": true,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "MathRandomCastToInt",
                    "cweIds": [
                      330,
                      681
                    ],
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Probable bugs",
                      "index": 12,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "DoubleBraceInitialization",
                "shortDescription": {
                  "text": "Double brace initialization"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "note",
                  "parameters": {
                    "suppressToolId": "DoubleBraceInitialization",
                    "ideaSeverity": "INFORMATION",
                    "qodanaSeverity": "Info"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Initialization",
                      "index": 25,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "StringConcatenationInLoops",
                "shortDescription": {
                  "text": "String concatenation in loop"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": true,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "StringConcatenationInLoop",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Performance",
                      "index": 8,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "CloneableClassInSecureContext",
                "shortDescription": {
                  "text": "Cloneable class in secure context"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "CloneableClassInSecureContext",
                    "cweIds": [
                      498
                    ],
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Security",
                      "index": 27,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "InconsistentTextBlockIndent",
                "shortDescription": {
                  "text": "Inconsistent whitespace indentation in text block"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": true,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "InconsistentTextBlockIndent",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Probable bugs",
                      "index": 12,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "AssertionCanBeIf",
                "shortDescription": {
                  "text": "Assertion can be replaced with 'if' statement"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "note",
                  "parameters": {
                    "suppressToolId": "AssertionCanBeIf",
                    "ideaSeverity": "INFORMATION",
                    "qodanaSeverity": "Info"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Control flow issues",
                      "index": 23,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "DoubleNegation",
                "shortDescription": {
                  "text": "Double negation"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": true,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "DoubleNegation",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Control flow issues",
                      "index": 23,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "PackageWithTooFewClasses",
                "shortDescription": {
                  "text": "Package with too few classes"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "PackageWithTooFewClasses",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Packaging issues",
                      "index": 30,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "ReplaceOnLiteralHasNoEffect",
                "shortDescription": {
                  "text": "Replacement operation has no effect"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "ReplaceOnLiteralHasNoEffect",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Verbose or redundant code constructs",
                      "index": 31,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "SingleClassImport",
                "shortDescription": {
                  "text": "Single class import"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "SingleClassImport",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Imports",
                      "index": 19,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "BadOddness",
                "shortDescription": {
                  "text": "Suspicious oddness check"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "BadOddness",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Numeric issues",
                      "index": 24,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "LoggingConditionDisagreesWithLogLevelStatement",
                "shortDescription": {
                  "text": "Log condition does not match logging call"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "LoggingConditionDisagreesWithLogLevelStatement",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "JVM languages/Logging",
                      "index": 34,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "SystemOutErr",
                "shortDescription": {
                  "text": "Use of 'System.out' or 'System.err'"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "note",
                  "parameters": {
                    "suppressToolId": "UseOfSystemOutOrSystemErr",
                    "ideaSeverity": "INFORMATION",
                    "qodanaSeverity": "Info"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Code maturity",
                      "index": 38,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "CheckedExceptionClass",
                "shortDescription": {
                  "text": "Checked exception class"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "CheckedExceptionClass",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Error handling",
                      "index": 10,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "SerializableStoresNonSerializable",
                "shortDescription": {
                  "text": "'Serializable' object implicitly stores non-'Serializable' object"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "SerializableStoresNonSerializable",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Serialization issues",
                      "index": 16,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "InsertLiteralUnderscores",
                "shortDescription": {
                  "text": "Unreadable numeric literal"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "note",
                  "parameters": {
                    "suppressToolId": "InsertLiteralUnderscores",
                    "ideaSeverity": "INFORMATION",
                    "qodanaSeverity": "Info"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Numeric issues",
                      "index": 24,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "BreakStatement",
                "shortDescription": {
                  "text": "'break' statement"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "BreakStatement",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Control flow issues",
                      "index": 23,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "JDBCExecuteWithNonConstantString",
                "shortDescription": {
                  "text": "Call to 'Statement.execute()' with non-constant string"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "JDBCExecuteWithNonConstantString",
                    "cweIds": [
                      89,
                      564
                    ],
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Security",
                      "index": 27,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "ConstantValueVariableUse",
                "shortDescription": {
                  "text": "Use of variable whose value is known to be constant"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "ConstantValueVariableUse",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Data flow",
                      "index": 43,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "NewStringBufferWithCharArgument",
                "shortDescription": {
                  "text": "StringBuilder constructor call with 'char' argument"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": true,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "NewStringBufferWithCharArgument",
                    "cweIds": [
                      628,
                      704
                    ],
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Probable bugs",
                      "index": 12,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "ClassGetClass",
                "shortDescription": {
                  "text": "Suspicious 'Class.getClass()' call"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": true,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "ClassGetClass",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Probable bugs",
                      "index": 12,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "ResultOfObjectAllocationIgnored",
                "shortDescription": {
                  "text": "Result of object allocation ignored"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "ResultOfObjectAllocationIgnored",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Probable bugs",
                      "index": 12,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "UnusedLibrary",
                "shortDescription": {
                  "text": "Unused library"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "UnusedLibrary",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Declaration redundancy",
                      "index": 11,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "ObsoleteCollection",
                "shortDescription": {
                  "text": "Use of obsolete collection type"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "UseOfObsoleteCollectionType",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Code maturity",
                      "index": 38,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "ForEachWithRecordPatternCanBeUsed",
                "shortDescription": {
                  "text": "Enhanced 'for' with a record pattern can be used"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "ForEachWithRecordPatternCanBeUsed",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Java language level migration aids",
                      "index": 45,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "MismatchedStringBuilderQueryUpdate",
                "shortDescription": {
                  "text": "Mismatched query and update of 'StringBuilder'"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": true,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "MismatchedQueryAndUpdateOfStringBuilder",
                    "cweIds": [
                      561,
                      563
                    ],
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Probable bugs",
                      "index": 12,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "FinalizeNotProtected",
                "shortDescription": {
                  "text": "'finalize()' should be protected, not public"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": true,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "FinalizeNotProtected",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Finalization",
                      "index": 47,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "ModuleWithTooManyClasses",
                "shortDescription": {
                  "text": "Module with too many classes"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "ModuleWithTooManyClasses",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Modularization issues",
                      "index": 48,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "InfiniteLoopStatement",
                "shortDescription": {
                  "text": "Infinite loop statement"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": true,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "InfiniteLoopStatement",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Control flow issues",
                      "index": 23,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "JavadocHtmlLint",
                "shortDescription": {
                  "text": "HTML problems in Javadoc (DocLint)"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "error",
                  "parameters": {
                    "suppressToolId": "JavadocHtmlLint",
                    "ideaSeverity": "ERROR",
                    "qodanaSeverity": "Critical"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Javadoc",
                      "index": 49,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "ClassUnconnectedToPackage",
                "shortDescription": {
                  "text": "Class independent of its package"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "ClassUnconnectedToPackage",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Packaging issues",
                      "index": 30,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "ExceptionNameDoesntEndWithException",
                "shortDescription": {
                  "text": "Exception class name does not end with 'Exception'"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "ExceptionClassNameDoesntEndWithException",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Naming conventions/Class",
                      "index": 52,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "NonFinalStaticVariableUsedInClassInitialization",
                "shortDescription": {
                  "text": "Non-final static field is used during class initialization"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "NonFinalStaticVariableUsedInClassInitialization",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Initialization",
                      "index": 25,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "ThreadStopSuspendResume",
                "shortDescription": {
                  "text": "Call to 'Thread.stop()', 'suspend()' or 'resume()'"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "CallToThreadStopSuspendOrResumeManager",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Threading issues",
                      "index": 22,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "UnnecessaryTemporaryOnConversionFromString",
                "shortDescription": {
                  "text": "Unnecessary temporary object in conversion from 'String'"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": true,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "UnnecessaryTemporaryOnConversionFromString",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Performance",
                      "index": 8,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "UseOfConcreteClass",
                "shortDescription": {
                  "text": "Use of concrete class"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "UseOfConcreteClass",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Abstraction issues",
                      "index": 53,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "RedundantLabeledSwitchRuleCodeBlock",
                "shortDescription": {
                  "text": "Labeled switch rule has redundant code block"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "RedundantLabeledSwitchRuleCodeBlock",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Code style issues",
                      "index": 9,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "IOStreamConstructor",
                "shortDescription": {
                  "text": "'InputStream' and 'OutputStream' can be constructed using 'Files' methods"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "IOStreamConstructor",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Performance",
                      "index": 8,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "AssignmentToForLoopParameter",
                "shortDescription": {
                  "text": "Assignment to 'for' loop parameter"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "AssignmentToForLoopParameter",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Assignment issues",
                      "index": 54,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "Java9CollectionFactory",
                "shortDescription": {
                  "text": "Immutable collection creation can be replaced with collection factory call"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "note",
                  "parameters": {
                    "suppressToolId": "Java9CollectionFactory",
                    "ideaSeverity": "WEAK WARNING",
                    "qodanaSeverity": "Moderate"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Java language level migration aids/Java 9",
                      "index": 55,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "MetaAnnotationWithoutRuntimeRetention",
                "shortDescription": {
                  "text": "Test annotation without '@Retention(RUNTIME)' annotation"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": true,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "MetaAnnotationWithoutRuntimeRetention",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/JUnit",
                      "index": 58,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "UnnecessaryContinue",
                "shortDescription": {
                  "text": "Unnecessary 'continue' statement"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "UnnecessaryContinue",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Verbose or redundant code constructs",
                      "index": 31,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "CStyleArrayDeclaration",
                "shortDescription": {
                  "text": "C-style array declaration"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "CStyleArrayDeclaration",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Code style issues",
                      "index": 9,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "SystemExit",
                "shortDescription": {
                  "text": "Call to 'System.exit()' or related methods"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "CallToSystemExit",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Portability",
                      "index": 60,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "DeclareCollectionAsInterface",
                "shortDescription": {
                  "text": "Collection declared by class, not interface"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "CollectionDeclaredAsConcreteClass",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Abstraction issues",
                      "index": 53,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "TrivialStringConcatenation",
                "shortDescription": {
                  "text": "Concatenation with empty string"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "ConcatenationWithEmptyString",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Verbose or redundant code constructs",
                      "index": 31,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "SuspiciousInvocationHandlerImplementation",
                "shortDescription": {
                  "text": "Suspicious 'InvocationHandler' implementation"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": true,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "SuspiciousInvocationHandlerImplementation",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Probable bugs",
                      "index": 12,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "UnreachableCode",
                "shortDescription": {
                  "text": "Unreachable code"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "UnreachableCode",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Probable bugs",
                      "index": 12,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "HtmlTagCanBeJavadocTag",
                "shortDescription": {
                  "text": "'<code>...</code>' can be replaced with '{@code ...}'"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "HtmlTagCanBeJavadocTag",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Javadoc",
                      "index": 49,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "ClassEscapesItsScope",
                "shortDescription": {
                  "text": "Class is exposed outside of its visibility scope"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": true,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "ClassEscapesDefinedScope",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Visibility",
                      "index": 64,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "EqualsUsesNonFinalVariable",
                "shortDescription": {
                  "text": "Non-final field referenced in 'equals()'"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "NonFinalFieldReferenceInEquals",
                    "cweIds": [
                      697
                    ],
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Probable bugs",
                      "index": 12,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "NestedAssignment",
                "shortDescription": {
                  "text": "Nested assignment"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "NestedAssignment",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Assignment issues",
                      "index": 54,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "AutoUnboxing",
                "shortDescription": {
                  "text": "Auto-unboxing"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "AutoUnboxing",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Performance",
                      "index": 8,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "StringConcatenationInMessageFormatCall",
                "shortDescription": {
                  "text": "String concatenation as argument to 'MessageFormat.format()' call"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "StringConcatenationInMessageFormatCall",
                    "cweIds": [
                      116,
                      134
                    ],
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Probable bugs",
                      "index": 12,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "NonFinalFieldInImmutable",
                "shortDescription": {
                  "text": "Non-final field in '@Immutable' class"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "NonFinalFieldInImmutable",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Concurrency annotation issues",
                      "index": 66,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "CallToStringConcatCanBeReplacedByOperator",
                "shortDescription": {
                  "text": "Call to 'String.concat()' can be replaced with '+'"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "CallToStringConcatCanBeReplacedByOperator",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Code style issues",
                      "index": 9,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "HardcodedFileSeparators",
                "shortDescription": {
                  "text": "Hardcoded file separator"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "HardcodedFileSeparator",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Portability",
                      "index": 60,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "ConfusingFloatingPointLiteral",
                "shortDescription": {
                  "text": "Confusing floating-point literal"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "ConfusingFloatingPointLiteral",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Numeric issues",
                      "index": 24,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "JavadocReference",
                "shortDescription": {
                  "text": "Declaration has problems in Javadoc references"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "JavadocReference",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Javadoc",
                      "index": 49,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "LoggingPlaceholderCountMatchesArgumentCount",
                "shortDescription": {
                  "text": "Number of placeholders does not match number of arguments in logging call"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": true,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "LoggingPlaceholderCountMatchesArgumentCount",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "JVM languages/Logging",
                      "index": 34,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "ImplicitArrayToString",
                "shortDescription": {
                  "text": "Call to 'toString()' on array"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": true,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "ImplicitArrayToString",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Probable bugs",
                      "index": 12,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "ReuseOfLocalVariable",
                "shortDescription": {
                  "text": "Reuse of local variable"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "note",
                  "parameters": {
                    "suppressToolId": "ReuseOfLocalVariable",
                    "ideaSeverity": "INFORMATION",
                    "qodanaSeverity": "Info"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Data flow",
                      "index": 43,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "BooleanMethodNameMustStartWithQuestion",
                "shortDescription": {
                  "text": "Boolean method name must start with question word"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "BooleanMethodNameMustStartWithQuestion",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Naming conventions/Method",
                      "index": 70,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "SynchronizationOnLocalVariableOrMethodParameter",
                "shortDescription": {
                  "text": "Synchronization on local variable or method parameter"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": true,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "SynchronizationOnLocalVariableOrMethodParameter",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Threading issues",
                      "index": 22,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "NegatedConditionalExpression",
                "shortDescription": {
                  "text": "Negated conditional expression"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "NegatedConditionalExpression",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Control flow issues",
                      "index": 23,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "FinalMethod",
                "shortDescription": {
                  "text": "Method can't be overridden"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "FinalMethod",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Class structure",
                      "index": 15,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "SuspiciousSystemArraycopy",
                "shortDescription": {
                  "text": "Suspicious 'System.arraycopy()' call"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": true,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "SuspiciousSystemArraycopy",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Probable bugs",
                      "index": 12,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "AbsoluteAlignmentInUserInterface",
                "shortDescription": {
                  "text": "Absolute alignment in AWT/Swing code"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "AbsoluteAlignmentInUserInterface",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Internationalization",
                      "index": 7,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "RedundantLambdaParameterType",
                "shortDescription": {
                  "text": "Redundant lambda parameter types"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "note",
                  "parameters": {
                    "suppressToolId": "RedundantLambdaParameterType",
                    "ideaSeverity": "INFORMATION",
                    "qodanaSeverity": "Info"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Declaration redundancy",
                      "index": 11,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "ConditionalExpression",
                "shortDescription": {
                  "text": "Conditional expression"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "note",
                  "parameters": {
                    "suppressToolId": "ConditionalExpression",
                    "ideaSeverity": "INFORMATION",
                    "qodanaSeverity": "Info"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Control flow issues",
                      "index": 23,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "SuspiciousReturnByteInputStream",
                "shortDescription": {
                  "text": "Suspicious byte value returned from 'InputStream.read()'"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": true,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "SuspiciousReturnByteInputStream",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Probable bugs",
                      "index": 12,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "UseOfClone",
                "shortDescription": {
                  "text": "Use of 'clone()' or 'Cloneable'"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "UseOfClone",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Cloning issues",
                      "index": 76,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "MissingFinalNewline",
                "shortDescription": {
                  "text": "Missing final new line"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "error",
                  "parameters": {
                    "suppressToolId": "MissingFinalNewline",
                    "ideaSeverity": "ERROR",
                    "qodanaSeverity": "Critical"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Manifest",
                      "index": 77,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "NestedTryStatement",
                "shortDescription": {
                  "text": "Nested 'try' statement"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "NestedTryStatement",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Error handling",
                      "index": 10,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "NonStaticFinalLogger",
                "shortDescription": {
                  "text": "Non-constant logger"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "NonConstantLogger",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Logging",
                      "index": 79,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "ConditionalExpressionWithIdenticalBranches",
                "shortDescription": {
                  "text": "Conditional expression with identical branches"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": true,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "ConditionalExpressionWithIdenticalBranches",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Control flow issues",
                      "index": 23,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "OnlyOneElementUsed",
                "shortDescription": {
                  "text": "Only one element is used"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "OnlyOneElementUsed",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Verbose or redundant code constructs",
                      "index": 31,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "UnnecessaryBoxing",
                "shortDescription": {
                  "text": "Unnecessary boxing"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "UnnecessaryBoxing",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Java language level migration aids/Java 5",
                      "index": 82,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "BadExceptionThrown",
                "shortDescription": {
                  "text": "Prohibited exception thrown"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "ProhibitedExceptionThrown",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Error handling",
                      "index": 10,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "Anonymous2MethodRef",
                "shortDescription": {
                  "text": "Anonymous type can be replaced with method reference"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "Anonymous2MethodRef",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Java language level migration aids/Java 8",
                      "index": 85,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "PublicMethodNotExposedInInterface",
                "shortDescription": {
                  "text": "'public' method not exposed in interface"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "PublicMethodNotExposedInInterface",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Abstraction issues",
                      "index": 53,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "SerializableHasSerialVersionUIDField",
                "shortDescription": {
                  "text": "Serializable class without 'serialVersionUID'"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "serial",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "JVM languages",
                      "index": 1,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "TestCaseWithNoTestMethods",
                "shortDescription": {
                  "text": "Test class without tests"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "JUnitTestCaseWithNoTests",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "JVM languages/Test frameworks",
                      "index": 86,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "MismatchedArrayReadWrite",
                "shortDescription": {
                  "text": "Mismatched read and write of array"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": true,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "MismatchedReadAndWriteOfArray",
                    "cweIds": [
                      561,
                      563
                    ],
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Probable bugs",
                      "index": 12,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "UnnecessarilyQualifiedStaticUsage",
                "shortDescription": {
                  "text": "Unnecessarily qualified static access"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "UnnecessarilyQualifiedStaticUsage",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Code style issues",
                      "index": 9,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "CollectionsMustHaveInitialCapacity",
                "shortDescription": {
                  "text": "Collection without initial capacity"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "CollectionWithoutInitialCapacity",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Performance",
                      "index": 8,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "SystemGetProperty",
                "shortDescription": {
                  "text": "Call to 'System.getProperty(str)' could be simplified"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": true,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "SystemGetProperty",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "JVM languages",
                      "index": 1,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "ClassOnlyUsedInOneModule",
                "shortDescription": {
                  "text": "Class only used from one other module"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "ClassOnlyUsedInOneModule",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Modularization issues",
                      "index": 48,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "TryStatementWithMultipleResources",
                "shortDescription": {
                  "text": "'try' statement with multiple resources can be split"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "note",
                  "parameters": {
                    "suppressToolId": "TryStatementWithMultipleResources",
                    "ideaSeverity": "INFORMATION",
                    "qodanaSeverity": "Info"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Code style issues",
                      "index": 9,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "CloneableImplementsClone",
                "shortDescription": {
                  "text": "Cloneable class without 'clone()' method"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": true,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "CloneableClassWithoutClone",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Cloning issues",
                      "index": 76,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "TypeMayBeWeakened",
                "shortDescription": {
                  "text": "Type may be weakened"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "TypeMayBeWeakened",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Abstraction issues",
                      "index": 53,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "OctalAndDecimalIntegersMixed",
                "shortDescription": {
                  "text": "Octal and decimal integers in same array"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "OctalAndDecimalIntegersInSameArray",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Numeric issues",
                      "index": 24,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "Deprecation",
                "shortDescription": {
                  "text": "Deprecated API usage"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "deprecation",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Code maturity",
                      "index": 38,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "ConditionSignal",
                "shortDescription": {
                  "text": "Call to 'signal()' instead of 'signalAll()'"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "CallToSignalInsteadOfSignalAll",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Threading issues",
                      "index": 22,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "PublicMethodWithoutLogging",
                "shortDescription": {
                  "text": "'public' method without logging"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "PublicMethodWithoutLogging",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Logging",
                      "index": 79,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "ClassNestingDepth",
                "shortDescription": {
                  "text": "Inner class too deeply nested"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "InnerClassTooDeeplyNested",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Class metrics",
                      "index": 90,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "LambdaParameterTypeCanBeSpecified",
                "shortDescription": {
                  "text": "Lambda parameter type can be specified"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "note",
                  "parameters": {
                    "suppressToolId": "LambdaParameterTypeCanBeSpecified",
                    "ideaSeverity": "INFORMATION",
                    "qodanaSeverity": "Info"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Code style issues",
                      "index": 9,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "TextLabelInSwitchStatement",
                "shortDescription": {
                  "text": "Text label in 'switch' statement"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": true,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "TextLabelInSwitchStatement",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Probable bugs",
                      "index": 12,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "PackageVisibleInnerClass",
                "shortDescription": {
                  "text": "Package-visible nested class"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "PackageVisibleInnerClass",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Encapsulation",
                      "index": 93,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "UnnecessaryUnaryMinus",
                "shortDescription": {
                  "text": "Unnecessary unary minus"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": true,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "UnnecessaryUnaryMinus",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Numeric issues",
                      "index": 24,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "MethodMayBeStatic",
                "shortDescription": {
                  "text": "Method can be made 'static'"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "MethodMayBeStatic",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Performance",
                      "index": 8,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "TestMethodWithoutAssertion",
                "shortDescription": {
                  "text": "Test method without assertions"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "TestMethodWithoutAssertion",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "JVM languages/Test frameworks",
                      "index": 86,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "EscapedSpace",
                "shortDescription": {
                  "text": "Non-terminal use of '\\s' escape sequence"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "EscapedSpace",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Code style issues",
                      "index": 9,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "ContinueStatement",
                "shortDescription": {
                  "text": "'continue' statement"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "ContinueStatement",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Control flow issues",
                      "index": 23,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "MisorderedAssertEqualsArguments",
                "shortDescription": {
                  "text": "Misordered 'assertEquals()' arguments"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "MisorderedAssertEqualsArguments",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Test frameworks",
                      "index": 94,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "StaticVariableInitialization",
                "shortDescription": {
                  "text": "Static field may not be initialized"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "StaticVariableMayNotBeInitialized",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Initialization",
                      "index": 25,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "ConstantAssertCondition",
                "shortDescription": {
                  "text": "Constant condition in 'assert' statement"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "ConstantAssertCondition",
                    "cweIds": [
                      570,
                      571
                    ],
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Probable bugs",
                      "index": 12,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "JavaReflectionInvocation",
                "shortDescription": {
                  "text": "Reflective invocation arguments mismatch"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": true,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "JavaReflectionInvocation",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Reflective access",
                      "index": 95,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "CaughtExceptionImmediatelyRethrown",
                "shortDescription": {
                  "text": "Caught exception is immediately rethrown"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": true,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "CaughtExceptionImmediatelyRethrown",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Error handling",
                      "index": 10,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "ArrayHashCode",
                "shortDescription": {
                  "text": "'hashCode()' called on array"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": true,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "ArrayHashCode",
                    "cweIds": [
                      328
                    ],
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Probable bugs",
                      "index": 12,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "WaitNotInLoop",
                "shortDescription": {
                  "text": "'wait()' not called in loop"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "WaitNotInLoop",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Threading issues",
                      "index": 22,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "ExternalizableWithSerializationMethods",
                "shortDescription": {
                  "text": "Externalizable class with 'readObject()' or 'writeObject()'"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "ExternalizableClassWithSerializationMethods",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Serialization issues",
                      "index": 16,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "SafeLock",
                "shortDescription": {
                  "text": "Lock acquired but not safely unlocked"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "LockAcquiredButNotSafelyReleased",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Threading issues",
                      "index": 22,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "JavaLangInvokeHandleSignature",
                "shortDescription": {
                  "text": "MethodHandle/VarHandle type mismatch"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": true,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "JavaLangInvokeHandleSignature",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Reflective access",
                      "index": 95,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "ReturnThis",
                "shortDescription": {
                  "text": "Return of 'this'"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "ReturnOfThis",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Code style issues",
                      "index": 9,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "CanBeFinal",
                "shortDescription": {
                  "text": "Declaration can have 'final' modifier"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "CanBeFinal",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Declaration redundancy",
                      "index": 11,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "UnnecessaryLabelOnBreakStatement",
                "shortDescription": {
                  "text": "Unnecessary label on 'break' statement"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "UnnecessaryLabelOnBreakStatement",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Verbose or redundant code constructs",
                      "index": 31,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "NakedNotify",
                "shortDescription": {
                  "text": "'notify()' or 'notifyAll()' without corresponding state change"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "NakedNotify",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Threading issues",
                      "index": 22,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "ClassCoupling",
                "shortDescription": {
                  "text": "Overly coupled class"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "OverlyCoupledClass",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Class metrics",
                      "index": 90,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "EmptySynchronizedStatement",
                "shortDescription": {
                  "text": "Empty 'synchronized' statement"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": true,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "EmptySynchronizedStatement",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Threading issues",
                      "index": 22,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "TextBlockMigration",
                "shortDescription": {
                  "text": "Text block can be used"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "TextBlockMigration",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Java language level migration aids/Java 15",
                      "index": 97,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "ObjectAllocationInLoop",
                "shortDescription": {
                  "text": "Object allocation in loop"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "ObjectAllocationInLoop",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Performance",
                      "index": 8,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "NonFinalClone",
                "shortDescription": {
                  "text": "Non-final 'clone()' in secure context"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "NonFinalClone",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Security",
                      "index": 27,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "ChainedEquality",
                "shortDescription": {
                  "text": "Chained equality comparisons"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "ChainedEqualityComparisons",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Code style issues",
                      "index": 9,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "LossyConversionCompoundAssignment",
                "shortDescription": {
                  "text": "Possibly lossy implicit cast in compound assignment"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": true,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "lossy-conversions",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Numeric issues",
                      "index": 24,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "ThrowFromFinallyBlock",
                "shortDescription": {
                  "text": "'throw' inside 'finally' block"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": true,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "ThrowFromFinallyBlock",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Error handling",
                      "index": 10,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "StaticNonFinalField",
                "shortDescription": {
                  "text": "'static', non-'final' field"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "StaticNonFinalField",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Class structure",
                      "index": 15,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "EmptyMethod",
                "shortDescription": {
                  "text": "Empty method"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "EmptyMethod",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "JVM languages",
                      "index": 1,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "SimplifiableEqualsExpression",
                "shortDescription": {
                  "text": "Unnecessary 'null' check before 'equals()' call"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "SimplifiableEqualsExpression",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Code style issues",
                      "index": 9,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "NonCommentSourceStatements",
                "shortDescription": {
                  "text": "Overly long method"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "OverlyLongMethod",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Method metrics",
                      "index": 98,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "ConfusingMainMethod",
                "shortDescription": {
                  "text": "Confusing 'main()' method"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": true,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "ConfusingMainMethod",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Probable bugs",
                      "index": 12,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "MultipleVariablesInDeclaration",
                "shortDescription": {
                  "text": "Multiple variables in one declaration"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "note",
                  "parameters": {
                    "suppressToolId": "MultipleVariablesInDeclaration",
                    "ideaSeverity": "INFORMATION",
                    "qodanaSeverity": "Info"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Code style issues",
                      "index": 9,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "IOResource",
                "shortDescription": {
                  "text": "I/O resource opened but not safely closed"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "IOResourceOpenedButNotSafelyClosed",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Resource management",
                      "index": 99,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "CallToSimpleGetterInClass",
                "shortDescription": {
                  "text": "Call to simple getter from within class"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "CallToSimpleGetterFromWithinClass",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Performance",
                      "index": 8,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "NonSerializableFieldInSerializableClass",
                "shortDescription": {
                  "text": "Non-serializable field in a 'Serializable' class"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "NonSerializableFieldInSerializableClass",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Serialization issues",
                      "index": 16,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "EnhancedSwitchMigration",
                "shortDescription": {
                  "text": "Statement can be replaced with enhanced 'switch'"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "EnhancedSwitchMigration",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Java language level migration aids/Java 14",
                      "index": 100,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "DoubleLiteralMayBeFloatLiteral",
                "shortDescription": {
                  "text": "Cast to 'float' can be 'float' literal"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "DoubleLiteralMayBeFloatLiteral",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Numeric issues/Cast",
                      "index": 101,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "OverloadedMethodsWithSameNumberOfParameters",
                "shortDescription": {
                  "text": "Overloaded methods with same number of parameters"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "OverloadedMethodsWithSameNumberOfParameters",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Naming conventions/Method",
                      "index": 70,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "OverlyLongLambda",
                "shortDescription": {
                  "text": "Overly long lambda expression"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "OverlyLongLambda",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Method metrics",
                      "index": 98,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "ParametersPerMethod",
                "shortDescription": {
                  "text": "Method with too many parameters"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "MethodWithTooManyParameters",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Method metrics",
                      "index": 98,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "CloneDeclaresCloneNotSupported",
                "shortDescription": {
                  "text": "'clone()' does not declare 'CloneNotSupportedException'"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": true,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "CloneDoesntDeclareCloneNotSupportedException",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Cloning issues",
                      "index": 76,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "BooleanExpressionMayBeConditional",
                "shortDescription": {
                  "text": "Boolean expression can be replaced with conditional expression"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "note",
                  "parameters": {
                    "suppressToolId": "BooleanExpressionMayBeConditional",
                    "ideaSeverity": "INFORMATION",
                    "qodanaSeverity": "Info"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Control flow issues",
                      "index": 23,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "UnnecessaryExplicitNumericCast",
                "shortDescription": {
                  "text": "Unnecessary explicit numeric cast"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "UnnecessaryExplicitNumericCast",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Numeric issues/Cast",
                      "index": 101,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "TransientFieldNotInitialized",
                "shortDescription": {
                  "text": "Transient field is not initialized on deserialization"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "TransientFieldNotInitialized",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Serialization issues",
                      "index": 16,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "PropertyValueSetToItself",
                "shortDescription": {
                  "text": "Property value set to itself"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "PropertyValueSetToItself",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/JavaBeans issues",
                      "index": 102,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "ClassInitializer",
                "shortDescription": {
                  "text": "Non-'static' initializer"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "NonStaticInitializer",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Class structure",
                      "index": 15,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "ContinueOrBreakFromFinallyBlock",
                "shortDescription": {
                  "text": "'continue' or 'break' inside 'finally' block"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": true,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "ContinueOrBreakFromFinallyBlock",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Error handling",
                      "index": 10,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "LengthOneStringsInConcatenation",
                "shortDescription": {
                  "text": "Single character string concatenation"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "note",
                  "parameters": {
                    "suppressToolId": "SingleCharacterStringConcatenation",
                    "ideaSeverity": "INFORMATION",
                    "qodanaSeverity": "Info"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Performance",
                      "index": 8,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "ClassWithTooManyTransitiveDependencies",
                "shortDescription": {
                  "text": "Class with too many transitive dependencies"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "ClassWithTooManyTransitiveDependencies",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Dependency issues",
                      "index": 105,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "UnnecessaryThis",
                "shortDescription": {
                  "text": "Unnecessary 'this' qualifier"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "UnnecessaryThis",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Code style issues",
                      "index": 9,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "ExplicitArrayFilling",
                "shortDescription": {
                  "text": "Explicit array filling"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "ExplicitArrayFilling",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Verbose or redundant code constructs",
                      "index": 31,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "LoopWithImplicitTerminationCondition",
                "shortDescription": {
                  "text": "Loop with implicit termination condition"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "LoopWithImplicitTerminationCondition",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Control flow issues",
                      "index": 23,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "BadExceptionDeclared",
                "shortDescription": {
                  "text": "Prohibited exception declared"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "ProhibitedExceptionDeclared",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Error handling",
                      "index": 10,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "IntegerMultiplicationImplicitCastToLong",
                "shortDescription": {
                  "text": "Integer multiplication or shift implicitly cast to 'long'"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": true,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "IntegerMultiplicationImplicitCastToLong",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Numeric issues/Cast",
                      "index": 101,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "ReplaceAssignmentWithOperatorAssignment",
                "shortDescription": {
                  "text": "Assignment can be replaced with operator assignment"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "note",
                  "parameters": {
                    "suppressToolId": "AssignmentReplaceableWithOperatorAssignment",
                    "ideaSeverity": "INFORMATION",
                    "qodanaSeverity": "Info"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Assignment issues",
                      "index": 54,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "ReturnFromFinallyBlock",
                "shortDescription": {
                  "text": "'return' inside 'finally' block"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": true,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "ReturnInsideFinallyBlock",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Error handling",
                      "index": 10,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "RedundantExplicitClose",
                "shortDescription": {
                  "text": "Redundant 'close()'"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "RedundantExplicitClose",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Declaration redundancy",
                      "index": 11,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "AssertStatement",
                "shortDescription": {
                  "text": "'assert' statement"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "AssertStatement",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Java language level issues",
                      "index": 106,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "UnnecessarySemicolon",
                "shortDescription": {
                  "text": "Unnecessary semicolon"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "UnnecessarySemicolon",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Code style issues",
                      "index": 9,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "JavadocBlankLines",
                "shortDescription": {
                  "text": "Blank line should be replaced with <p> to break lines"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "JavadocBlankLines",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Javadoc",
                      "index": 49,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "TypeParameterExtendsFinalClass",
                "shortDescription": {
                  "text": "Type parameter extends 'final' class"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "TypeParameterExtendsFinalClass",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Inheritance issues",
                      "index": 110,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "UtilityClassWithPublicConstructor",
                "shortDescription": {
                  "text": "Utility class with 'public' constructor"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "UtilityClassWithPublicConstructor",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Class structure",
                      "index": 15,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "TrivialIf",
                "shortDescription": {
                  "text": "Redundant 'if' statement"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "RedundantIfStatement",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Control flow issues",
                      "index": 23,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "InstanceGuardedByStatic",
                "shortDescription": {
                  "text": "Instance member guarded by static field"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "InstanceGuardedByStatic",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Concurrency annotation issues",
                      "index": 66,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "BooleanMethodIsAlwaysInverted",
                "shortDescription": {
                  "text": "Boolean method is always inverted"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "BooleanMethodIsAlwaysInverted",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Data flow",
                      "index": 43,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "AutoCloseableResource",
                "shortDescription": {
                  "text": "AutoCloseable used without 'try'-with-resources"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": true,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "resource",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Resource management",
                      "index": 99,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "SingleStatementInBlock",
                "shortDescription": {
                  "text": "Code block contains single statement"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "note",
                  "parameters": {
                    "suppressToolId": "SingleStatementInBlock",
                    "ideaSeverity": "INFORMATION",
                    "qodanaSeverity": "Info"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Code style issues",
                      "index": 9,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "TestCaseWithConstructor",
                "shortDescription": {
                  "text": "TestCase with non-trivial constructors"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "JUnitTestCaseWithNonTrivialConstructors",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "JVM languages/Test frameworks",
                      "index": 86,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "ReadObjectAndWriteObjectPrivate",
                "shortDescription": {
                  "text": "'readObject()' or 'writeObject()' not declared 'private'"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "NonPrivateSerializationMethod",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Serialization issues",
                      "index": 16,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "RedundantFileCreation",
                "shortDescription": {
                  "text": "Redundant 'File' instance creation"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "RedundantFileCreation",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Verbose or redundant code constructs",
                      "index": 31,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "PointlessBooleanExpression",
                "shortDescription": {
                  "text": "Pointless boolean expression"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": true,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "PointlessBooleanExpression",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Control flow issues",
                      "index": 23,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "ListenerMayUseAdapter",
                "shortDescription": {
                  "text": "Class may extend adapter instead of implementing listener"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "ListenerMayUseAdapter",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Class structure",
                      "index": 15,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "ExpressionComparedToItself",
                "shortDescription": {
                  "text": "Expression is compared to itself"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": true,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "ExpressionComparedToItself",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Probable bugs",
                      "index": 12,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "RefusedBequest",
                "shortDescription": {
                  "text": "Method does not call super method"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": true,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "MethodDoesntCallSuperMethod",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Inheritance issues",
                      "index": 110,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "UnnecessaryReturn",
                "shortDescription": {
                  "text": "Unnecessary 'return' statement"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "UnnecessaryReturnStatement",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Verbose or redundant code constructs",
                      "index": 31,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "PublicInnerClass",
                "shortDescription": {
                  "text": "'public' nested class"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "PublicInnerClass",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Encapsulation",
                      "index": 93,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "NonFinalGuard",
                "shortDescription": {
                  "text": "Non-final '@GuardedBy' field"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "NonFinalGuard",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Concurrency annotation issues",
                      "index": 66,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "CollectionAddedToSelf",
                "shortDescription": {
                  "text": "Collection added to itself"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": true,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "CollectionAddedToSelf",
                    "cweIds": [
                      664,
                      688
                    ],
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Probable bugs",
                      "index": 12,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "UnnecessarySuperQualifier",
                "shortDescription": {
                  "text": "Unnecessary 'super' qualifier"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "UnnecessarySuperQualifier",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Code style issues",
                      "index": 9,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "EqualsOnSuspiciousObject",
                "shortDescription": {
                  "text": "'equals()' called on classes which don't override it"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": true,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "EqualsOnSuspiciousObject",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Probable bugs",
                      "index": 12,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "UseOfPropertiesAsHashtable",
                "shortDescription": {
                  "text": "Use of 'Properties' object as a 'Hashtable'"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "UseOfPropertiesAsHashtable",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Probable bugs",
                      "index": 12,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "MethodCoupling",
                "shortDescription": {
                  "text": "Overly coupled method"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "OverlyCoupledMethod",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Method metrics",
                      "index": 98,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "AccessToStaticFieldLockedOnInstance",
                "shortDescription": {
                  "text": "Access to 'static' field locked on instance data"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "AccessToStaticFieldLockedOnInstance",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Threading issues",
                      "index": 22,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "VariableTypeCanBeExplicit",
                "shortDescription": {
                  "text": "Variable type can be explicit"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "note",
                  "parameters": {
                    "suppressToolId": "VariableTypeCanBeExplicit",
                    "ideaSeverity": "INFORMATION",
                    "qodanaSeverity": "Info"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Java language level migration aids/Java 10",
                      "index": 114,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "Java8ListSort",
                "shortDescription": {
                  "text": "'Collections.sort()' can be replaced with 'List.sort()'"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "Java8ListSort",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Java language level migration aids/Java 8",
                      "index": 85,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "ComparatorCombinators",
                "shortDescription": {
                  "text": "'Comparator' combinator can be used"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "ComparatorCombinators",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Java language level migration aids/Java 8",
                      "index": 85,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "AbstractMethodCallInConstructor",
                "shortDescription": {
                  "text": "Abstract method called during object construction"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "AbstractMethodCallInConstructor",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Initialization",
                      "index": 25,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "EqualsReplaceableByObjectsCall",
                "shortDescription": {
                  "text": "'equals()' expression replaceable by 'Objects.equals()' expression"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "note",
                  "parameters": {
                    "suppressToolId": "EqualsReplaceableByObjectsCall",
                    "ideaSeverity": "WEAK WARNING",
                    "qodanaSeverity": "Moderate"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Java language level migration aids/Java 7",
                      "index": 115,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "TailRecursion",
                "shortDescription": {
                  "text": "Tail recursion"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "note",
                  "parameters": {
                    "suppressToolId": "TailRecursion",
                    "ideaSeverity": "INFORMATION",
                    "qodanaSeverity": "Info"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Performance",
                      "index": 8,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "StringEqualsEmptyString",
                "shortDescription": {
                  "text": "'String.equals()' can be replaced with 'String.isEmpty()'"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "StringEqualsEmptyString",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Performance",
                      "index": 8,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "PreviewFeature",
                "shortDescription": {
                  "text": "Preview Feature warning"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": true,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "preview",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Compiler issues",
                      "index": 116,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "TooBroadThrows",
                "shortDescription": {
                  "text": "Overly broad 'throws' clause"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "OverlyBroadThrowsClause",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Error handling",
                      "index": 10,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "ImplicitSubclassInspection",
                "shortDescription": {
                  "text": "Final declaration can't be overridden at runtime"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": true,
                  "level": "error",
                  "parameters": {
                    "suppressToolId": "ImplicitSubclassInspection",
                    "ideaSeverity": "ERROR",
                    "qodanaSeverity": "Critical"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Inheritance issues",
                      "index": 110,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "ObjectEqualsCanBeEquality",
                "shortDescription": {
                  "text": "'equals()' call can be replaced with '=='"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "note",
                  "parameters": {
                    "suppressToolId": "ObjectEqualsCanBeEquality",
                    "ideaSeverity": "INFORMATION",
                    "qodanaSeverity": "Info"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Performance",
                      "index": 8,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "JDBCPrepareStatementWithNonConstantString",
                "shortDescription": {
                  "text": "Call to 'Connection.prepare*()' with non-constant string"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "JDBCPrepareStatementWithNonConstantString",
                    "cweIds": [
                      89
                    ],
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Security",
                      "index": 27,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "SystemProperties",
                "shortDescription": {
                  "text": "Access of system properties"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "AccessOfSystemProperties",
                    "cweIds": [
                      250,
                      668
                    ],
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Security",
                      "index": 27,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "InvalidComparatorMethodReference",
                "shortDescription": {
                  "text": "Invalid method reference used for 'Comparator'"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": true,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "InvalidComparatorMethodReference",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Probable bugs",
                      "index": 12,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "ToArrayCallWithZeroLengthArrayArgument",
                "shortDescription": {
                  "text": "'Collection.toArray()' call style"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": true,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "ToArrayCallWithZeroLengthArrayArgument",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Performance",
                      "index": 8,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "Java9ModuleExportsPackageToItself",
                "shortDescription": {
                  "text": "Module exports/opens package to itself"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": true,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "Java9ModuleExportsPackageToItself",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Visibility",
                      "index": 64,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "LoggerInitializedWithForeignClass",
                "shortDescription": {
                  "text": "Logger initialized with foreign class"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": true,
                  "level": "note",
                  "parameters": {
                    "suppressToolId": "LoggerInitializedWithForeignClass",
                    "ideaSeverity": "WEAK WARNING",
                    "qodanaSeverity": "Moderate"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Logging",
                      "index": 79,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "MarkerInterface",
                "shortDescription": {
                  "text": "Marker interface"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "MarkerInterface",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Class structure",
                      "index": 15,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "SortedCollectionWithNonComparableKeys",
                "shortDescription": {
                  "text": "Sorted collection with non-comparable elements"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": true,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "SortedCollectionWithNonComparableKeys",
                    "cweIds": [
                      697
                    ],
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Probable bugs",
                      "index": 12,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "CommentedOutCode",
                "shortDescription": {
                  "text": "Commented out code"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "note",
                  "parameters": {
                    "suppressToolId": "CommentedOutCode",
                    "ideaSeverity": "WEAK WARNING",
                    "qodanaSeverity": "Moderate"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Code maturity",
                      "index": 38,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "ClassWithoutLogger",
                "shortDescription": {
                  "text": "Class without logger"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "ClassWithoutLogger",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Logging",
                      "index": 79,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "ReturnOfInnerClass",
                "shortDescription": {
                  "text": "Return of instance of anonymous, local or inner class"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "ReturnOfInnerClass",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Memory",
                      "index": 119,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "AnonymousClassComplexity",
                "shortDescription": {
                  "text": "Overly complex anonymous class"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "OverlyComplexAnonymousInnerClass",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Class metrics",
                      "index": 90,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "WaitWithoutCorrespondingNotify",
                "shortDescription": {
                  "text": "'wait()' without corresponding 'notify()'"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "WaitWithoutCorrespondingNotify",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Threading issues",
                      "index": 22,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "UseOfAWTPeerClass",
                "shortDescription": {
                  "text": "Use of AWT peer class"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "UseOfAWTPeerClass",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Portability",
                      "index": 60,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "RedundantExplicitVariableType",
                "shortDescription": {
                  "text": "Local variable type can be omitted"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "note",
                  "parameters": {
                    "suppressToolId": "RedundantExplicitVariableType",
                    "ideaSeverity": "INFORMATION",
                    "qodanaSeverity": "Info"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Java language level migration aids/Java 10",
                      "index": 114,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "SerializableWithUnconstructableAncestor",
                "shortDescription": {
                  "text": "Serializable class with unconstructable ancestor"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "SerializableClassWithUnconstructableAncestor",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Serialization issues",
                      "index": 16,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "ExcessiveLambdaUsage",
                "shortDescription": {
                  "text": "Excessive lambda usage"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "ExcessiveLambdaUsage",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Verbose or redundant code constructs",
                      "index": 31,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "ParameterHidingMemberVariable",
                "shortDescription": {
                  "text": "Parameter hides field"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "ParameterHidesMemberVariable",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Visibility",
                      "index": 64,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "LambdaBodyCanBeCodeBlock",
                "shortDescription": {
                  "text": "Lambda body can be code block"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "note",
                  "parameters": {
                    "suppressToolId": "LambdaBodyCanBeCodeBlock",
                    "ideaSeverity": "INFORMATION",
                    "qodanaSeverity": "Info"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Code style issues",
                      "index": 9,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "CustomSecurityManager",
                "shortDescription": {
                  "text": "Custom 'SecurityManager'"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "CustomSecurityManager",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Security",
                      "index": 27,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "ObjectEquality",
                "shortDescription": {
                  "text": "Object comparison using '==', instead of 'equals()'"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "note",
                  "parameters": {
                    "suppressToolId": "ObjectEquality",
                    "cweIds": [
                      480
                    ],
                    "ideaSeverity": "INFORMATION",
                    "qodanaSeverity": "Info"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Probable bugs",
                      "index": 12,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "TimeToString",
                "shortDescription": {
                  "text": "Call to 'Time.toString()'"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "CallToTimeToString",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Internationalization",
                      "index": 7,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "PatternVariablesCanBeReplacedWithCast",
                "shortDescription": {
                  "text": "Using 'instanceof' with patterns"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "note",
                  "parameters": {
                    "suppressToolId": "PatternVariablesCanBeReplacedWithCast",
                    "ideaSeverity": "INFORMATION",
                    "qodanaSeverity": "Info"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Code style issues",
                      "index": 9,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "ManualArrayToCollectionCopy",
                "shortDescription": {
                  "text": "Manual array to collection copy"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": true,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "ManualArrayToCollectionCopy",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Performance",
                      "index": 8,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "SwitchLabeledRuleCanBeCodeBlock",
                "shortDescription": {
                  "text": "Labeled switch rule can have code block"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "note",
                  "parameters": {
                    "suppressToolId": "SwitchLabeledRuleCanBeCodeBlock",
                    "ideaSeverity": "INFORMATION",
                    "qodanaSeverity": "Info"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Code style issues",
                      "index": 9,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "JavaReflectionMemberAccess",
                "shortDescription": {
                  "text": "Reflective access to non-existent or not visible class member"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": true,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "JavaReflectionMemberAccess",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Reflective access",
                      "index": 95,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "ObviousNullCheck",
                "shortDescription": {
                  "text": "Null-check method is called with obviously non-null argument"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "ObviousNullCheck",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Verbose or redundant code constructs",
                      "index": 31,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "SerialVersionUIDNotStaticFinal",
                "shortDescription": {
                  "text": "'serialVersionUID' field not declared 'private static final long'"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": true,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "SerialVersionUIDWithWrongSignature",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Serialization issues",
                      "index": 16,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "InnerClassOnInterface",
                "shortDescription": {
                  "text": "Inner class of interface"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "InnerClassOfInterface",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Class structure",
                      "index": 15,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "UnusedLabel",
                "shortDescription": {
                  "text": "Unused label"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "UnusedLabel",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Declaration redundancy",
                      "index": 11,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "PublicFieldAccessedInSynchronizedContext",
                "shortDescription": {
                  "text": "Non-private field accessed in 'synchronized' context"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "NonPrivateFieldAccessedInSynchronizedContext",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Threading issues",
                      "index": 22,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "ForeachStatement",
                "shortDescription": {
                  "text": "Enhanced 'for' statement"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "ForeachStatement",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Java language level issues",
                      "index": 106,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "OptionalUsedAsFieldOrParameterType",
                "shortDescription": {
                  "text": "'Optional' used as field or parameter type"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": true,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "OptionalUsedAsFieldOrParameterType",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Abstraction issues",
                      "index": 53,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "ReplaceAllDot",
                "shortDescription": {
                  "text": "Suspicious regex expression argument"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": true,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "SuspiciousRegexArgument",
                    "cweIds": [
                      20,
                      185,
                      628
                    ],
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Probable bugs",
                      "index": 12,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "ForCanBeForeach",
                "shortDescription": {
                  "text": "'for' loop can be replaced with enhanced for loop"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "ForLoopReplaceableByForEach",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Java language level migration aids/Java 5",
                      "index": 82,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "PackageVisibleField",
                "shortDescription": {
                  "text": "Package-visible field"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "PackageVisibleField",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Encapsulation",
                      "index": 93,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "InstantiationOfUtilityClass",
                "shortDescription": {
                  "text": "Instantiation of utility class"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": true,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "InstantiationOfUtilityClass",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Probable bugs",
                      "index": 12,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "TrailingWhitespacesInTextBlock",
                "shortDescription": {
                  "text": "Trailing whitespace in text block"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "TrailingWhitespacesInTextBlock",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Code style issues",
                      "index": 9,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "NewClassNamingConvention",
                "shortDescription": {
                  "text": "Class naming convention"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "NewClassNamingConvention",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Naming conventions/Class",
                      "index": 52,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "UseCompareMethod",
                "shortDescription": {
                  "text": "'compare()' method can be used to compare numbers"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "UseCompareMethod",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Java language level migration aids",
                      "index": 45,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "MoveFieldAssignmentToInitializer",
                "shortDescription": {
                  "text": "Field assignment can be moved to initializer"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "note",
                  "parameters": {
                    "suppressToolId": "MoveFieldAssignmentToInitializer",
                    "ideaSeverity": "INFORMATION",
                    "qodanaSeverity": "Info"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Code style issues",
                      "index": 9,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "StringConcatenationInFormatCall",
                "shortDescription": {
                  "text": "String concatenation as argument to 'format()' call"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "StringConcatenationInFormatCall",
                    "cweIds": [
                      116,
                      134
                    ],
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Probable bugs",
                      "index": 12,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "WaitWhileHoldingTwoLocks",
                "shortDescription": {
                  "text": "'wait()' while holding two locks"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": true,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "WaitWhileHoldingTwoLocks",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Threading issues",
                      "index": 22,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "SerializableInnerClassWithNonSerializableOuterClass",
                "shortDescription": {
                  "text": "Serializable non-'static' inner class with non-Serializable outer class"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "SerializableInnerClassWithNonSerializableOuterClass",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Serialization issues",
                      "index": 16,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "SuspiciousListRemoveInLoop",
                "shortDescription": {
                  "text": "Suspicious 'List.remove()' in loop"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": true,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "SuspiciousListRemoveInLoop",
                    "cweIds": [
                      129
                    ],
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Probable bugs",
                      "index": 12,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "NegativeIntConstantInLongContext",
                "shortDescription": {
                  "text": "Negative int hexadecimal constant in long context"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": true,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "NegativeIntConstantInLongContext",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Numeric issues",
                      "index": 24,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "WhileLoopSpinsOnField",
                "shortDescription": {
                  "text": "'while' loop spins on field"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": true,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "WhileLoopSpinsOnField",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Threading issues",
                      "index": 22,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "DefaultAnnotationParam",
                "shortDescription": {
                  "text": "Default annotation parameter value"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "DefaultAnnotationParam",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Declaration redundancy",
                      "index": 11,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "SynchronizeOnLock",
                "shortDescription": {
                  "text": "Synchronization on a 'Lock' object"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "SynchroniziationOnLockObject",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Threading issues",
                      "index": 22,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "BadExceptionCaught",
                "shortDescription": {
                  "text": "Prohibited 'Exception' caught"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "ProhibitedExceptionCaught",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Error handling",
                      "index": 10,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "InstanceofCatchParameter",
                "shortDescription": {
                  "text": "'instanceof' on 'catch' parameter"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "InstanceofCatchParameter",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Error handling",
                      "index": 10,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "RedundantScheduledForRemovalAnnotation",
                "shortDescription": {
                  "text": "Redundant @ScheduledForRemoval annotation"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "RedundantScheduledForRemovalAnnotation",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Code maturity",
                      "index": 38,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "OptionalGetWithoutIsPresent",
                "shortDescription": {
                  "text": "Optional.get() is called without isPresent() check"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": true,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "OptionalGetWithoutIsPresent",
                    "cweIds": [
                      252,
                      476
                    ],
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Probable bugs",
                      "index": 12,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "OnDemandImport",
                "shortDescription": {
                  "text": "'*' import"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "OnDemandImport",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Imports",
                      "index": 19,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "FallthruInSwitchStatement",
                "shortDescription": {
                  "text": "Fallthrough in 'switch' statement"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "fallthrough",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Control flow issues",
                      "index": 23,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "OptionalIsPresent",
                "shortDescription": {
                  "text": "Non functional style 'Optional.isPresent()' usage"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "OptionalIsPresent",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Code style issues",
                      "index": 9,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "RedundantOperationOnEmptyContainer",
                "shortDescription": {
                  "text": "Redundant operation on empty container"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": true,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "RedundantOperationOnEmptyContainer",
                    "cweIds": [
                      561
                    ],
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Probable bugs",
                      "index": 12,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "AtomicFieldUpdaterNotStaticFinal",
                "shortDescription": {
                  "text": "'AtomicFieldUpdater' field not declared 'static final'"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": true,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "AtomicFieldUpdaterNotStaticFinal",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Threading issues",
                      "index": 22,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "Java8MapForEach",
                "shortDescription": {
                  "text": "Map.forEach() can be used"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "Java8MapForEach",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Java language level migration aids/Java 8",
                      "index": 85,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "RecordStoreResource",
                "shortDescription": {
                  "text": "'RecordStore' opened but not safely closed"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "RecordStoreOpenedButNotSafelyClosed",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Performance/Embedded",
                      "index": 123,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "ObjectsEqualsCanBeSimplified",
                "shortDescription": {
                  "text": "'Objects.equals()' can be replaced with 'equals()'"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "note",
                  "parameters": {
                    "suppressToolId": "ObjectsEqualsCanBeSimplified",
                    "ideaSeverity": "INFORMATION",
                    "qodanaSeverity": "Info"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Code style issues",
                      "index": 9,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "ClassLoaderInstantiation",
                "shortDescription": {
                  "text": "'ClassLoader' instantiation"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "ClassLoaderInstantiation",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Security",
                      "index": 27,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "NativeMethods",
                "shortDescription": {
                  "text": "Native method"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "NativeMethod",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Portability",
                      "index": 60,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "EqualsWithItself",
                "shortDescription": {
                  "text": "'equals()' called on itself"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": true,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "EqualsWithItself",
                    "cweIds": [
                      571
                    ],
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Probable bugs",
                      "index": 12,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "ClassInheritanceDepth",
                "shortDescription": {
                  "text": "Class too deep in inheritance tree"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "ClassTooDeepInInheritanceTree",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Class metrics",
                      "index": 90,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "MarkedForRemoval",
                "shortDescription": {
                  "text": "Usage of API marked for removal"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "error",
                  "parameters": {
                    "suppressToolId": "removal",
                    "ideaSeverity": "ERROR",
                    "qodanaSeverity": "Critical"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Code maturity",
                      "index": 38,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "NestedConditionalExpression",
                "shortDescription": {
                  "text": "Nested conditional expression"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "NestedConditionalExpression",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Control flow issues",
                      "index": 23,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "WhileCanBeForeach",
                "shortDescription": {
                  "text": "'while' loop can be replaced with enhanced 'for' loop"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "WhileLoopReplaceableByForEach",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Java language level migration aids/Java 5",
                      "index": 82,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "ImplicitNumericConversion",
                "shortDescription": {
                  "text": "Implicit numeric conversion"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "ImplicitNumericConversion",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Numeric issues",
                      "index": 24,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "BulkFileAttributesRead",
                "shortDescription": {
                  "text": "Bulk 'Files.readAttributes()' call can be used"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "BulkFileAttributesRead",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Performance",
                      "index": 8,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "NotNullFieldNotInitialized",
                "shortDescription": {
                  "text": "@NotNull field is not initialized"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "NotNullFieldNotInitialized",
                    "cweIds": [
                      476
                    ],
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Probable bugs/Nullability problems",
                      "index": 124,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "OverlyComplexBooleanExpression",
                "shortDescription": {
                  "text": "Overly complex boolean expression"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "OverlyComplexBooleanExpression",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Control flow issues",
                      "index": 23,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "NotifyCalledOnCondition",
                "shortDescription": {
                  "text": "'notify()' or 'notifyAll()' called on 'java.util.concurrent.locks.Condition' object"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "NotifyCalledOnCondition",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Threading issues",
                      "index": 22,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "NewMethodNamingConvention",
                "shortDescription": {
                  "text": "Method naming convention"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "NewMethodNamingConvention",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Naming conventions/Method",
                      "index": 70,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "OverlyStrongTypeCast",
                "shortDescription": {
                  "text": "Overly strong type cast"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "OverlyStrongTypeCast",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Abstraction issues",
                      "index": 53,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "JavaLangImport",
                "shortDescription": {
                  "text": "Unnecessary import from the 'java.lang' package"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "JavaLangImport",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Imports",
                      "index": 19,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "UtilityClass",
                "shortDescription": {
                  "text": "Utility class"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "UtilityClass",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Class structure",
                      "index": 15,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "ClassNameDiffersFromFileName",
                "shortDescription": {
                  "text": "Class name differs from file name"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "ClassNameDiffersFromFileName",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Class structure",
                      "index": 15,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "IndexOfReplaceableByContains",
                "shortDescription": {
                  "text": "'String.indexOf()' expression can be replaced with 'contains()'"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "IndexOfReplaceableByContains",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Java language level migration aids/Java 5",
                      "index": 82,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "StringConcatenationArgumentToLogCall",
                "shortDescription": {
                  "text": "Non-constant string concatenation as argument to logging call"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": true,
                  "level": "note",
                  "parameters": {
                    "suppressToolId": "StringConcatenationArgumentToLogCall",
                    "ideaSeverity": "WEAK WARNING",
                    "qodanaSeverity": "Moderate"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Logging",
                      "index": 79,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "OptionalContainsCollection",
                "shortDescription": {
                  "text": "'Optional' contains array or collection"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "OptionalContainsCollection",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Code style issues",
                      "index": 9,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "SimplifiableAssertion",
                "shortDescription": {
                  "text": "Simplifiable assertion"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": true,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "SimplifiableAssertion",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Test frameworks",
                      "index": 94,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "LoadLibraryWithNonConstantString",
                "shortDescription": {
                  "text": "Call to 'System.loadLibrary()' with non-constant string"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "LoadLibraryWithNonConstantString",
                    "cweIds": [
                      114,
                      494,
                      676,
                      829
                    ],
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Security",
                      "index": 27,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "InterfaceMethodClashesWithObject",
                "shortDescription": {
                  "text": "Interface method clashes with method in 'Object'"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": true,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "InterfaceMethodClashesWithObject",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Abstraction issues",
                      "index": 53,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "StaticMethodOnlyUsedInOneClass",
                "shortDescription": {
                  "text": "Static member only used from one other class"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "StaticMethodOnlyUsedInOneClass",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Abstraction issues",
                      "index": 53,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "RedundantEscapeInRegexReplacement",
                "shortDescription": {
                  "text": "Redundant escape in regex replacement string"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "RedundantEscapeInRegexReplacement",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Verbose or redundant code constructs",
                      "index": 31,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "SynchronizedOnLiteralObject",
                "shortDescription": {
                  "text": "Synchronization on an object initialized with a literal"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "SynchronizedOnLiteralObject",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Threading issues",
                      "index": 22,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "Java9ReflectionClassVisibility",
                "shortDescription": {
                  "text": "Reflective access across modules issues"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": true,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "Java9ReflectionClassVisibility",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Reflective access",
                      "index": 95,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "CharsetObjectCanBeUsed",
                "shortDescription": {
                  "text": "Standard 'Charset' object can be used"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "CharsetObjectCanBeUsed",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Code style issues",
                      "index": 9,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "UseOfSunClasses",
                "shortDescription": {
                  "text": "Use of 'sun.*' classes"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "UseOfSunClasses",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Portability",
                      "index": 60,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "RedundantCast",
                "shortDescription": {
                  "text": "Redundant type cast"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "RedundantCast",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Verbose or redundant code constructs",
                      "index": 31,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "AnonymousInnerClass",
                "shortDescription": {
                  "text": "Anonymous class can be replaced with inner class"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "note",
                  "parameters": {
                    "suppressToolId": "AnonymousInnerClass",
                    "ideaSeverity": "INFORMATION",
                    "qodanaSeverity": "Info"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Class structure",
                      "index": 15,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "SimplifyCollector",
                "shortDescription": {
                  "text": "Simplifiable collector"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "SimplifyCollector",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Verbose or redundant code constructs",
                      "index": 31,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "MultipleTopLevelClassesInFile",
                "shortDescription": {
                  "text": "Multiple top level classes in single file"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "MultipleTopLevelClassesInFile",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Class structure",
                      "index": 15,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "IteratorNextDoesNotThrowNoSuchElementException",
                "shortDescription": {
                  "text": "'Iterator.next()' which can't throw 'NoSuchElementException'"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "IteratorNextCanNotThrowNoSuchElementException",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Probable bugs",
                      "index": 12,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "IncorrectMessageFormat",
                "shortDescription": {
                  "text": "Incorrect 'MessageFormat' pattern"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": true,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "IncorrectMessageFormat",
                    "cweIds": [
                      628,
                      707
                    ],
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Probable bugs",
                      "index": 12,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "SuspiciousTernaryOperatorInVarargsCall",
                "shortDescription": {
                  "text": "Suspicious ternary operator in varargs method call"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": true,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "SuspiciousTernaryOperatorInVarargsCall",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Probable bugs",
                      "index": 12,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "SerializableInnerClassHasSerialVersionUIDField",
                "shortDescription": {
                  "text": "Serializable non-static inner class without 'serialVersionUID'"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "SerializableNonStaticInnerClassWithoutSerialVersionUID",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Serialization issues",
                      "index": 16,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "ParameterNameDiffersFromOverriddenParameter",
                "shortDescription": {
                  "text": "Parameter name differs from parameter in overridden or overloaded method"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "ParameterNameDiffersFromOverriddenParameter",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Naming conventions",
                      "index": 51,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "OctalLiteral",
                "shortDescription": {
                  "text": "Octal integer"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": true,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "OctalInteger",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Numeric issues",
                      "index": 24,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "ReadWriteStringCanBeUsed",
                "shortDescription": {
                  "text": "'Files.readString()' or 'Files.writeString()' can be used"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "ReadWriteStringCanBeUsed",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Java language level migration aids/Java 11",
                      "index": 130,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "CyclomaticComplexity",
                "shortDescription": {
                  "text": "Overly complex method"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "OverlyComplexMethod",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Method metrics",
                      "index": 98,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "AwaitNotInLoop",
                "shortDescription": {
                  "text": "'await()' not called in loop"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "AwaitNotInLoop",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Threading issues",
                      "index": 22,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "StaticVariableUninitializedUse",
                "shortDescription": {
                  "text": "Static field used before initialization"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "StaticVariableUsedBeforeInitialization",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Initialization",
                      "index": 25,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "CyclicClassDependency",
                "shortDescription": {
                  "text": "Cyclic class dependency"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "CyclicClassDependency",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Dependency issues",
                      "index": 105,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "StringBufferReplaceableByStringBuilder",
                "shortDescription": {
                  "text": "'StringBuffer' may be 'StringBuilder'"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "StringBufferMayBeStringBuilder",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Java language level migration aids/Java 5",
                      "index": 82,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "SynchronizedMethod",
                "shortDescription": {
                  "text": "'synchronized' method"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "SynchronizedMethod",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Threading issues",
                      "index": 22,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "AbstractMethodWithMissingImplementations",
                "shortDescription": {
                  "text": "Abstract method with missing implementations"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "AbstractMethodWithMissingImplementations",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Inheritance issues",
                      "index": 110,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "Convert2MethodRef",
                "shortDescription": {
                  "text": "Lambda can be replaced with method reference"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "Convert2MethodRef",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Java language level migration aids/Java 8",
                      "index": 85,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "UnnecessaryToStringCall",
                "shortDescription": {
                  "text": "Unnecessary call to 'toString()'"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "UnnecessaryToStringCall",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Code style issues",
                      "index": 9,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "ClassOnlyUsedInOnePackage",
                "shortDescription": {
                  "text": "Class only used from one other package"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "ClassOnlyUsedInOnePackage",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Packaging issues",
                      "index": 30,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "SuppressionAnnotation",
                "shortDescription": {
                  "text": "Inspection suppression annotation"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "SuppressionAnnotation",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "JVM languages",
                      "index": 1,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "ReturnSeparatedFromComputation",
                "shortDescription": {
                  "text": "'return' separated from the result computation"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "note",
                  "parameters": {
                    "suppressToolId": "ReturnSeparatedFromComputation",
                    "ideaSeverity": "INFORMATION",
                    "qodanaSeverity": "Info"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Code style issues",
                      "index": 9,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "SynchronizeOnNonFinalField",
                "shortDescription": {
                  "text": "Synchronization on a non-final field"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": true,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "SynchronizeOnNonFinalField",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Threading issues",
                      "index": 22,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "ArrayObjectsEquals",
                "shortDescription": {
                  "text": "Use of shallow or 'Objects' methods with arrays"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": true,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "ArrayObjectsEquals",
                    "cweIds": [
                      480
                    ],
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Probable bugs",
                      "index": 12,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "EqualsWhichDoesntCheckParameterClass",
                "shortDescription": {
                  "text": "'equals()' method which does not check class of parameter"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": true,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "EqualsWhichDoesntCheckParameterClass",
                    "cweIds": [
                      697
                    ],
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Probable bugs",
                      "index": 12,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "UseHashCodeMethodInspection",
                "shortDescription": {
                  "text": "Standard 'hashCode()' method can be used"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "UseHashCodeMethodInspection",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Java language level migration aids/Java 8",
                      "index": 85,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "AssignmentToSuperclassField",
                "shortDescription": {
                  "text": "Constructor assigns value to field defined in superclass"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "AssignmentToSuperclassField",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Assignment issues",
                      "index": 54,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "SuspiciousIndentAfterControlStatement",
                "shortDescription": {
                  "text": "Suspicious indentation after control statement without braces"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": true,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "SuspiciousIndentAfterControlStatement",
                    "cweIds": [
                      483
                    ],
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Probable bugs",
                      "index": 12,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "NumericOverflow",
                "shortDescription": {
                  "text": "Numeric overflow"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": true,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "NumericOverflow",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Numeric issues",
                      "index": 24,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "ClassNewInstance",
                "shortDescription": {
                  "text": "Unsafe call to 'Class.newInstance()'"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "ClassNewInstance",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Probable bugs",
                      "index": 12,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "LimitedScopeInnerClass",
                "shortDescription": {
                  "text": "Local class"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "note",
                  "parameters": {
                    "suppressToolId": "LimitedScopeInnerClass",
                    "ideaSeverity": "INFORMATION",
                    "qodanaSeverity": "Info"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Class structure",
                      "index": 15,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "MultiplyOrDivideByPowerOfTwo",
                "shortDescription": {
                  "text": "Multiplication or division by power of two"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "MultiplyOrDivideByPowerOfTwo",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Performance/Embedded",
                      "index": 123,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "MethodCallInLoopCondition",
                "shortDescription": {
                  "text": "Method call in loop condition"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "MethodCallInLoopCondition",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Performance/Embedded",
                      "index": 123,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "MethodCount",
                "shortDescription": {
                  "text": "Class with too many methods"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "ClassWithTooManyMethods",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Class metrics",
                      "index": 90,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "ForLoopReplaceableByWhile",
                "shortDescription": {
                  "text": "'for' loop may be replaced by 'while' loop"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "ForLoopReplaceableByWhile",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Control flow issues",
                      "index": 23,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "StaticFieldReferenceOnSubclass",
                "shortDescription": {
                  "text": "Static field referenced via subclass"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "StaticFieldReferencedViaSubclass",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Probable bugs",
                      "index": 12,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "BlockingMethodInNonBlockingContext",
                "shortDescription": {
                  "text": "Possibly blocking call in non-blocking context"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": true,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "BlockingMethodInNonBlockingContext",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "JVM languages",
                      "index": 1,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "IgnoreResultOfCall",
                "shortDescription": {
                  "text": "Result of method call ignored"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": true,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "ResultOfMethodCallIgnored",
                    "cweIds": [
                      252,
                      563
                    ],
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Probable bugs",
                      "index": 12,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "AssertBetweenInconvertibleTypes",
                "shortDescription": {
                  "text": "'assertEquals()' between objects of inconvertible types"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": true,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "AssertBetweenInconvertibleTypes",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "JVM languages/Test frameworks",
                      "index": 86,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "SwitchExpressionCanBePushedDown",
                "shortDescription": {
                  "text": "Common subexpression can be extracted from 'switch'"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "note",
                  "parameters": {
                    "suppressToolId": "SwitchExpressionCanBePushedDown",
                    "ideaSeverity": "INFORMATION",
                    "qodanaSeverity": "Info"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Control flow issues",
                      "index": 23,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "InnerClassReferencedViaSubclass",
                "shortDescription": {
                  "text": "Inner class referenced via subclass"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "InnerClassReferencedViaSubclass",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Probable bugs",
                      "index": 12,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "ConfusingElse",
                "shortDescription": {
                  "text": "Redundant 'else'"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "note",
                  "parameters": {
                    "suppressToolId": "ConfusingElseBranch",
                    "ideaSeverity": "INFORMATION",
                    "qodanaSeverity": "Info"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Control flow issues",
                      "index": 23,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "ChannelResource",
                "shortDescription": {
                  "text": "'Channel' opened but not safely closed"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "ChannelOpenedButNotSafelyClosed",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Resource management",
                      "index": 99,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "ScheduledThreadPoolExecutorWithZeroCoreThreads",
                "shortDescription": {
                  "text": "'ScheduledThreadPoolExecutor' with zero core threads"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": true,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "ScheduledThreadPoolExecutorWithZeroCoreThreads",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Probable bugs",
                      "index": 12,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "JavaEmptyModuleInfoFile",
                "shortDescription": {
                  "text": "Empty 'module-info.java' file"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": true,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "JavaEmptyModuleInfoFile",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Visibility",
                      "index": 64,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "ClassMayBeInterface",
                "shortDescription": {
                  "text": "Abstract 'class' may be 'interface'"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "note",
                  "parameters": {
                    "suppressToolId": "ClassMayBeInterface",
                    "ideaSeverity": "INFORMATION",
                    "qodanaSeverity": "Info"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Class structure",
                      "index": 15,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "UnnecessaryCallToStringValueOf",
                "shortDescription": {
                  "text": "Unnecessary conversion to 'String'"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "UnnecessaryCallToStringValueOf",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Code style issues",
                      "index": 9,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "StringReplaceableByStringBuffer",
                "shortDescription": {
                  "text": "Non-constant 'String' can be replaced with 'StringBuilder'"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "NonConstantStringShouldBeStringBuffer",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Performance",
                      "index": 8,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "FinallyBlockCannotCompleteNormally",
                "shortDescription": {
                  "text": "'finally' block which can not complete normally"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": true,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "finally",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Error handling",
                      "index": 10,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "ConstantOnWrongSideOfComparison",
                "shortDescription": {
                  "text": "Constant on wrong side of comparison"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "ConstantOnWrongSideOfComparison",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Code style issues",
                      "index": 9,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "ObjectToString",
                "shortDescription": {
                  "text": "Call to default 'toString()'"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "ObjectToString",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Probable bugs",
                      "index": 12,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "UnnecessarilyQualifiedStaticallyImportedElement",
                "shortDescription": {
                  "text": "Unnecessarily qualified statically imported element"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "UnnecessarilyQualifiedStaticallyImportedElement",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Code style issues",
                      "index": 9,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "UseOfJDBCDriverClass",
                "shortDescription": {
                  "text": "Use of concrete JDBC driver class"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "UseOfJDBCDriverClass",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Portability",
                      "index": 60,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "JDBCResource",
                "shortDescription": {
                  "text": "JDBC resource opened but not safely closed"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "JDBCResourceOpenedButNotSafelyClosed",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Resource management",
                      "index": 99,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "LoggingSimilarMessage",
                "shortDescription": {
                  "text": "Non-distinguishable logging calls"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": true,
                  "level": "note",
                  "parameters": {
                    "suppressToolId": "LoggingSimilarMessage",
                    "ideaSeverity": "WEAK WARNING",
                    "qodanaSeverity": "Moderate"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "JVM languages/Logging",
                      "index": 34,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "IfCanBeAssertion",
                "shortDescription": {
                  "text": "Statement can be replaced with 'assert' or 'Objects.requireNonNull'"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "note",
                  "parameters": {
                    "suppressToolId": "IfCanBeAssertion",
                    "ideaSeverity": "INFORMATION",
                    "qodanaSeverity": "Info"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Control flow issues",
                      "index": 23,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "JavadocDeclaration",
                "shortDescription": {
                  "text": "Javadoc declaration problems"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "JavadocDeclaration",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Javadoc",
                      "index": 49,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "AssignmentToMethodParameter",
                "shortDescription": {
                  "text": "Assignment to method parameter"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "AssignmentToMethodParameter",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Assignment issues",
                      "index": 54,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "LocalVariableHidingMemberVariable",
                "shortDescription": {
                  "text": "Local variable hides field"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "LocalVariableHidesMemberVariable",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Visibility",
                      "index": 64,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "UnnecessaryTemporaryOnConversionToString",
                "shortDescription": {
                  "text": "Unnecessary temporary object in conversion to 'String'"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": true,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "UnnecessaryTemporaryOnConversionToString",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Performance",
                      "index": 8,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "InterfaceMayBeAnnotatedFunctional",
                "shortDescription": {
                  "text": "Interface may be annotated as '@FunctionalInterface'"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "InterfaceMayBeAnnotatedFunctional",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Class structure",
                      "index": 15,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "BreakStatementWithLabel",
                "shortDescription": {
                  "text": "'break' statement with label"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "BreakStatementWithLabel",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Control flow issues",
                      "index": 23,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "StringEquality",
                "shortDescription": {
                  "text": "String comparison using '==', instead of 'equals()'"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": true,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "StringEquality",
                    "cweIds": [
                      597
                    ],
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Probable bugs",
                      "index": 12,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "SuspiciousLiteralUnderscore",
                "shortDescription": {
                  "text": "Suspicious underscore in number literal"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "SuspiciousLiteralUnderscore",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Numeric issues",
                      "index": 24,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "StaticCallOnSubclass",
                "shortDescription": {
                  "text": "Static method referenced via subclass"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "StaticMethodReferencedViaSubclass",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Probable bugs",
                      "index": 12,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "ReadResolveAndWriteReplaceProtected",
                "shortDescription": {
                  "text": "'readResolve()' or 'writeReplace()' not declared 'protected'"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "ReadResolveAndWriteReplaceProtected",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Serialization issues",
                      "index": 16,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "UnnecessaryLabelOnContinueStatement",
                "shortDescription": {
                  "text": "Unnecessary label on 'continue' statement"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "UnnecessaryLabelOnContinueStatement",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Verbose or redundant code constructs",
                      "index": 31,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "ParameterNamingConvention",
                "shortDescription": {
                  "text": "Method parameter naming convention"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "MethodParameterNamingConvention",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Naming conventions",
                      "index": 51,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "MethodCanBeVariableArityMethod",
                "shortDescription": {
                  "text": "Method can have varargs parameter"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "note",
                  "parameters": {
                    "suppressToolId": "MethodCanBeVariableArityMethod",
                    "ideaSeverity": "INFORMATION",
                    "qodanaSeverity": "Info"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Java language level migration aids/Java 5",
                      "index": 82,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "AbstractClassNeverImplemented",
                "shortDescription": {
                  "text": "Abstract class which has no concrete subclass"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "AbstractClassNeverImplemented",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Inheritance issues",
                      "index": 110,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "StreamToLoop",
                "shortDescription": {
                  "text": "Stream API call chain can be replaced with loop"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "note",
                  "parameters": {
                    "suppressToolId": "StreamToLoop",
                    "ideaSeverity": "INFORMATION",
                    "qodanaSeverity": "Info"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Code style issues",
                      "index": 9,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "NotifyWithoutCorrespondingWait",
                "shortDescription": {
                  "text": "'notify()' without corresponding 'wait()'"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "NotifyWithoutCorrespondingWait",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Threading issues",
                      "index": 22,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "ClassInitializerMayBeStatic",
                "shortDescription": {
                  "text": "Class initializer may be 'static'"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": true,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "ClassInitializerMayBeStatic",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Performance",
                      "index": 8,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "MagicCharacter",
                "shortDescription": {
                  "text": "Magic character"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "MagicCharacter",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Internationalization",
                      "index": 7,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "SlowAbstractSetRemoveAll",
                "shortDescription": {
                  "text": "Call to 'set.removeAll(list)' may work slowly"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": true,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "SlowAbstractSetRemoveAll",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Performance",
                      "index": 8,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "ArrayEquality",
                "shortDescription": {
                  "text": "Array comparison using '==', instead of 'Arrays.equals()'"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "ArrayEquality",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Probable bugs",
                      "index": 12,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "StaticCollection",
                "shortDescription": {
                  "text": "Static collection"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "StaticCollection",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Memory",
                      "index": 119,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "NonExceptionNameEndsWithException",
                "shortDescription": {
                  "text": "Non-exception class name ends with 'Exception'"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "NonExceptionNameEndsWithException",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Naming conventions/Class",
                      "index": 52,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "ClassComplexity",
                "shortDescription": {
                  "text": "Overly complex class"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "OverlyComplexClass",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Class metrics",
                      "index": 90,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "SystemGC",
                "shortDescription": {
                  "text": "Call to 'System.gc()' or 'Runtime.gc()'"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "CallToSystemGC",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Memory",
                      "index": 119,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "OverflowingLoopIndex",
                "shortDescription": {
                  "text": "Loop executes zero or billions of times"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": true,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "OverflowingLoopIndex",
                    "cweIds": [
                      691,
                      835
                    ],
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Probable bugs",
                      "index": 12,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "InnerClassMayBeStatic",
                "shortDescription": {
                  "text": "Inner class may be 'static'"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": true,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "InnerClassMayBeStatic",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Memory",
                      "index": 119,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "SetReplaceableByEnumSet",
                "shortDescription": {
                  "text": "'Set' can be replaced with 'EnumSet'"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "SetReplaceableByEnumSet",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Performance",
                      "index": 8,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "Java9UndeclaredServiceUsage",
                "shortDescription": {
                  "text": "Usage of service not declared in 'module-info'"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": true,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "Java9UndeclaredServiceUsage",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Visibility",
                      "index": 64,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "CallToSimpleSetterInClass",
                "shortDescription": {
                  "text": "Call to simple setter from within class"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "CallToSimpleSetterFromWithinClass",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Performance",
                      "index": 8,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "UnnecessaryFinalOnLocalVariableOrParameter",
                "shortDescription": {
                  "text": "Unnecessary 'final' on local variable or parameter"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "UnnecessaryFinalOnLocalVariableOrParameter",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Code style issues",
                      "index": 9,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "NonBooleanMethodNameMayNotStartWithQuestion",
                "shortDescription": {
                  "text": "Non-boolean method name must not start with question word"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "NonBooleanMethodNameMayNotStartWithQuestion",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Naming conventions/Method",
                      "index": 70,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "WeakerAccess",
                "shortDescription": {
                  "text": "Declaration access can be weaker"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "WeakerAccess",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Declaration redundancy",
                      "index": 11,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "ReplaceWithJavadoc",
                "shortDescription": {
                  "text": "Comment replaceable with Javadoc"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "note",
                  "parameters": {
                    "suppressToolId": "ReplaceWithJavadoc",
                    "ideaSeverity": "INFORMATION",
                    "qodanaSeverity": "Info"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Javadoc",
                      "index": 49,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "WrapperTypeMayBePrimitive",
                "shortDescription": {
                  "text": "Wrapper type may be primitive"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": true,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "WrapperTypeMayBePrimitive",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Performance",
                      "index": 8,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "EmptyStatementBody",
                "shortDescription": {
                  "text": "Statement with empty body"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": true,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "StatementWithEmptyBody",
                    "cweIds": [
                      561
                    ],
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Probable bugs",
                      "index": 12,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "EmptyFinallyBlock",
                "shortDescription": {
                  "text": "Empty 'finally' block"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": true,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "EmptyFinallyBlock",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Error handling",
                      "index": 10,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "InconsistentLanguageLevel",
                "shortDescription": {
                  "text": "Inconsistent language level settings"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "InconsistentLanguageLevel",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Modularization issues",
                      "index": 48,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "EnumerationCanBeIteration",
                "shortDescription": {
                  "text": "Enumeration can be iteration"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "EnumerationCanBeIteration",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Java language level migration aids",
                      "index": 45,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "FinalStaticMethod",
                "shortDescription": {
                  "text": "'static' method declared 'final'"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "FinalStaticMethod",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Class structure",
                      "index": 15,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "RedundantTypeArguments",
                "shortDescription": {
                  "text": "Redundant type arguments"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "RedundantTypeArguments",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Verbose or redundant code constructs",
                      "index": 31,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "FieldHasSetterButNoGetter",
                "shortDescription": {
                  "text": "Field has setter but no getter"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "FieldHasSetterButNoGetter",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/JavaBeans issues",
                      "index": 102,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "RuntimeExecWithNonConstantString",
                "shortDescription": {
                  "text": "Call to 'Runtime.exec()' with non-constant string"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "CallToRuntimeExecWithNonConstantString",
                    "cweIds": [
                      20,
                      77,
                      78,
                      88,
                      94
                    ],
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Security",
                      "index": 27,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "ErrorRethrown",
                "shortDescription": {
                  "text": "'Error' not rethrown"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "ErrorNotRethrown",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Error handling",
                      "index": 10,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "CyclicPackageDependency",
                "shortDescription": {
                  "text": "Cyclic package dependency"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "CyclicPackageDependency",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Dependency issues",
                      "index": 105,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "SystemSetSecurityManager",
                "shortDescription": {
                  "text": "Call to 'System.setSecurityManager()'"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "CallToSystemSetSecurityManager",
                    "cweIds": [
                      250
                    ],
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Security",
                      "index": 27,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "UnsatisfiedRange",
                "shortDescription": {
                  "text": "Return value is outside of declared range"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": true,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "UnsatisfiedRange",
                    "cweIds": [
                      129,
                      682
                    ],
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Probable bugs",
                      "index": 12,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "ClassWithTooManyDependencies",
                "shortDescription": {
                  "text": "Class with too many dependencies"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "ClassWithTooManyDependencies",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Dependency issues",
                      "index": 105,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "ClassWithoutNoArgConstructor",
                "shortDescription": {
                  "text": "Class without no-arg constructor"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "ClassWithoutNoArgConstructor",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/JavaBeans issues",
                      "index": 102,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "CastConflictsWithInstanceof",
                "shortDescription": {
                  "text": "Cast conflicts with 'instanceof'"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "CastConflictsWithInstanceof",
                    "cweIds": [
                      704
                    ],
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Probable bugs",
                      "index": 12,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "Contract",
                "shortDescription": {
                  "text": "Contract issues"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": true,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "Contract",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Probable bugs",
                      "index": 12,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "NewExceptionWithoutArguments",
                "shortDescription": {
                  "text": "Exception constructor called without arguments"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "NewExceptionWithoutArguments",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Error handling",
                      "index": 10,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "EnhancedSwitchBackwardMigration",
                "shortDescription": {
                  "text": "Enhanced 'switch'"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "note",
                  "parameters": {
                    "suppressToolId": "EnhancedSwitchBackwardMigration",
                    "ideaSeverity": "INFORMATION",
                    "qodanaSeverity": "Info"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Java language level migration aids/Java 14",
                      "index": 100,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "PackageWithTooManyClasses",
                "shortDescription": {
                  "text": "Package with too many classes"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "PackageWithTooManyClasses",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Packaging issues",
                      "index": 30,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "LoggingGuardedByCondition",
                "shortDescription": {
                  "text": "Logging calls guarded by log condition"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "note",
                  "parameters": {
                    "suppressToolId": "LoggingGuardedByCondition",
                    "ideaSeverity": "INFORMATION",
                    "qodanaSeverity": "Info"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "JVM languages/Logging",
                      "index": 34,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "TryFinallyCanBeTryWithResources",
                "shortDescription": {
                  "text": "'try finally' can be replaced with 'try' with resources"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "TryFinallyCanBeTryWithResources",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Java language level migration aids/Java 7",
                      "index": 115,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "SamePackageImport",
                "shortDescription": {
                  "text": "Unnecessary import from the same package"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "SamePackageImport",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Imports",
                      "index": 19,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "ThreadLocalSetWithNull",
                "shortDescription": {
                  "text": "'ThreadLocal.set()' with null as an argument"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": true,
                  "level": "note",
                  "parameters": {
                    "suppressToolId": "ThreadLocalSetWithNull",
                    "ideaSeverity": "WEAK WARNING",
                    "qodanaSeverity": "Moderate"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Threading issues",
                      "index": 22,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "MissingJavadoc",
                "shortDescription": {
                  "text": "Missing Javadoc"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "MissingJavadoc",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Javadoc",
                      "index": 49,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "AwaitWithoutCorrespondingSignal",
                "shortDescription": {
                  "text": "'await()' without corresponding 'signal()'"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "AwaitWithoutCorrespondingSignal",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Threading issues",
                      "index": 22,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "Java9RedundantRequiresStatement",
                "shortDescription": {
                  "text": "Redundant 'requires' directive in module-info"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "Java9RedundantRequiresStatement",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Declaration redundancy",
                      "index": 11,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "UnnecessaryLocalVariable",
                "shortDescription": {
                  "text": "Redundant local variable"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "UnnecessaryLocalVariable",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Data flow",
                      "index": 43,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "BusyWait",
                "shortDescription": {
                  "text": "Busy wait"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": true,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "BusyWait",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Threading issues",
                      "index": 22,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "ForLoopWithMissingComponent",
                "shortDescription": {
                  "text": "'for' loop with missing components"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "ForLoopWithMissingComponent",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Control flow issues",
                      "index": 23,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "OverwrittenKey",
                "shortDescription": {
                  "text": "Overwritten Map, Set, or array element"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": true,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "OverwrittenKey",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Probable bugs",
                      "index": 12,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "AnonymousClassMethodCount",
                "shortDescription": {
                  "text": "Anonymous class with too many methods"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "AnonymousInnerClassWithTooManyMethods",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Class metrics",
                      "index": 90,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "OptionalOfNullableMisuse",
                "shortDescription": {
                  "text": "Use of Optional.ofNullable with null or not-null argument"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": true,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "OptionalOfNullableMisuse",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Probable bugs",
                      "index": 12,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "CastToIncompatibleInterface",
                "shortDescription": {
                  "text": "Cast to incompatible type"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "CastToIncompatibleInterface",
                    "cweIds": [
                      704
                    ],
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Probable bugs",
                      "index": 12,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "SimplifiableConditionalExpression",
                "shortDescription": {
                  "text": "Simplifiable conditional expression"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": true,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "SimplifiableConditionalExpression",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Control flow issues",
                      "index": 23,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "InstanceofIncompatibleInterface",
                "shortDescription": {
                  "text": "'instanceof' with incompatible type"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "InstanceofIncompatibleInterface",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Probable bugs",
                      "index": 12,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "UnqualifiedMethodAccess",
                "shortDescription": {
                  "text": "Instance method call not qualified with 'this'"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "UnqualifiedMethodAccess",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Code style issues",
                      "index": 9,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "FunctionalExpressionCanBeFolded",
                "shortDescription": {
                  "text": "Functional expression can be folded"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "FunctionalExpressionCanBeFolded",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Declaration redundancy",
                      "index": 11,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "CustomClassloader",
                "shortDescription": {
                  "text": "Custom 'ClassLoader' is declared"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "CustomClassloader",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Security",
                      "index": 27,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "ThisEscapedInConstructor",
                "shortDescription": {
                  "text": "'this' reference escaped in object construction"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "ThisEscapedInObjectConstruction",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Initialization",
                      "index": 25,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "UnnecessarySuperConstructor",
                "shortDescription": {
                  "text": "Unnecessary call to 'super()'"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "UnnecessaryCallToSuper",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Code style issues",
                      "index": 9,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "IfCanBeSwitch",
                "shortDescription": {
                  "text": "'if' can be replaced with 'switch'"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "IfCanBeSwitch",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Java language level migration aids",
                      "index": 45,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "NonPublicClone",
                "shortDescription": {
                  "text": "'clone()' method not 'public'"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "NonPublicClone",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Cloning issues",
                      "index": 76,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "InfiniteRecursion",
                "shortDescription": {
                  "text": "Infinite recursion"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": true,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "InfiniteRecursion",
                    "cweIds": [
                      674,
                      835
                    ],
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Probable bugs",
                      "index": 12,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "DeprecatedIsStillUsed",
                "shortDescription": {
                  "text": "Deprecated member is still used"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "DeprecatedIsStillUsed",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Code maturity",
                      "index": 38,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "RedundantComparatorComparing",
                "shortDescription": {
                  "text": "Comparator method can be simplified"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "RedundantComparatorComparing",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Verbose or redundant code constructs",
                      "index": 31,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "VariableNotUsedInsideIf",
                "shortDescription": {
                  "text": "Reference checked for 'null' is not used inside 'if'"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "VariableNotUsedInsideIf",
                    "cweIds": [
                      563
                    ],
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Probable bugs",
                      "index": 12,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "CollectionAddAllCanBeReplacedWithConstructor",
                "shortDescription": {
                  "text": "Redundant 'Collection.addAll()' call"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": true,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "CollectionAddAllCanBeReplacedWithConstructor",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Performance",
                      "index": 8,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "MultipleReturnPointsPerMethod",
                "shortDescription": {
                  "text": "Method with multiple return points"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "MethodWithMultipleReturnPoints",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Method metrics",
                      "index": 98,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "SuspiciousMethodCalls",
                "shortDescription": {
                  "text": "Suspicious collection method call"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": true,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "SuspiciousMethodCalls",
                    "cweIds": [
                      628
                    ],
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Probable bugs",
                      "index": 12,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "ForwardCompatibility",
                "shortDescription": {
                  "text": "Forward compatibility"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": true,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "ForwardCompatibility",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Java language level issues",
                      "index": 106,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "DiamondCanBeReplacedWithExplicitTypeArguments",
                "shortDescription": {
                  "text": "Diamond can be replaced with explicit type arguments"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "note",
                  "parameters": {
                    "suppressToolId": "DiamondCanBeReplacedWithExplicitTypeArguments",
                    "ideaSeverity": "INFORMATION",
                    "qodanaSeverity": "Info"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Code style issues",
                      "index": 9,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "UseOfProcessBuilder",
                "shortDescription": {
                  "text": "Use of 'java.lang.ProcessBuilder' class"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "UseOfProcessBuilder",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Portability",
                      "index": 60,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "JavaRequiresAutoModule",
                "shortDescription": {
                  "text": "Dependencies on automatic modules"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "requires-transitive-automatic",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Java language level migration aids/Java 9",
                      "index": 55,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "ExcessiveRangeCheck",
                "shortDescription": {
                  "text": "Excessive range check"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "ExcessiveRangeCheck",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Verbose or redundant code constructs",
                      "index": 31,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "StringConcatenation",
                "shortDescription": {
                  "text": "String concatenation"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "StringConcatenation",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Internationalization",
                      "index": 7,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "ClassCanBeRecord",
                "shortDescription": {
                  "text": "Class can be record class"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "note",
                  "parameters": {
                    "suppressToolId": "ClassCanBeRecord",
                    "ideaSeverity": "WEAK WARNING",
                    "qodanaSeverity": "Moderate"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Java language level migration aids/Java 16",
                      "index": 136,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "ConstantAssertArgument",
                "shortDescription": {
                  "text": "Constant assert argument"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "ConstantAssertArgument",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Test frameworks",
                      "index": 94,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "RuntimeExec",
                "shortDescription": {
                  "text": "Call to 'Runtime.exec()'"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "CallToRuntimeExec",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Portability",
                      "index": 60,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "StaticInitializerReferencesSubClass",
                "shortDescription": {
                  "text": "Static initializer references subclass"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": true,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "StaticInitializerReferencesSubClass",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Threading issues",
                      "index": 22,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "MissingDeprecatedAnnotationOnScheduledForRemovalApi",
                "shortDescription": {
                  "text": "Missing '@Deprecated' annotation on scheduled for removal API"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": true,
                  "level": "error",
                  "parameters": {
                    "suppressToolId": "MissingDeprecatedAnnotationOnScheduledForRemovalApi",
                    "ideaSeverity": "ERROR",
                    "qodanaSeverity": "Critical"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "JVM languages",
                      "index": 1,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "ConstantDeclaredInAbstractClass",
                "shortDescription": {
                  "text": "Constant declared in 'abstract' class"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "ConstantDeclaredInAbstractClass",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Class structure",
                      "index": 15,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "SubtractionInCompareTo",
                "shortDescription": {
                  "text": "Subtraction in 'compareTo()'"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "SubtractionInCompareTo",
                    "cweIds": [
                      682
                    ],
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Probable bugs",
                      "index": 12,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "ConnectionResource",
                "shortDescription": {
                  "text": "Connection opened but not safely closed"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "ConnectionOpenedButNotSafelyClosed",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Performance/Embedded",
                      "index": 123,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "BooleanVariableAlwaysNegated",
                "shortDescription": {
                  "text": "Boolean variable is always inverted"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "BooleanVariableAlwaysNegated",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Data flow",
                      "index": 43,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "ExtendsAnnotation",
                "shortDescription": {
                  "text": "Class extends annotation interface"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": true,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "ClassExplicitlyAnnotation",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Inheritance issues",
                      "index": 110,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "unused",
                "shortDescription": {
                  "text": "Unused declaration"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "unused",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Declaration redundancy",
                      "index": 11,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "SuspiciousGetterSetter",
                "shortDescription": {
                  "text": "Suspicious getter/setter"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "SuspiciousGetterSetter",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/JavaBeans issues",
                      "index": 102,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "MismatchedStringCase",
                "shortDescription": {
                  "text": "Mismatched case in 'String' operation"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": true,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "MismatchedStringCase",
                    "cweIds": [
                      597
                    ],
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Probable bugs",
                      "index": 12,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "AssignmentToNull",
                "shortDescription": {
                  "text": "'null' assignment"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "AssignmentToNull",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Assignment issues",
                      "index": 54,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "WaitCalledOnCondition",
                "shortDescription": {
                  "text": "'wait()' called on 'java.util.concurrent.locks.Condition' object"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "WaitCalledOnCondition",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Threading issues",
                      "index": 22,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "NonSynchronizedMethodOverridesSynchronizedMethod",
                "shortDescription": {
                  "text": "Unsynchronized method overrides 'synchronized' method"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "NonSynchronizedMethodOverridesSynchronizedMethod",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Threading issues",
                      "index": 22,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "ProtectedMemberInFinalClass",
                "shortDescription": {
                  "text": "'protected' member in 'final' class"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "ProtectedMemberInFinalClass",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Declaration redundancy",
                      "index": 11,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "TooBroadCatch",
                "shortDescription": {
                  "text": "Overly broad 'catch' block"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "OverlyBroadCatchBlock",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Error handling",
                      "index": 10,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "DanglingJavadoc",
                "shortDescription": {
                  "text": "Dangling Javadoc comment"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "DanglingJavadoc",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Javadoc",
                      "index": 49,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "HibernateResource",
                "shortDescription": {
                  "text": "Hibernate resource opened but not safely closed"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "HibernateResourceOpenedButNotSafelyClosed",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Resource management",
                      "index": 99,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "UnnecessaryInitCause",
                "shortDescription": {
                  "text": "Unnecessary call to 'Throwable.initCause()'"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": true,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "UnnecessaryInitCause",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Error handling",
                      "index": 10,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "ComparisonOfShortAndChar",
                "shortDescription": {
                  "text": "Comparison of 'short' and 'char' values"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": true,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "ComparisonOfShortAndChar",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Numeric issues",
                      "index": 24,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "ArrayCanBeReplacedWithEnumValues",
                "shortDescription": {
                  "text": "Array can be replaced with enum values"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "note",
                  "parameters": {
                    "suppressToolId": "ArrayCanBeReplacedWithEnumValues",
                    "ideaSeverity": "INFORMATION",
                    "qodanaSeverity": "Info"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Code style issues",
                      "index": 9,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "WaitNotifyNotInSynchronizedContext",
                "shortDescription": {
                  "text": "'wait()' or 'notify()' is not in synchronized context"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "WaitNotifyWhileNotSynced",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Threading issues",
                      "index": 22,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "DollarSignInName",
                "shortDescription": {
                  "text": "Use of '$' in identifier"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "DollarSignInName",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Naming conventions",
                      "index": 51,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "DynamicRegexReplaceableByCompiledPattern",
                "shortDescription": {
                  "text": "Dynamic regular expression can be replaced by compiled 'Pattern'"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "DynamicRegexReplaceableByCompiledPattern",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Performance",
                      "index": 8,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "EmptyInitializer",
                "shortDescription": {
                  "text": "Empty class initializer"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "EmptyClassInitializer",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Declaration redundancy",
                      "index": 11,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "UnnecessaryBreak",
                "shortDescription": {
                  "text": "Unnecessary 'break' statement"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "UnnecessaryBreak",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Verbose or redundant code constructs",
                      "index": 31,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "RawUseOfParameterizedType",
                "shortDescription": {
                  "text": "Raw use of parameterized class"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "rawtypes",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Java language level migration aids/Java 5",
                      "index": 82,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "PublicConstructorInNonPublicClass",
                "shortDescription": {
                  "text": "'public' constructor in non-public class"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "PublicConstructorInNonPublicClass",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Visibility",
                      "index": 64,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "ProtectedInnerClass",
                "shortDescription": {
                  "text": "Protected nested class"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "ProtectedInnerClass",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Encapsulation",
                      "index": 93,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "UnqualifiedStaticUsage",
                "shortDescription": {
                  "text": "Unqualified static access"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "UnqualifiedStaticUsage",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Code style issues",
                      "index": 9,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "ExternalizableWithoutPublicNoArgConstructor",
                "shortDescription": {
                  "text": "'Externalizable' class without 'public' no-arg constructor"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": true,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "ExternalizableWithoutPublicNoArgConstructor",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Serialization issues",
                      "index": 16,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "StaticGuardedByInstance",
                "shortDescription": {
                  "text": "Static member guarded by instance field or this"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "StaticGuardedByInstance",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Concurrency annotation issues",
                      "index": 66,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "ManualArrayCopy",
                "shortDescription": {
                  "text": "Manual array copy"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": true,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "ManualArrayCopy",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Performance",
                      "index": 8,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "StaticPseudoFunctionalStyleMethod",
                "shortDescription": {
                  "text": "Guava pseudo-functional call can be converted to Stream API call"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "StaticPseudoFunctionalStyleMethod",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Java language level migration aids/Java 8",
                      "index": 85,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "ControlFlowStatementWithoutBraces",
                "shortDescription": {
                  "text": "Control flow statement without braces"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "note",
                  "parameters": {
                    "suppressToolId": "ControlFlowStatementWithoutBraces",
                    "ideaSeverity": "INFORMATION",
                    "qodanaSeverity": "Info"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Code style issues",
                      "index": 9,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "MisspelledEquals",
                "shortDescription": {
                  "text": "'equal()' instead of 'equals()'"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "MisspelledEquals",
                    "cweIds": [
                      697
                    ],
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Probable bugs",
                      "index": 12,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "LengthOneStringInIndexOf",
                "shortDescription": {
                  "text": "Single character string argument in 'String.indexOf()' call"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "SingleCharacterStringConcatenation",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Performance",
                      "index": 8,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "NonFinalFieldInEnum",
                "shortDescription": {
                  "text": "Non-final field in 'enum'"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "NonFinalFieldInEnum",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Class structure",
                      "index": 15,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "EnumClass",
                "shortDescription": {
                  "text": "Enumerated class"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "EnumClass",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Java language level issues",
                      "index": 106,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "TrivialFunctionalExpressionUsage",
                "shortDescription": {
                  "text": "Trivial usage of functional expression"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "TrivialFunctionalExpressionUsage",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Declaration redundancy",
                      "index": 11,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "AnonymousHasLambdaAlternative",
                "shortDescription": {
                  "text": "Anonymous type has shorter lambda alternative"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "AnonymousHasLambdaAlternative",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Java language level migration aids/Java 8",
                      "index": 85,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "ExtendsThread",
                "shortDescription": {
                  "text": "Class directly extends 'Thread'"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "ClassExplicitlyExtendsThread",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Threading issues",
                      "index": 22,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "SimplifyOptionalCallChains",
                "shortDescription": {
                  "text": "Optional call chain can be simplified"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "SimplifyOptionalCallChains",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Verbose or redundant code constructs",
                      "index": 31,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "RandomDoubleForRandomInteger",
                "shortDescription": {
                  "text": "Using 'Random.nextDouble()' to get random integer"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "UsingRandomNextDoubleForRandomInteger",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Performance",
                      "index": 8,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "SuspiciousArrayCast",
                "shortDescription": {
                  "text": "Suspicious array cast"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "SuspiciousArrayCast",
                    "cweIds": [
                      704
                    ],
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Probable bugs",
                      "index": 12,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "ZeroLengthArrayInitialization",
                "shortDescription": {
                  "text": "Zero-length array allocation"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "ZeroLengthArrayAllocation",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Memory",
                      "index": 119,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "DivideByZero",
                "shortDescription": {
                  "text": "Division by zero"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": true,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "divzero",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Numeric issues",
                      "index": 24,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "MissingSerialAnnotation",
                "shortDescription": {
                  "text": "'@Serial' annotation can be used"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": true,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "MissingSerialAnnotation",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Serialization issues",
                      "index": 16,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "StringConcatenationMissingWhitespace",
                "shortDescription": {
                  "text": "Whitespace may be missing in string concatenation"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "StringConcatenationMissingWhitespace",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Probable bugs",
                      "index": 12,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "StandardVariableNames",
                "shortDescription": {
                  "text": "Standard variable names"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "StandardVariableNames",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Naming conventions",
                      "index": 51,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "DeconstructionCanBeUsed",
                "shortDescription": {
                  "text": "Record pattern can be used"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "note",
                  "parameters": {
                    "suppressToolId": "DeconstructionCanBeUsed",
                    "ideaSeverity": "INFORMATION",
                    "qodanaSeverity": "Info"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Java language level migration aids/Java 21",
                      "index": 138,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "ExceptionFromCatchWhichDoesntWrap",
                "shortDescription": {
                  "text": "'throw' inside 'catch' block which ignores the caught exception"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "ThrowInsideCatchBlockWhichIgnoresCaughtException",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Error handling",
                      "index": 10,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "MethodOnlyUsedFromInnerClass",
                "shortDescription": {
                  "text": "Private method only used from inner class"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "MethodOnlyUsedFromInnerClass",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Abstraction issues",
                      "index": 53,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "ComparisonToNaN",
                "shortDescription": {
                  "text": "Comparison to 'Double.NaN' or 'Float.NaN'"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": true,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "ComparisonToNaN",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Numeric issues",
                      "index": 24,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "MultiCatchCanBeSplit",
                "shortDescription": {
                  "text": "Multi-catch can be split into separate catch blocks"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "note",
                  "parameters": {
                    "suppressToolId": "MultiCatchCanBeSplit",
                    "ideaSeverity": "INFORMATION",
                    "qodanaSeverity": "Info"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Code style issues",
                      "index": 9,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "ResultSetIndexZero",
                "shortDescription": {
                  "text": "Use of index 0 in JDBC ResultSet"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "UseOfIndexZeroInJDBCResultSet",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Probable bugs",
                      "index": 12,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "ConditionCoveredByFurtherCondition",
                "shortDescription": {
                  "text": "Condition is covered by further condition"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "ConditionCoveredByFurtherCondition",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Verbose or redundant code constructs",
                      "index": 31,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "PatternVariableHidesField",
                "shortDescription": {
                  "text": "Pattern variable hides field"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": true,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "PatternVariableHidesField",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Visibility",
                      "index": 64,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "JoinDeclarationAndAssignmentJava",
                "shortDescription": {
                  "text": "Assignment can be joined with declaration"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "note",
                  "parameters": {
                    "suppressToolId": "JoinDeclarationAndAssignmentJava",
                    "ideaSeverity": "INFORMATION",
                    "qodanaSeverity": "Info"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Code style issues",
                      "index": 9,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "InnerClassVariableHidesOuterClassVariable",
                "shortDescription": {
                  "text": "Inner class field hides outer class field"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "InnerClassFieldHidesOuterClassField",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Visibility",
                      "index": 64,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "MISSORTED_IMPORTS",
                "shortDescription": {
                  "text": "Missorted imports"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "note",
                  "parameters": {
                    "suppressToolId": "MISSORTED_IMPORTS",
                    "ideaSeverity": "INFORMATION",
                    "qodanaSeverity": "Info"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Imports",
                      "index": 19,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "UnnecessaryModifier",
                "shortDescription": {
                  "text": "Unnecessary modifier"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "UnnecessaryModifier",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Code style issues",
                      "index": 9,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "NonThreadSafeLazyInitialization",
                "shortDescription": {
                  "text": "Unsafe lazy initialization of 'static' field"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "NonThreadSafeLazyInitialization",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Initialization",
                      "index": 25,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "ConditionalCanBePushedInsideExpression",
                "shortDescription": {
                  "text": "Conditional can be pushed inside branch expression"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "note",
                  "parameters": {
                    "suppressToolId": "ConditionalCanBePushedInsideExpression",
                    "ideaSeverity": "INFORMATION",
                    "qodanaSeverity": "Info"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Control flow issues",
                      "index": 23,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "CloneInNonCloneableClass",
                "shortDescription": {
                  "text": "'clone()' method in non-Cloneable class"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "CloneInNonCloneableClass",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Cloning issues",
                      "index": 76,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "Java8ListReplaceAll",
                "shortDescription": {
                  "text": "Loop can be replaced with 'List.replaceAll()'"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "Java8ListReplaceAll",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Java language level migration aids/Java 8",
                      "index": 85,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "BigDecimalLegacyMethod",
                "shortDescription": {
                  "text": "'BigDecimal' legacy method called"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "BigDecimalLegacyMethod",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Java language level migration aids/Java 5",
                      "index": 82,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "MissingPackageInfo",
                "shortDescription": {
                  "text": "Missing 'package-info.java'"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "MissingPackageInfo",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Javadoc",
                      "index": 49,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "UnnecessaryConstructor",
                "shortDescription": {
                  "text": "Redundant no-arg constructor"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "RedundantNoArgConstructor",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Code style issues",
                      "index": 9,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "StringBufferField",
                "shortDescription": {
                  "text": "'StringBuilder' field"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "StringBufferField",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Memory",
                      "index": 119,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "ClassNameSameAsAncestorName",
                "shortDescription": {
                  "text": "Class name same as ancestor name"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "ClassNameSameAsAncestorName",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Naming conventions/Class",
                      "index": 52,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "RedundantMethodOverride",
                "shortDescription": {
                  "text": "Method is identical to its super method"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "RedundantMethodOverride",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Inheritance issues",
                      "index": 110,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "ContinueStatementWithLabel",
                "shortDescription": {
                  "text": "'continue' statement with label"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "ContinueStatementWithLabel",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Control flow issues",
                      "index": 23,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "SimplifiableBooleanExpression",
                "shortDescription": {
                  "text": "Simplifiable boolean expression"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": true,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "SimplifiableBooleanExpression",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Control flow issues",
                      "index": 23,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "SignalWithoutCorrespondingAwait",
                "shortDescription": {
                  "text": "'signal()' without corresponding 'await()'"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "SignalWithoutCorrespondingAwait",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Threading issues",
                      "index": 22,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "FoldExpressionIntoStream",
                "shortDescription": {
                  "text": "Expression can be folded into Stream chain"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "note",
                  "parameters": {
                    "suppressToolId": "FoldExpressionIntoStream",
                    "ideaSeverity": "INFORMATION",
                    "qodanaSeverity": "Info"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Java language level migration aids/Java 8",
                      "index": 85,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "SerializableDeserializableClassInSecureContext",
                "shortDescription": {
                  "text": "Serializable class in secure context"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "SerializableDeserializableClassInSecureContext",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Security",
                      "index": 27,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "JavaModuleNaming",
                "shortDescription": {
                  "text": "Java module name contradicts the convention"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "JavaModuleNaming",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Naming conventions",
                      "index": 51,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "UnaryPlus",
                "shortDescription": {
                  "text": "Unary plus"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": true,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "UnaryPlus",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Numeric issues",
                      "index": 24,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "ConstructorCount",
                "shortDescription": {
                  "text": "Class with too many constructors"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "ClassWithTooManyConstructors",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Class metrics",
                      "index": 90,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "MethodOverloadsParentMethod",
                "shortDescription": {
                  "text": "Possibly unintended overload of method from superclass"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "MethodOverloadsMethodOfSuperclass",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Visibility",
                      "index": 64,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "DisjointPackage",
                "shortDescription": {
                  "text": "Package with disjoint dependency graph"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "DisjointPackage",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Packaging issues",
                      "index": 30,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "IncrementDecrementUsedAsExpression",
                "shortDescription": {
                  "text": "Result of '++' or '--' used"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "ValueOfIncrementOrDecrementUsed",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Assignment issues",
                      "index": 54,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "UpperCaseFieldNameNotConstant",
                "shortDescription": {
                  "text": "Non-constant field with upper-case name"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "NonConstantFieldWithUpperCaseName",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Naming conventions",
                      "index": 51,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "MethodMayBeSynchronized",
                "shortDescription": {
                  "text": "Method with single 'synchronized' block can be replaced with 'synchronized' method"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "MethodMayBeSynchronized",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Threading issues",
                      "index": 22,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "Convert2streamapi",
                "shortDescription": {
                  "text": "Loop can be collapsed with Stream API"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "note",
                  "parameters": {
                    "suppressToolId": "Convert2streamapi",
                    "ideaSeverity": "INFORMATION",
                    "qodanaSeverity": "Info"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Java language level migration aids/Java 8",
                      "index": 85,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "SerialPersistentFieldsWithWrongSignature",
                "shortDescription": {
                  "text": "'serialPersistentFields' field not declared 'private static final ObjectStreamField[]'"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "SerialPersistentFieldsWithWrongSignature",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Serialization issues",
                      "index": 16,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "ComparatorResultComparison",
                "shortDescription": {
                  "text": "Suspicious usage of compare method"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": true,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "ComparatorResultComparison",
                    "cweIds": [
                      253
                    ],
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Probable bugs",
                      "index": 12,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "ListIndexOfReplaceableByContains",
                "shortDescription": {
                  "text": "'List.indexOf()' expression can be replaced with 'contains()'"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "ListIndexOfReplaceableByContains",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Code style issues",
                      "index": 9,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "NonStrictComparisonCanBeEquality",
                "shortDescription": {
                  "text": "Non-strict inequality '>=' or '<=' can be replaced with '=='"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "note",
                  "parameters": {
                    "suppressToolId": "NonStrictComparisonCanBeEquality",
                    "ideaSeverity": "WEAK WARNING",
                    "qodanaSeverity": "Moderate"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Verbose or redundant code constructs",
                      "index": 31,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "UnnecessaryParentheses",
                "shortDescription": {
                  "text": "Unnecessary parentheses"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "note",
                  "parameters": {
                    "suppressToolId": "UnnecessaryParentheses",
                    "ideaSeverity": "INFORMATION",
                    "qodanaSeverity": "Info"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Code style issues",
                      "index": 9,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "SuspiciousToArrayCall",
                "shortDescription": {
                  "text": "Suspicious 'Collection.toArray()' call"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": true,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "SuspiciousToArrayCall",
                    "cweIds": [
                      704
                    ],
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Probable bugs",
                      "index": 12,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "StringToUpperWithoutLocale",
                "shortDescription": {
                  "text": "Call to 'String.toUpperCase()' or 'toLowerCase()' without locale"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "StringToUpperCaseOrToLowerCaseWithoutLocale",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Internationalization",
                      "index": 7,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "ExplicitToImplicitClassMigration",
                "shortDescription": {
                  "text": "Explicit class declaration can be converted into implicitly declared class"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "ExplicitToImplicitClassMigration",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Java language level migration aids/Java 21",
                      "index": 138,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "NestedMethodCall",
                "shortDescription": {
                  "text": "Nested method call"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "NestedMethodCall",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Code style issues",
                      "index": 9,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "ClassWithTooManyTransitiveDependents",
                "shortDescription": {
                  "text": "Class with too many transitive dependents"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "ClassWithTooManyTransitiveDependents",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Dependency issues",
                      "index": 105,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "CompareToUsesNonFinalVariable",
                "shortDescription": {
                  "text": "Non-final field referenced in 'compareTo()'"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "CompareToUsesNonFinalVariable",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Probable bugs",
                      "index": 12,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "JavacQuirks",
                "shortDescription": {
                  "text": "Javac quirks"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": true,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "JavacQuirks",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Compiler issues",
                      "index": 116,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "SwitchStatement",
                "shortDescription": {
                  "text": "'switch' statement"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "SwitchStatement",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Control flow issues",
                      "index": 23,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "StringBufferReplaceableByString",
                "shortDescription": {
                  "text": "'StringBuilder' can be replaced with 'String'"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "StringBufferReplaceableByString",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Verbose or redundant code constructs",
                      "index": 31,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "SourceToSinkFlow",
                "shortDescription": {
                  "text": "Non-safe string is passed to safe method"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": true,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "tainting",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "JVM languages",
                      "index": 1,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "RecordCanBeClass",
                "shortDescription": {
                  "text": "Record can be converted to class"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "note",
                  "parameters": {
                    "suppressToolId": "RecordCanBeClass",
                    "ideaSeverity": "INFORMATION",
                    "qodanaSeverity": "Info"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Code style issues",
                      "index": 9,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "MalformedFormatString",
                "shortDescription": {
                  "text": "Malformed format string"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": true,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "MalformedFormatString",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Probable bugs",
                      "index": 12,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "ThreadYield",
                "shortDescription": {
                  "text": "Call to 'Thread.yield()'"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "CallToThreadYield",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Threading issues",
                      "index": 22,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "LambdaCanBeMethodCall",
                "shortDescription": {
                  "text": "Lambda can be replaced with method call"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "note",
                  "parameters": {
                    "suppressToolId": "LambdaCanBeMethodCall",
                    "ideaSeverity": "INFORMATION",
                    "qodanaSeverity": "Info"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Java language level migration aids/Java 8",
                      "index": 85,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "EndlessStream",
                "shortDescription": {
                  "text": "Non-short-circuit operation consumes infinite stream"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": true,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "EndlessStream",
                    "cweIds": [
                      835
                    ],
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Probable bugs",
                      "index": 12,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "Singleton",
                "shortDescription": {
                  "text": "Singleton"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "Singleton",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Class structure",
                      "index": 15,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "NonFinalUtilityClass",
                "shortDescription": {
                  "text": "Utility class is not 'final'"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "NonFinalUtilityClass",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Class structure",
                      "index": 15,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "FuseStreamOperations",
                "shortDescription": {
                  "text": "Subsequent steps can be fused into Stream API chain"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "FuseStreamOperations",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Code style issues",
                      "index": 9,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "DefaultNotLastCaseInSwitch",
                "shortDescription": {
                  "text": "'default' not last case in 'switch'"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": true,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "DefaultNotLastCaseInSwitch",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Control flow issues",
                      "index": 23,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "NullThrown",
                "shortDescription": {
                  "text": "'null' thrown"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "NullThrown",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Error handling",
                      "index": 10,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "LocalCanBeFinal",
                "shortDescription": {
                  "text": "Local variable or parameter can be 'final'"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "LocalCanBeFinal",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Code style issues",
                      "index": 9,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "FieldMayBeStatic",
                "shortDescription": {
                  "text": "Field can be made 'static'"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "FieldMayBeStatic",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Performance",
                      "index": 8,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "ArrayEquals",
                "shortDescription": {
                  "text": "'equals()' called on array"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": true,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "ArrayEquals",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Probable bugs",
                      "index": 12,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "ProblematicVarargsMethodOverride",
                "shortDescription": {
                  "text": "Non-varargs method overrides varargs method"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "ProblematicVarargsMethodOverride",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Inheritance issues",
                      "index": 110,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "MisspelledHeader",
                "shortDescription": {
                  "text": "Unknown or misspelled header name"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "note",
                  "parameters": {
                    "suppressToolId": "MisspelledHeader",
                    "ideaSeverity": "WEAK WARNING",
                    "qodanaSeverity": "Moderate"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Manifest",
                      "index": 77,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "AtomicFieldUpdaterIssues",
                "shortDescription": {
                  "text": "Inconsistent 'AtomicFieldUpdater' declaration"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": true,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "AtomicFieldUpdaterIssues",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Threading issues",
                      "index": 22,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "PackageNamingConvention",
                "shortDescription": {
                  "text": "Package naming convention"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "PackageNamingConvention",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Naming conventions",
                      "index": 51,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "ThrowableNotThrown",
                "shortDescription": {
                  "text": "'Throwable' not thrown"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": true,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "ThrowableNotThrown",
                    "cweIds": [
                      390,
                      703
                    ],
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Probable bugs",
                      "index": 12,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "CapturingCleaner",
                "shortDescription": {
                  "text": "Cleaner captures object reference"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": true,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "CapturingCleaner",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Probable bugs",
                      "index": 12,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "ThreadStartInConstruction",
                "shortDescription": {
                  "text": "Call to 'Thread.start()' during object construction"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "CallToThreadStartDuringObjectConstruction",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Threading issues",
                      "index": 22,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "SwitchStatementWithTooManyBranches",
                "shortDescription": {
                  "text": "Maximum 'switch' branches"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "SwitchStatementWithTooManyBranches",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Control flow issues",
                      "index": 23,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "LoopConditionNotUpdatedInsideLoop",
                "shortDescription": {
                  "text": "Loop variable not updated inside loop"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": true,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "LoopConditionNotUpdatedInsideLoop",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Control flow issues",
                      "index": 23,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "DoubleCheckedLocking",
                "shortDescription": {
                  "text": "Double-checked locking"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": true,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "DoubleCheckedLocking",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Threading issues",
                      "index": 22,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "MisspelledMethodName",
                "shortDescription": {
                  "text": "Method names differing only by case"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "MethodNamesDifferingOnlyByCase",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Naming conventions/Method",
                      "index": 70,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "NonSerializableObjectBoundToHttpSession",
                "shortDescription": {
                  "text": "Non-serializable object bound to 'HttpSession'"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "NonSerializableObjectBoundToHttpSession",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Serialization issues",
                      "index": 16,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "ThreadLocalNotStaticFinal",
                "shortDescription": {
                  "text": "'ThreadLocal' field not declared 'static final'"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "ThreadLocalNotStaticFinal",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Threading issues",
                      "index": 22,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "AccessStaticViaInstance",
                "shortDescription": {
                  "text": "Access static member via instance reference"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "AccessStaticViaInstance",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Declaration redundancy",
                      "index": 11,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "CallToNativeMethodWhileLocked",
                "shortDescription": {
                  "text": "Call to a 'native' method while locked"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "CallToNativeMethodWhileLocked",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Threading issues",
                      "index": 22,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "Dependency",
                "shortDescription": {
                  "text": "Illegal package dependencies"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": true,
                  "level": "error",
                  "parameters": {
                    "suppressToolId": "Dependency",
                    "ideaSeverity": "ERROR",
                    "qodanaSeverity": "Critical"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "JVM languages",
                      "index": 1,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "NestingDepth",
                "shortDescription": {
                  "text": "Overly nested method"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "OverlyNestedMethod",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Method metrics",
                      "index": 98,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "RedundantExplicitChronoField",
                "shortDescription": {
                  "text": "Calls of 'java.time' methods with explicit 'ChronoField' or 'ChronoUnit' arguments can be simplified"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "RedundantExplicitChronoField",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Verbose or redundant code constructs",
                      "index": 31,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "WriteOnlyObject",
                "shortDescription": {
                  "text": "Write-only object"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": true,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "WriteOnlyObject",
                    "cweIds": [
                      563
                    ],
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Probable bugs",
                      "index": 12,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "SocketResource",
                "shortDescription": {
                  "text": "Socket opened but not safely closed"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "SocketOpenedButNotSafelyClosed",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Resource management",
                      "index": 99,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "TypeParameterHidesVisibleType",
                "shortDescription": {
                  "text": "Type parameter hides visible type"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": true,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "TypeParameterHidesVisibleType",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Visibility",
                      "index": 64,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "MaskedAssertion",
                "shortDescription": {
                  "text": "Assertion is suppressed by 'catch'"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": true,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "MaskedAssertion",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Test frameworks",
                      "index": 94,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "StringTokenizerDelimiter",
                "shortDescription": {
                  "text": "Duplicated delimiters in 'StringTokenizer'"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": true,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "StringTokenizerDelimiter",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Probable bugs",
                      "index": 12,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "ReflectionForUnavailableAnnotation",
                "shortDescription": {
                  "text": "Reflective access to a source-only annotation"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": true,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "ReflectionForUnavailableAnnotation",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Probable bugs",
                      "index": 12,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "InstantiatingObjectToGetClassObject",
                "shortDescription": {
                  "text": "Instantiating object to get 'Class' object"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": true,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "InstantiatingObjectToGetClassObject",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Performance",
                      "index": 8,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "ClassWithMultipleLoggers",
                "shortDescription": {
                  "text": "Class with multiple loggers"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "ClassWithMultipleLoggers",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Logging",
                      "index": 79,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "ShiftOutOfRange",
                "shortDescription": {
                  "text": "Shift operation by inappropriate constant"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": true,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "ShiftOutOfRange",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Bitwise operation issues",
                      "index": 140,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "ThreadRun",
                "shortDescription": {
                  "text": "Call to 'Thread.run()'"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": true,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "CallToThreadRun",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "JVM languages",
                      "index": 1,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "AutoBoxing",
                "shortDescription": {
                  "text": "Auto-boxing"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "AutoBoxing",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Performance",
                      "index": 8,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "ExtendsThrowable",
                "shortDescription": {
                  "text": "Class directly extends 'Throwable'"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "ExtendsThrowable",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Error handling",
                      "index": 10,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "InterfaceNeverImplemented",
                "shortDescription": {
                  "text": "Interface which has no concrete subclass"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "InterfaceNeverImplemented",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Inheritance issues",
                      "index": 110,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "ThreadDeathRethrown",
                "shortDescription": {
                  "text": "'ThreadDeath' not rethrown"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "ThreadDeathNotRethrown",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Error handling",
                      "index": 10,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "CloneCallsConstructors",
                "shortDescription": {
                  "text": "'clone()' instantiates objects with constructor"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "CloneCallsConstructors",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Cloning issues",
                      "index": 76,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "UnnecessaryModuleDependencyInspection",
                "shortDescription": {
                  "text": "Unnecessary module dependency"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "UnnecessaryModuleDependencyInspection",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Declaration redundancy",
                      "index": 11,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "ArraysAsListWithZeroOrOneArgument",
                "shortDescription": {
                  "text": "Call to 'Arrays.asList()' with too few arguments"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "ArraysAsListWithZeroOrOneArgument",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Performance",
                      "index": 8,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "UnstableApiUsage",
                "shortDescription": {
                  "text": "Unstable API Usage"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": true,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "UnstableApiUsage",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "JVM languages",
                      "index": 1,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "LambdaUnfriendlyMethodOverload",
                "shortDescription": {
                  "text": "Lambda-unfriendly method overload"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "LambdaUnfriendlyMethodOverload",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Naming conventions/Method",
                      "index": 70,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "SerializableRecordContainsIgnoredMembers",
                "shortDescription": {
                  "text": "'record' contains ignored members"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": true,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "SerializableRecordContainsIgnoredMembers",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Serialization issues",
                      "index": 16,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "UnnecessarilyQualifiedInnerClassAccess",
                "shortDescription": {
                  "text": "Unnecessarily qualified inner class access"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "note",
                  "parameters": {
                    "suppressToolId": "UnnecessarilyQualifiedInnerClassAccess",
                    "ideaSeverity": "INFORMATION",
                    "qodanaSeverity": "Info"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Code style issues",
                      "index": 9,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "JavadocLinkAsPlainText",
                "shortDescription": {
                  "text": "Link specified as plain text"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "JavadocLinkAsPlainText",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Javadoc",
                      "index": 49,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "WhileCanBeDoWhile",
                "shortDescription": {
                  "text": "'while' can be replaced with 'do while'"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": true,
                  "level": "note",
                  "parameters": {
                    "suppressToolId": "WhileCanBeDoWhile",
                    "ideaSeverity": "WEAK WARNING",
                    "qodanaSeverity": "Moderate"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Control flow issues",
                      "index": 23,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "SharedThreadLocalRandom",
                "shortDescription": {
                  "text": "'ThreadLocalRandom' instance might be shared"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "SharedThreadLocalRandom",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Threading issues",
                      "index": 22,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "AbstractMethodOverridesConcreteMethod",
                "shortDescription": {
                  "text": "Abstract method overrides concrete method"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "AbstractMethodOverridesConcreteMethod",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Inheritance issues",
                      "index": 110,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "CodeBlock2Expr",
                "shortDescription": {
                  "text": "Statement lambda can be replaced with expression lambda"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "CodeBlock2Expr",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Java language level migration aids/Java 8",
                      "index": 85,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "SimplifyForEach",
                "shortDescription": {
                  "text": "Simplifiable forEach() call"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "note",
                  "parameters": {
                    "suppressToolId": "SimplifyForEach",
                    "ideaSeverity": "INFORMATION",
                    "qodanaSeverity": "Info"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Java language level migration aids/Java 8",
                      "index": 85,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "RedundantFieldInitialization",
                "shortDescription": {
                  "text": "Redundant field initialization"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "RedundantFieldInitialization",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Code style issues",
                      "index": 9,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "Since15",
                "shortDescription": {
                  "text": "Usages of API which isn't available at the configured language level"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "error",
                  "parameters": {
                    "suppressToolId": "Since15",
                    "ideaSeverity": "ERROR",
                    "qodanaSeverity": "Critical"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "JVM languages",
                      "index": 1,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "ReadObjectInitialization",
                "shortDescription": {
                  "text": "Instance field may not be initialized by 'readObject()'"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "InstanceVariableMayNotBeInitializedByReadObject",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Serialization issues",
                      "index": 16,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "NonAtomicOperationOnVolatileField",
                "shortDescription": {
                  "text": "Non-atomic operation on 'volatile' field"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": true,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "NonAtomicOperationOnVolatileField",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Threading issues",
                      "index": 22,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "QuestionableName",
                "shortDescription": {
                  "text": "Questionable name"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "QuestionableName",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Naming conventions",
                      "index": 51,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "UNCHECKED_WARNING",
                "shortDescription": {
                  "text": "Unchecked warning"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "unchecked",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Compiler issues",
                      "index": 116,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "RedundantLengthCheck",
                "shortDescription": {
                  "text": "Redundant array length check"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "RedundantLengthCheck",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Verbose or redundant code constructs",
                      "index": 31,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "DataFlowIssue",
                "shortDescription": {
                  "text": "Nullability and data flow problems"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": true,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "DataFlowIssue",
                    "cweIds": [
                      129,
                      252,
                      253,
                      394,
                      395,
                      476,
                      570,
                      571,
                      690
                    ],
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Probable bugs",
                      "index": 12,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "ParameterCanBeLocal",
                "shortDescription": {
                  "text": "Value passed as parameter never read"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "ParameterCanBeLocal",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Class structure",
                      "index": 15,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "SwitchStatementDensity",
                "shortDescription": {
                  "text": "'switch' statement with too low of a branch density"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "SwitchStatementDensity",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Control flow issues",
                      "index": 23,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "MismatchedJavadocCode",
                "shortDescription": {
                  "text": "Mismatch between Javadoc and code"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "MismatchedJavadocCode",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Javadoc",
                      "index": 49,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "SimplifiableAnnotation",
                "shortDescription": {
                  "text": "Simplifiable annotation"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "SimplifiableAnnotation",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Code style issues",
                      "index": 9,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "Guava",
                "shortDescription": {
                  "text": "Guava's functional primitives can be replaced with Java"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "Guava",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Java language level migration aids/Java 8",
                      "index": 85,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "NoopMethodInAbstractClass",
                "shortDescription": {
                  "text": "No-op method in 'abstract' class"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "NoopMethodInAbstractClass",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Class structure",
                      "index": 15,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "OverridableMethodCallDuringObjectConstruction",
                "shortDescription": {
                  "text": "Overridable method called during object construction"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "OverridableMethodCallDuringObjectConstruction",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Initialization",
                      "index": 25,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "ImplicitCallToSuper",
                "shortDescription": {
                  "text": "Implicit call to 'super()'"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "ImplicitCallToSuper",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Code style issues",
                      "index": 9,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "MissingDeprecatedAnnotation",
                "shortDescription": {
                  "text": "Missing '@Deprecated' annotation"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "MissingDeprecatedAnnotation",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Javadoc",
                      "index": 49,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "StringTemplateMigration",
                "shortDescription": {
                  "text": "String template can be used"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "StringTemplateMigration",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Java language level migration aids/Java 21",
                      "index": 138,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "MustAlreadyBeRemovedApi",
                "shortDescription": {
                  "text": "API must already be removed"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": true,
                  "level": "error",
                  "parameters": {
                    "suppressToolId": "MustAlreadyBeRemovedApi",
                    "ideaSeverity": "ERROR",
                    "qodanaSeverity": "Critical"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "JVM languages",
                      "index": 1,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "CachedNumberConstructorCall",
                "shortDescription": {
                  "text": "Number constructor call with primitive argument"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": true,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "CachedNumberConstructorCall",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Numeric issues",
                      "index": 24,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "FieldHidesSuperclassField",
                "shortDescription": {
                  "text": "Subclass field hides superclass field"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "FieldNameHidesFieldInSuperclass",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Visibility",
                      "index": 64,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "SimpleDateFormatWithoutLocale",
                "shortDescription": {
                  "text": "'SimpleDateFormat' without locale"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "SimpleDateFormatWithoutLocale",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Internationalization",
                      "index": 7,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "AnnotationClass",
                "shortDescription": {
                  "text": "Annotation interface"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "AnnotationClass",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Java language level issues",
                      "index": 106,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "Finalize",
                "shortDescription": {
                  "text": "'finalize()' should not be overridden"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "FinalizeDeclaration",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Finalization",
                      "index": 47,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "PointlessArithmeticExpression",
                "shortDescription": {
                  "text": "Pointless arithmetic expression"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": true,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "PointlessArithmeticExpression",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Numeric issues",
                      "index": 24,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "OverlyLargePrimitiveArrayInitializer",
                "shortDescription": {
                  "text": "Overly large initializer for array of primitive type"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "OverlyLargePrimitiveArrayInitializer",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Performance/Embedded",
                      "index": 123,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "ObjectNotify",
                "shortDescription": {
                  "text": "Call to 'notify()' instead of 'notifyAll()'"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "CallToNotifyInsteadOfNotifyAll",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Threading issues",
                      "index": 22,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "InstanceVariableUninitializedUse",
                "shortDescription": {
                  "text": "Instance field used before initialization"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "InstanceVariableUsedBeforeInitialized",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Initialization",
                      "index": 25,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "ExpressionMayBeFactorized",
                "shortDescription": {
                  "text": "Expression can be factorized"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "note",
                  "parameters": {
                    "suppressToolId": "ExpressionMayBeFactorized",
                    "ideaSeverity": "INFORMATION",
                    "qodanaSeverity": "Info"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Control flow issues",
                      "index": 23,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "ListRemoveInLoop",
                "shortDescription": {
                  "text": "'List.remove()' called in loop"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": true,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "ListRemoveInLoop",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Performance",
                      "index": 8,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "MissingOverrideAnnotation",
                "shortDescription": {
                  "text": "Missing '@Override' annotation"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "note",
                  "parameters": {
                    "suppressToolId": "override",
                    "ideaSeverity": "INFORMATION",
                    "qodanaSeverity": "Info"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Inheritance issues",
                      "index": 110,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "CharUsedInArithmeticContext",
                "shortDescription": {
                  "text": "'char' expression used in arithmetic context"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "CharUsedInArithmeticContext",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Numeric issues",
                      "index": 24,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "StringEqualsCharSequence",
                "shortDescription": {
                  "text": "'String.equals()' called with 'CharSequence' argument"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": true,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "StringEqualsCharSequence",
                    "cweIds": [
                      597
                    ],
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Probable bugs",
                      "index": 12,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "TestFailedLine",
                "shortDescription": {
                  "text": "Failed line in test"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": true,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "TestFailedLine",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "JVM languages/Test frameworks",
                      "index": 86,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "PublicStaticCollectionField",
                "shortDescription": {
                  "text": "'public static' collection field"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "PublicStaticCollectionField",
                    "cweIds": [
                      732
                    ],
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Security",
                      "index": 27,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "ExtendsConcreteCollection",
                "shortDescription": {
                  "text": "Class explicitly extends a 'Collection' class"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "ClassExtendsConcreteCollection",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Inheritance issues",
                      "index": 110,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "ObjectInstantiationInEqualsHashCode",
                "shortDescription": {
                  "text": "Object instantiation inside 'equals()' or 'hashCode()'"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "ObjectInstantiationInEqualsHashCode",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Performance",
                      "index": 8,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "UnconditionalWait",
                "shortDescription": {
                  "text": "Unconditional 'wait()' call"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "UnconditionalWait",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Threading issues",
                      "index": 22,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "MethodOverridesInaccessibleMethodOfSuper",
                "shortDescription": {
                  "text": "Method overrides inaccessible method of superclass"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "MethodOverridesInaccessibleMethodOfSuper",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Visibility",
                      "index": 64,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "IntLiteralMayBeLongLiteral",
                "shortDescription": {
                  "text": "Cast to 'long' can be 'long' literal"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "IntLiteralMayBeLongLiteral",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Numeric issues/Cast",
                      "index": 101,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "SingleCharacterStartsWith",
                "shortDescription": {
                  "text": "Single character 'startsWith()' or 'endsWith()'"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "SingleCharacterStartsWith",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Performance/Embedded",
                      "index": 123,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "UtilityClassCanBeEnum",
                "shortDescription": {
                  "text": "Utility class can be 'enum'"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "UtilityClassCanBeEnum",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Class structure",
                      "index": 15,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "ExtendsObject",
                "shortDescription": {
                  "text": "Class explicitly extends 'Object'"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "ClassExplicitlyExtendsObject",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Code style issues",
                      "index": 9,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "ReassignedVariable",
                "shortDescription": {
                  "text": "Reassigned variable"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "note",
                  "parameters": {
                    "suppressToolId": "ReassignedVariable",
                    "ideaSeverity": "TEXT ATTRIBUTES",
                    "qodanaSeverity": "Info"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Code style issues",
                      "index": 9,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "MethodNameSameAsClassName",
                "shortDescription": {
                  "text": "Method name same as class name"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "MethodNameSameAsClassName",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Naming conventions/Method",
                      "index": 70,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "LocalVariableNamingConvention",
                "shortDescription": {
                  "text": "Local variable naming convention"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "LocalVariableNamingConvention",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Naming conventions",
                      "index": 51,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "UnnecessaryJavaDocLink",
                "shortDescription": {
                  "text": "Unnecessary Javadoc link"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "UnnecessaryJavaDocLink",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Javadoc",
                      "index": 49,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "EmptyTryBlock",
                "shortDescription": {
                  "text": "Empty 'try' block"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": true,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "EmptyTryBlock",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Error handling",
                      "index": 10,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "NestedSwitchStatement",
                "shortDescription": {
                  "text": "Nested 'switch' statement"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "NestedSwitchStatement",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Control flow issues",
                      "index": 23,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "CollectionsFieldAccessReplaceableByMethodCall",
                "shortDescription": {
                  "text": "Reference to empty collection field can be replaced with method call"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "CollectionsFieldAccessReplaceableByMethodCall",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Java language level migration aids/Java 5",
                      "index": 82,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "AssertWithSideEffects",
                "shortDescription": {
                  "text": "'assert' statement with side effects"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": true,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "AssertWithSideEffects",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Probable bugs",
                      "index": 12,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "WaitOrAwaitWithoutTimeout",
                "shortDescription": {
                  "text": "'wait()' or 'await()' without timeout"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "WaitOrAwaitWithoutTimeout",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Threading issues",
                      "index": 22,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "FinalClass",
                "shortDescription": {
                  "text": "Class is closed to inheritance"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "FinalClass",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Class structure",
                      "index": 15,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "LiteralAsArgToStringEquals",
                "shortDescription": {
                  "text": "String literal may be 'equals()' qualifier"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "LiteralAsArgToStringEquals",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Code style issues",
                      "index": 9,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "UnnecessaryEmptyArrayUsage",
                "shortDescription": {
                  "text": "Unnecessary zero length array usage"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": true,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "ConstantForZeroLengthArrayAllocation",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Memory",
                      "index": 119,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "DuplicateExpressions",
                "shortDescription": {
                  "text": "Multiple occurrences of the same expression"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "note",
                  "parameters": {
                    "suppressToolId": "DuplicateExpressions",
                    "ideaSeverity": "WEAK WARNING",
                    "qodanaSeverity": "Moderate"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Verbose or redundant code constructs",
                      "index": 31,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "BooleanConstructor",
                "shortDescription": {
                  "text": "Boolean constructor call"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": true,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "BooleanConstructorCall",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Performance",
                      "index": 8,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "TooBroadScope",
                "shortDescription": {
                  "text": "Scope of variable is too broad"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "note",
                  "parameters": {
                    "suppressToolId": "TooBroadScope",
                    "ideaSeverity": "INFORMATION",
                    "qodanaSeverity": "Info"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Data flow",
                      "index": 43,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "ThrowableSupplierOnlyThrowException",
                "shortDescription": {
                  "text": "Throwable supplier never returns a value"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": true,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "ThrowableSupplierOnlyThrowException",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Error handling",
                      "index": 10,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "IfStatementMissingBreakInLoop",
                "shortDescription": {
                  "text": "Early loop exit in 'if' condition"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": true,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "IfStatementMissingBreakInLoop",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Performance",
                      "index": 8,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "RedundantStreamOptionalCall",
                "shortDescription": {
                  "text": "Redundant step in 'Stream' or 'Optional' call chain"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "RedundantStreamOptionalCall",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Verbose or redundant code constructs",
                      "index": 31,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "ThreadPriority",
                "shortDescription": {
                  "text": "Call to 'Thread.setPriority()'"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "CallToThreadSetPriority",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Threading issues",
                      "index": 22,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "RedundantStringFormatCall",
                "shortDescription": {
                  "text": "Redundant call to 'String.format()'"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": true,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "RedundantStringFormatCall",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Performance",
                      "index": 8,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "NonFinalFieldOfException",
                "shortDescription": {
                  "text": "Non-final field of 'Exception' class"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "NonFinalFieldOfException",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Error handling",
                      "index": 10,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "PointlessNullCheck",
                "shortDescription": {
                  "text": "Unnecessary 'null' check before method call"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": true,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "PointlessNullCheck",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Control flow issues",
                      "index": 23,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "MethodOverridesStaticMethod",
                "shortDescription": {
                  "text": "Method tries to override 'static' method of superclass"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "MethodOverridesStaticMethodOfSuperclass",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Visibility",
                      "index": 64,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "RedundantCompareToJavaTime",
                "shortDescription": {
                  "text": "Expression with 'java.time' 'compareTo()' call can be simplified"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "RedundantCompareToJavaTime",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Verbose or redundant code constructs",
                      "index": 31,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "UnclearBinaryExpression",
                "shortDescription": {
                  "text": "Multiple operators with different precedence"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "note",
                  "parameters": {
                    "suppressToolId": "UnclearExpression",
                    "ideaSeverity": "INFORMATION",
                    "qodanaSeverity": "Info"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Code style issues",
                      "index": 9,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "ChainedMethodCall",
                "shortDescription": {
                  "text": "Chained method calls"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "ChainedMethodCall",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Code style issues",
                      "index": 9,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "UtilityClassWithoutPrivateConstructor",
                "shortDescription": {
                  "text": "Utility class without 'private' constructor"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "UtilityClassWithoutPrivateConstructor",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Class structure",
                      "index": 15,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "ExtendsUtilityClass",
                "shortDescription": {
                  "text": "Class extends utility class"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "ExtendsUtilityClass",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Inheritance issues",
                      "index": 110,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "AssertMessageNotString",
                "shortDescription": {
                  "text": "'assert' message is not a string"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "AssertMessageNotString",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Code style issues",
                      "index": 9,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "PatternVariableCanBeUsed",
                "shortDescription": {
                  "text": "Pattern variable can be used"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "PatternVariableCanBeUsed",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Java language level migration aids/Java 16",
                      "index": 136,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "ImplicitToExplicitClassBackwardMigration",
                "shortDescription": {
                  "text": "Implicitly declared class can be replaced with ordinary class"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "note",
                  "parameters": {
                    "suppressToolId": "ImplicitToExplicitClassBackwardMigration",
                    "ideaSeverity": "INFORMATION",
                    "qodanaSeverity": "Info"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Java language level migration aids/Java 21",
                      "index": 138,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "AnonymousClassVariableHidesContainingMethodVariable",
                "shortDescription": {
                  "text": "Anonymous class variable hides variable in containing method"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "AnonymousClassVariableHidesContainingMethodVariable",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Visibility",
                      "index": 64,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "MethodRefCanBeReplacedWithLambda",
                "shortDescription": {
                  "text": "Method reference can be replaced with lambda"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "note",
                  "parameters": {
                    "suppressToolId": "MethodRefCanBeReplacedWithLambda",
                    "ideaSeverity": "INFORMATION",
                    "qodanaSeverity": "Info"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Code style issues",
                      "index": 9,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "NestedSynchronizedStatement",
                "shortDescription": {
                  "text": "Nested 'synchronized' statement"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "NestedSynchronizedStatement",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Threading issues",
                      "index": 22,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "IncorrectDateTimeFormat",
                "shortDescription": {
                  "text": "Incorrect 'DateTimeFormat' pattern"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": true,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "IncorrectDateTimeFormat",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Probable bugs",
                      "index": 12,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "UnnecessaryFullyQualifiedName",
                "shortDescription": {
                  "text": "Unnecessary fully qualified name"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "note",
                  "parameters": {
                    "suppressToolId": "UnnecessaryFullyQualifiedName",
                    "ideaSeverity": "INFORMATION",
                    "qodanaSeverity": "Info"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Code style issues",
                      "index": 9,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "NegatedConditional",
                "shortDescription": {
                  "text": "Conditional expression with negated condition"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "ConditionalExpressionWithNegatedCondition",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Control flow issues",
                      "index": 23,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "BooleanParameter",
                "shortDescription": {
                  "text": "'public' method with 'boolean' parameter"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "BooleanParameter",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Abstraction issues",
                      "index": 53,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "TestInProductSource",
                "shortDescription": {
                  "text": "Test in product source"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "TestInProductSource",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "JVM languages/Test frameworks",
                      "index": 86,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "CopyConstructorMissesField",
                "shortDescription": {
                  "text": "Copy constructor misses field"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": true,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "CopyConstructorMissesField",
                    "cweIds": [
                      665
                    ],
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Probable bugs",
                      "index": 12,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "CastCanBeRemovedNarrowingVariableType",
                "shortDescription": {
                  "text": "Too weak variable type leads to unnecessary cast"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "CastCanBeRemovedNarrowingVariableType",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Verbose or redundant code constructs",
                      "index": 31,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "AssignmentToStaticFieldFromInstanceMethod",
                "shortDescription": {
                  "text": "Assignment to static field from instance context"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "AssignmentToStaticFieldFromInstanceMethod",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Assignment issues",
                      "index": 54,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "AbstractClassWithOnlyOneDirectInheritor",
                "shortDescription": {
                  "text": "Abstract class with a single direct inheritor"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "AbstractClassWithOnlyOneDirectInheritor",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Performance/Embedded",
                      "index": 123,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "UnsecureRandomNumberGeneration",
                "shortDescription": {
                  "text": "Insecure random number generation"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "UnsecureRandomNumberGeneration",
                    "cweIds": [
                      330
                    ],
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Security",
                      "index": 27,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "NullableProblems",
                "shortDescription": {
                  "text": "@NotNull/@Nullable problems"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "NullableProblems",
                    "cweIds": [
                      476,
                      754
                    ],
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Probable bugs/Nullability problems",
                      "index": 124,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "EqualsBetweenInconvertibleTypes",
                "shortDescription": {
                  "text": "'equals()' between objects of inconvertible types"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": true,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "EqualsBetweenInconvertibleTypes",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Probable bugs",
                      "index": 12,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "StringTemplateReverseMigration",
                "shortDescription": {
                  "text": "String template can be concatenated string"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "note",
                  "parameters": {
                    "suppressToolId": "StringTemplateReverseMigration",
                    "ideaSeverity": "INFORMATION",
                    "qodanaSeverity": "Info"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Java language level migration aids/Java 21",
                      "index": 138,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "SynchronizationOnGetClass",
                "shortDescription": {
                  "text": "Synchronization on 'getClass()'"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": true,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "SynchronizationOnGetClass",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Threading issues",
                      "index": 22,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "DuplicateCondition",
                "shortDescription": {
                  "text": "Duplicate condition"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": true,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "DuplicateCondition",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Control flow issues",
                      "index": 23,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "ThrownExceptionsPerMethod",
                "shortDescription": {
                  "text": "Method with too many exceptions declared"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "MethodWithTooExceptionsDeclared",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Method metrics",
                      "index": 98,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "RedundantThrows",
                "shortDescription": {
                  "text": "Redundant 'throws' clause"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "RedundantThrows",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Declaration redundancy",
                      "index": 11,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "UseOfAnotherObjectsPrivateField",
                "shortDescription": {
                  "text": "Accessing a non-public field of another object"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "AccessingNonPublicFieldOfAnotherObject",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Encapsulation",
                      "index": 93,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "PointlessBitwiseExpression",
                "shortDescription": {
                  "text": "Pointless bitwise expression"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": true,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "PointlessBitwiseExpression",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Bitwise operation issues",
                      "index": 140,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "DuplicateThrows",
                "shortDescription": {
                  "text": "Duplicate throws"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "DuplicateThrows",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Declaration redundancy",
                      "index": 11,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "UnstableTypeUsedInSignature",
                "shortDescription": {
                  "text": "Unstable type is used in signature"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "UnstableTypeUsedInSignature",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "JVM languages",
                      "index": 1,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "PrivateMemberAccessBetweenOuterAndInnerClass",
                "shortDescription": {
                  "text": "Synthetic accessor call"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "SyntheticAccessorCall",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Performance/Embedded",
                      "index": 123,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "ClassIndependentOfModule",
                "shortDescription": {
                  "text": "Class independent of its module"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "ClassIndependentOfModule",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Modularization issues",
                      "index": 48,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "SystemRunFinalizersOnExit",
                "shortDescription": {
                  "text": "Call to 'System.runFinalizersOnExit()'"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": true,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "CallToSystemRunFinalizersOnExit",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Threading issues",
                      "index": 22,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "ReplaceInefficientStreamCount",
                "shortDescription": {
                  "text": "Inefficient Stream API call chains ending with count()"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": true,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "ReplaceInefficientStreamCount",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Performance",
                      "index": 8,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "ParameterTypePreventsOverriding",
                "shortDescription": {
                  "text": "Parameter type prevents overriding"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "ParameterTypePreventsOverriding",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Inheritance issues",
                      "index": 110,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "ExtractMethodRecommender",
                "shortDescription": {
                  "text": "Method can be extracted"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "ExtractMethodRecommender",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Code maturity",
                      "index": 38,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "StringOperationCanBeSimplified",
                "shortDescription": {
                  "text": "Redundant 'String' operation"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "StringOperationCanBeSimplified",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Verbose or redundant code constructs",
                      "index": 31,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "ClassReferencesSubclass",
                "shortDescription": {
                  "text": "Class references one of its subclasses"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "ClassReferencesSubclass",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Abstraction issues",
                      "index": 53,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "DateToString",
                "shortDescription": {
                  "text": "Call to 'Date.toString()'"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "CallToDateToString",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Internationalization",
                      "index": 7,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "IterableUsedAsVararg",
                "shortDescription": {
                  "text": "Iterable is used as vararg"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": true,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "IterableUsedAsVararg",
                    "cweIds": [
                      628
                    ],
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Probable bugs",
                      "index": 12,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "MethodNameSameAsParentName",
                "shortDescription": {
                  "text": "Method name same as parent class name"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "MethodNameSameAsParentName",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Naming conventions/Method",
                      "index": 70,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "LambdaParameterNamingConvention",
                "shortDescription": {
                  "text": "Lambda parameter naming convention"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "LambdaParameterNamingConvention",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Naming conventions",
                      "index": 51,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "LawOfDemeter",
                "shortDescription": {
                  "text": "Law of Demeter"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "LawOfDemeter",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Data flow",
                      "index": 43,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "AmbiguousFieldAccess",
                "shortDescription": {
                  "text": "Access to inherited field looks like access to element from surrounding code"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "AmbiguousFieldAccess",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Visibility",
                      "index": 64,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "NonProtectedConstructorInAbstractClass",
                "shortDescription": {
                  "text": "Public constructor in abstract class"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "ConstructorNotProtectedInAbstractClass",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Inheritance issues",
                      "index": 110,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "ComparableImplementedButEqualsNotOverridden",
                "shortDescription": {
                  "text": "'Comparable' implemented but 'equals()' not overridden"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "ComparableImplementedButEqualsNotOverridden",
                    "cweIds": [
                      697
                    ],
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Probable bugs",
                      "index": 12,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "MapReplaceableByEnumMap",
                "shortDescription": {
                  "text": "'Map' can be replaced with 'EnumMap'"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "MapReplaceableByEnumMap",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Performance",
                      "index": 8,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "ReturnNull",
                "shortDescription": {
                  "text": "Return of 'null'"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "ReturnOfNull",
                    "cweIds": [
                      252,
                      476
                    ],
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Probable bugs/Nullability problems",
                      "index": 124,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "LoggingStringTemplateAsArgument",
                "shortDescription": {
                  "text": "String template as argument to logging call"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": true,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "LoggingStringTemplateAsArgument",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "JVM languages/Logging",
                      "index": 34,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "UnpredictableBigDecimalConstructorCall",
                "shortDescription": {
                  "text": "Unpredictable 'BigDecimal' constructor call"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": true,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "UnpredictableBigDecimalConstructorCall",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Numeric issues",
                      "index": 24,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "IntegerDivisionInFloatingPointContext",
                "shortDescription": {
                  "text": "Integer division in floating-point context"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": true,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "IntegerDivisionInFloatingPointContext",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Numeric issues",
                      "index": 24,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "AssertWithoutMessage",
                "shortDescription": {
                  "text": "Message missing on assertion"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "AssertWithoutMessage",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Test frameworks",
                      "index": 94,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "ConditionalBreakInInfiniteLoop",
                "shortDescription": {
                  "text": "Conditional break inside loop"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "ConditionalBreakInInfiniteLoop",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Control flow issues",
                      "index": 23,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "UnqualifiedInnerClassAccess",
                "shortDescription": {
                  "text": "Unqualified inner class access"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "UnqualifiedInnerClassAccess",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Code style issues",
                      "index": 9,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "RedundantClassCall",
                "shortDescription": {
                  "text": "Redundant 'isInstance()' or 'cast()' call"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "RedundantClassCall",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Verbose or redundant code constructs",
                      "index": 31,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "UnnecessaryStringEscape",
                "shortDescription": {
                  "text": "Unnecessarily escaped character"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "UnnecessaryStringEscape",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Verbose or redundant code constructs",
                      "index": 31,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "FieldCanBeLocal",
                "shortDescription": {
                  "text": "Field can be local"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "FieldCanBeLocal",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Class structure",
                      "index": 15,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "UrlHashCode",
                "shortDescription": {
                  "text": "Call to 'equals()' or 'hashCode()' on 'URL' object"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": true,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "UrlHashCode",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "JVM languages",
                      "index": 1,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "IfStatementWithIdenticalBranches",
                "shortDescription": {
                  "text": "'if' statement with identical branches or common parts"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": true,
                  "level": "note",
                  "parameters": {
                    "suppressToolId": "IfStatementWithIdenticalBranches",
                    "ideaSeverity": "WEAK WARNING",
                    "qodanaSeverity": "Moderate"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Control flow issues",
                      "index": 23,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "InterfaceWithOnlyOneDirectInheritor",
                "shortDescription": {
                  "text": "Interface with a single direct inheritor"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "InterfaceWithOnlyOneDirectInheritor",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Performance/Embedded",
                      "index": 123,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "InstanceofChain",
                "shortDescription": {
                  "text": "Chain of 'instanceof' checks"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "ChainOfInstanceofChecks",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Abstraction issues",
                      "index": 53,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "BlockMarkerComments",
                "shortDescription": {
                  "text": "Block marker comment"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "BlockMarkerComments",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Code style issues",
                      "index": 9,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "SerializableHasSerializationMethods",
                "shortDescription": {
                  "text": "Serializable class without 'readObject()' and 'writeObject()'"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "SerializableHasSerializationMethods",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Serialization issues",
                      "index": 16,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "IdempotentLoopBody",
                "shortDescription": {
                  "text": "Idempotent loop body"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": true,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "IdempotentLoopBody",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Control flow issues",
                      "index": 23,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "RedundantImplements",
                "shortDescription": {
                  "text": "Redundant interface declaration"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "RedundantInterfaceDeclaration",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Inheritance issues",
                      "index": 110,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "FrequentlyUsedInheritorInspection",
                "shortDescription": {
                  "text": "Class may extend a commonly used base class"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "note",
                  "parameters": {
                    "suppressToolId": "FrequentlyUsedInheritorInspection",
                    "ideaSeverity": "INFORMATION",
                    "qodanaSeverity": "Info"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Inheritance issues",
                      "index": 110,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "FieldNamingConvention",
                "shortDescription": {
                  "text": "Field naming convention"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "FieldNamingConvention",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Naming conventions",
                      "index": 51,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "ConstantConditionalExpression",
                "shortDescription": {
                  "text": "Constant conditional expression"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": true,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "ConstantConditionalExpression",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Control flow issues",
                      "index": 23,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "ClassNamePrefixedWithPackageName",
                "shortDescription": {
                  "text": "Class name prefixed with package name"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "ClassNamePrefixedWithPackageName",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Naming conventions/Class",
                      "index": 52,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "SameParameterValue",
                "shortDescription": {
                  "text": "Method parameter always has the same value"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "SameParameterValue",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Declaration redundancy",
                      "index": 11,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "CatchMayIgnoreException",
                "shortDescription": {
                  "text": "Catch block may ignore exception"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": true,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "CatchMayIgnoreException",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Error handling",
                      "index": 10,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "ClassWithTooManyDependents",
                "shortDescription": {
                  "text": "Class with too many dependents"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "ClassWithTooManyDependents",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Dependency issues",
                      "index": 105,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "WrongPackageStatement",
                "shortDescription": {
                  "text": "Wrong package statement"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": true,
                  "level": "error",
                  "parameters": {
                    "suppressToolId": "WrongPackageStatement",
                    "ideaSeverity": "ERROR",
                    "qodanaSeverity": "Critical"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Probable bugs",
                      "index": 12,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "FieldNotUsedInToString",
                "shortDescription": {
                  "text": "Field not used in 'toString()' method"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "FieldNotUsedInToString",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/toString() issues",
                      "index": 144,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "CovariantEquals",
                "shortDescription": {
                  "text": "Covariant 'equals()'"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "CovariantEquals",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Probable bugs",
                      "index": 12,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "Convert2Lambda",
                "shortDescription": {
                  "text": "Anonymous type can be replaced with lambda"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "Convert2Lambda",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Java language level migration aids/Java 8",
                      "index": 85,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "SimplifiableIfStatement",
                "shortDescription": {
                  "text": "'if' statement can be replaced with conditional or boolean expression"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "note",
                  "parameters": {
                    "suppressToolId": "SimplifiableIfStatement",
                    "ideaSeverity": "INFORMATION",
                    "qodanaSeverity": "Info"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Code style issues",
                      "index": 9,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "ThrowCaughtLocally",
                "shortDescription": {
                  "text": "'throw' caught by containing 'try' statement"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "ThrowCaughtLocally",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Error handling",
                      "index": 10,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "SynchronizeOnValueBasedClass",
                "shortDescription": {
                  "text": "Value-based warnings"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": true,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "synchronization",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Compiler issues",
                      "index": 116,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "NonSerializableWithSerialVersionUIDField",
                "shortDescription": {
                  "text": "Non-serializable class with 'serialVersionUID'"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": true,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "NonSerializableClassWithSerialVersionUID",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Serialization issues",
                      "index": 16,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "SwitchStatementsWithoutDefault",
                "shortDescription": {
                  "text": "'switch' statement without 'default' branch"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "note",
                  "parameters": {
                    "suppressToolId": "SwitchStatementWithoutDefaultBranch",
                    "ideaSeverity": "INFORMATION",
                    "qodanaSeverity": "Info"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Control flow issues",
                      "index": 23,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "IncompatibleMask",
                "shortDescription": {
                  "text": "Incompatible bitwise mask operation"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": true,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "IncompatibleBitwiseMaskOperation",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Bitwise operation issues",
                      "index": 140,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "ExplicitArgumentCanBeLambda",
                "shortDescription": {
                  "text": "Explicit argument can be lambda"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "note",
                  "parameters": {
                    "suppressToolId": "ExplicitArgumentCanBeLambda",
                    "ideaSeverity": "INFORMATION",
                    "qodanaSeverity": "Info"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Performance",
                      "index": 8,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "EqualsCalledOnEnumConstant",
                "shortDescription": {
                  "text": "'equals()' called on enum value"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "EqualsCalledOnEnumConstant",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Code style issues",
                      "index": 9,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "UnnecessaryConstantArrayCreationExpression",
                "shortDescription": {
                  "text": "Redundant 'new' expression in constant array creation"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "UnnecessaryConstantArrayCreationExpression",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Code style issues",
                      "index": 9,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "HardcodedLineSeparators",
                "shortDescription": {
                  "text": "Hardcoded line separator"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "HardcodedLineSeparator",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Portability",
                      "index": 60,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "LabeledStatement",
                "shortDescription": {
                  "text": "Labeled statement"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "LabeledStatement",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Control flow issues",
                      "index": 23,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "SuspiciousNameCombination",
                "shortDescription": {
                  "text": "Suspicious variable/parameter name combination"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": true,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "SuspiciousNameCombination",
                    "cweIds": [
                      628
                    ],
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Probable bugs",
                      "index": 12,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "ImplicitDefaultCharsetUsage",
                "shortDescription": {
                  "text": "Implicit platform default charset"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "ImplicitDefaultCharsetUsage",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Internationalization",
                      "index": 7,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "DesignForExtension",
                "shortDescription": {
                  "text": "Design for extension"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "DesignForExtension",
                    "cweIds": [
                      668
                    ],
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Security",
                      "index": 27,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "SimplifyStreamApiCallChains",
                "shortDescription": {
                  "text": "Stream API call chain can be simplified"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "SimplifyStreamApiCallChains",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Verbose or redundant code constructs",
                      "index": 31,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "UnknownGuard",
                "shortDescription": {
                  "text": "Unknown '@GuardedBy' field"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "UnknownGuard",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Concurrency annotation issues",
                      "index": 66,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "AbstractClassExtendsConcreteClass",
                "shortDescription": {
                  "text": "Abstract class extends concrete class"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "AbstractClassExtendsConcreteClass",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Inheritance issues",
                      "index": 110,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "Java8CollectionRemoveIf",
                "shortDescription": {
                  "text": "Loop can be replaced with 'Collection.removeIf()'"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "Java8CollectionRemoveIf",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Java language level migration aids/Java 8",
                      "index": 85,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "LogStatementNotGuardedByLogCondition",
                "shortDescription": {
                  "text": "Logging call not guarded by log condition"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "note",
                  "parameters": {
                    "suppressToolId": "LogStatementNotGuardedByLogCondition",
                    "ideaSeverity": "INFORMATION",
                    "qodanaSeverity": "Info"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "JVM languages/Logging",
                      "index": 34,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "SafeVarargsDetector",
                "shortDescription": {
                  "text": "Possible heap pollution from parameterized vararg type"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "unchecked",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Java language level migration aids/Java 7",
                      "index": 115,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "ComparatorMethodParameterNotUsed",
                "shortDescription": {
                  "text": "Suspicious 'Comparator.compare()' implementation"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": true,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "ComparatorMethodParameterNotUsed",
                    "cweIds": [
                      628
                    ],
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Probable bugs",
                      "index": 12,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "Annotation",
                "shortDescription": {
                  "text": "Annotation"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "Annotation",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Java language level issues",
                      "index": 106,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "UnnecessaryUnicodeEscape",
                "shortDescription": {
                  "text": "Unnecessary unicode escape sequence"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "UnnecessaryUnicodeEscape",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Internationalization",
                      "index": 7,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "StringTokenizer",
                "shortDescription": {
                  "text": "Use of 'StringTokenizer'"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "UseOfStringTokenizer",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Internationalization",
                      "index": 7,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "PrimitiveArrayArgumentToVariableArgMethod",
                "shortDescription": {
                  "text": "Confusing primitive array argument to varargs method"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": true,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "PrimitiveArrayArgumentToVarargsMethod",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Probable bugs",
                      "index": 12,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "UseBulkOperation",
                "shortDescription": {
                  "text": "Bulk operation can be used instead of iteration"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": true,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "UseBulkOperation",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Performance",
                      "index": 8,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "BigDecimalEquals",
                "shortDescription": {
                  "text": "'equals()' called on 'BigDecimal'"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "BigDecimalEquals",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Numeric issues",
                      "index": 24,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "AccessToNonThreadSafeStaticFieldFromInstance",
                "shortDescription": {
                  "text": "Non-thread-safe 'static' field access"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "AccessToNonThreadSafeStaticField",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Threading issues",
                      "index": 22,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "AssignmentToCatchBlockParameter",
                "shortDescription": {
                  "text": "Assignment to 'catch' block parameter"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "AssignmentToCatchBlockParameter",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Assignment issues",
                      "index": 54,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "AbstractMethodOverridesAbstractMethod",
                "shortDescription": {
                  "text": "Abstract method overrides abstract method"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "AbstractMethodOverridesAbstractMethod",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Inheritance issues",
                      "index": 110,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "LoopStatementsThatDontLoop",
                "shortDescription": {
                  "text": "Loop statement that does not loop"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": true,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "LoopStatementThatDoesntLoop",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Control flow issues",
                      "index": 23,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "ArrayCreationWithoutNewKeyword",
                "shortDescription": {
                  "text": "Array creation without 'new' expression"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "note",
                  "parameters": {
                    "suppressToolId": "ArrayCreationWithoutNewKeyword",
                    "ideaSeverity": "INFORMATION",
                    "qodanaSeverity": "Info"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Code style issues",
                      "index": 9,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "ConfusingOctalEscape",
                "shortDescription": {
                  "text": "Confusing octal escape sequence"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "ConfusingOctalEscapeSequence",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Code style issues",
                      "index": 9,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "LambdaParameterHidingMemberVariable",
                "shortDescription": {
                  "text": "Lambda parameter hides field"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "LambdaParameterHidesMemberVariable",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Visibility",
                      "index": 64,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "ConstantMathCall",
                "shortDescription": {
                  "text": "Constant call to 'Math'"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "ConstantMathCall",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Numeric issues",
                      "index": 24,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "MissortedModifiers",
                "shortDescription": {
                  "text": "Missorted modifiers"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "note",
                  "parameters": {
                    "suppressToolId": "MissortedModifiers",
                    "ideaSeverity": "INFORMATION",
                    "qodanaSeverity": "Info"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Code style issues",
                      "index": 9,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "TransientFieldInNonSerializableClass",
                "shortDescription": {
                  "text": "Transient field in non-serializable class"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "TransientFieldInNonSerializableClass",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Serialization issues",
                      "index": 16,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "SlowListContainsAll",
                "shortDescription": {
                  "text": "Call to 'list.containsAll(collection)' may have poor performance"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": true,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "SlowListContainsAll",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Performance",
                      "index": 8,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "ExceptionPackage",
                "shortDescription": {
                  "text": "Exception package"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "ExceptionPackage",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Packaging issues",
                      "index": 30,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "TypeParameterExtendsObject",
                "shortDescription": {
                  "text": "Type parameter explicitly extends 'Object'"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "TypeParameterExplicitlyExtendsObject",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Code style issues",
                      "index": 9,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "StringConcatenationInsideStringBufferAppend",
                "shortDescription": {
                  "text": "String concatenation as argument to 'StringBuilder.append()' call"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": true,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "StringConcatenationInsideStringBufferAppend",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Performance",
                      "index": 8,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "FeatureEnvy",
                "shortDescription": {
                  "text": "Feature envy"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "FeatureEnvy",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Abstraction issues",
                      "index": 53,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "BoxingBoxedValue",
                "shortDescription": {
                  "text": "Boxing of already boxed value"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": true,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "BoxingBoxedValue",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Performance",
                      "index": 8,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "RedundantCollectionOperation",
                "shortDescription": {
                  "text": "Redundant 'Collection' operation"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "RedundantCollectionOperation",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Verbose or redundant code constructs",
                      "index": 31,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "OverriddenMethodCallDuringObjectConstruction",
                "shortDescription": {
                  "text": "Overridden method called during object construction"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "OverriddenMethodCallDuringObjectConstruction",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Initialization",
                      "index": 25,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "AbstractClassWithoutAbstractMethods",
                "shortDescription": {
                  "text": "Abstract class without 'abstract' methods"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "AbstractClassWithoutAbstractMethods",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Inheritance issues",
                      "index": 110,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "CastThatLosesPrecision",
                "shortDescription": {
                  "text": "Numeric cast that loses precision"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "NumericCastThatLosesPrecision",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Numeric issues/Cast",
                      "index": 101,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "SameReturnValue",
                "shortDescription": {
                  "text": "Method always returns the same value"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "SameReturnValue",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Declaration redundancy",
                      "index": 11,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "StringBufferMustHaveInitialCapacity",
                "shortDescription": {
                  "text": "'StringBuilder' without initial capacity"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "StringBufferWithoutInitialCapacity",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Performance",
                      "index": 8,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "ThrowablePrintStackTrace",
                "shortDescription": {
                  "text": "Call to 'printStackTrace()'"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "CallToPrintStackTrace",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Code maturity",
                      "index": 38,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "ThreeNegationsPerMethod",
                "shortDescription": {
                  "text": "Method with more than three negations"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "MethodWithMoreThanThreeNegations",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Method metrics",
                      "index": 98,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "ThreadWithDefaultRunMethod",
                "shortDescription": {
                  "text": "Instantiating a 'Thread' with default 'run()' method"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": true,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "InstantiatingAThreadWithDefaultRunMethod",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Threading issues",
                      "index": 22,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "TestOnlyProblems",
                "shortDescription": {
                  "text": "Test-only usage in production code"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "TestOnlyProblems",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "JVM languages/Test frameworks",
                      "index": 86,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "Java8MapApi",
                "shortDescription": {
                  "text": "Simplifiable 'Map' operations"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "Java8MapApi",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Java language level migration aids/Java 8",
                      "index": 85,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "MeaninglessRecordAnnotationInspection",
                "shortDescription": {
                  "text": "Meaningless record annotation"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": true,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "MeaninglessRecordAnnotationInspection",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Probable bugs",
                      "index": 12,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "FillPermitsList",
                "shortDescription": {
                  "text": "Same file subclasses are missing from permits clause of a sealed class"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "note",
                  "parameters": {
                    "suppressToolId": "FillPermitsList",
                    "ideaSeverity": "INFORMATION",
                    "qodanaSeverity": "Info"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Code style issues",
                      "index": 9,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "SuspiciousDateFormat",
                "shortDescription": {
                  "text": "Suspicious date format pattern"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": true,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "SuspiciousDateFormat",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Probable bugs",
                      "index": 12,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "MagicConstant",
                "shortDescription": {
                  "text": "Magic constant"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": true,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "MagicConstant",
                    "cweIds": [
                      489
                    ],
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Probable bugs",
                      "index": 12,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "NumericToString",
                "shortDescription": {
                  "text": "Call to 'Number.toString()'"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "CallToNumericToString",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Internationalization",
                      "index": 7,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "UnnecessaryDefault",
                "shortDescription": {
                  "text": "Unnecessary 'default' for enum 'switch' statement"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "UnnecessaryDefault",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Verbose or redundant code constructs",
                      "index": 31,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "VolatileArrayField",
                "shortDescription": {
                  "text": "Volatile array field"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "VolatileArrayField",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Threading issues",
                      "index": 22,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "UnnecessaryInheritDoc",
                "shortDescription": {
                  "text": "Unnecessary '{@inheritDoc}' Javadoc comment"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "UnnecessaryInheritDoc",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Javadoc",
                      "index": 49,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "NonReproducibleMathCall",
                "shortDescription": {
                  "text": "Non-reproducible call to 'Math'"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "NonReproducibleMathCall",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Numeric issues",
                      "index": 24,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "ParametersPerConstructor",
                "shortDescription": {
                  "text": "Constructor with too many parameters"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "ConstructorWithTooManyParameters",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Method metrics",
                      "index": 98,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "MappingBeforeCount",
                "shortDescription": {
                  "text": "Mapping call before count()"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "MappingBeforeCount",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Verbose or redundant code constructs",
                      "index": 31,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "NonExtendableApiUsage",
                "shortDescription": {
                  "text": "Class, interface, or method should not be extended"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": true,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "NonExtendableApiUsage",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "JVM languages",
                      "index": 1,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "UnqualifiedFieldAccess",
                "shortDescription": {
                  "text": "Instance field access not qualified with 'this'"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "UnqualifiedFieldAccess",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Code style issues",
                      "index": 9,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "MismatchedCollectionQueryUpdate",
                "shortDescription": {
                  "text": "Mismatched query and update of collection"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": true,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "MismatchedQueryAndUpdateOfCollection",
                    "cweIds": [
                      561,
                      563
                    ],
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Probable bugs",
                      "index": 12,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "CharacterComparison",
                "shortDescription": {
                  "text": "Character comparison"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "CharacterComparison",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Internationalization",
                      "index": 7,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "SynchronizeOnThis",
                "shortDescription": {
                  "text": "Synchronization on 'this'"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "SynchronizeOnThis",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Threading issues",
                      "index": 22,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "UnusedAssignment",
                "shortDescription": {
                  "text": "Unused assignment"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": true,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "UnusedAssignment",
                    "cweIds": [
                      561,
                      563
                    ],
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Probable bugs",
                      "index": 12,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "HashCodeUsesNonFinalVariable",
                "shortDescription": {
                  "text": "Non-final field referenced in 'hashCode()'"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "NonFinalFieldReferencedInHashCode",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Probable bugs",
                      "index": 12,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "ProtectedField",
                "shortDescription": {
                  "text": "Protected field"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "ProtectedField",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Encapsulation",
                      "index": 93,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "AssignmentUsedAsCondition",
                "shortDescription": {
                  "text": "Assignment used as condition"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "AssignmentUsedAsCondition",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Assignment issues",
                      "index": 54,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "InstanceofThis",
                "shortDescription": {
                  "text": "'instanceof' check for 'this'"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "InstanceofThis",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Abstraction issues",
                      "index": 53,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "PackageInMultipleModules",
                "shortDescription": {
                  "text": "Package with classes in multiple modules"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "PackageInMultipleModules",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Packaging issues",
                      "index": 30,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "FloatingPointEquality",
                "shortDescription": {
                  "text": "Floating-point equality comparison"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "FloatingPointEquality",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Numeric issues",
                      "index": 24,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "SequencedCollectionMethodCanBeUsed",
                "shortDescription": {
                  "text": "SequencedCollection method can be used"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "SequencedCollectionMethodCanBeUsed",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Java language level migration aids/Java 21",
                      "index": 138,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "PublicField",
                "shortDescription": {
                  "text": "'public' field"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "note",
                  "parameters": {
                    "suppressToolId": "PublicField",
                    "ideaSeverity": "INFORMATION",
                    "qodanaSeverity": "Info"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Encapsulation",
                      "index": 93,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "SerialAnnotationUsedOnWrongMember",
                "shortDescription": {
                  "text": "'@Serial' annotation used on wrong member"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": true,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "serial",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Serialization issues",
                      "index": 16,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "ThrowsRuntimeException",
                "shortDescription": {
                  "text": "Unchecked exception declared in 'throws' clause"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "ThrowsRuntimeException",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Error handling",
                      "index": 10,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "JNDIResource",
                "shortDescription": {
                  "text": "JNDI resource opened but not safely closed"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "JNDIResourceOpenedButNotSafelyClosed",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Resource management",
                      "index": 99,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "NewObjectEquality",
                "shortDescription": {
                  "text": "New object is compared using '=='"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": true,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "NewObjectEquality",
                    "cweIds": [
                      480
                    ],
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Probable bugs",
                      "index": 12,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "TryWithIdenticalCatches",
                "shortDescription": {
                  "text": "Identical 'catch' branches in 'try' statement"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "TryWithIdenticalCatches",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Java language level migration aids/Java 7",
                      "index": 115,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "RedundantCompareCall",
                "shortDescription": {
                  "text": "Redundant 'compare()' method call"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "RedundantCompareCall",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Verbose or redundant code constructs",
                      "index": 31,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "LambdaCanBeReplacedWithAnonymous",
                "shortDescription": {
                  "text": "Lambda can be replaced with anonymous class"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "note",
                  "parameters": {
                    "suppressToolId": "LambdaCanBeReplacedWithAnonymous",
                    "ideaSeverity": "INFORMATION",
                    "qodanaSeverity": "Info"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Code style issues",
                      "index": 9,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "TextBlockBackwardMigration",
                "shortDescription": {
                  "text": "Text block can be replaced with regular string literal"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "note",
                  "parameters": {
                    "suppressToolId": "TextBlockBackwardMigration",
                    "ideaSeverity": "INFORMATION",
                    "qodanaSeverity": "Info"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Java language level migration aids/Java 15",
                      "index": 97,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "EmptyClass",
                "shortDescription": {
                  "text": "Empty class"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "EmptyClass",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Class structure",
                      "index": 15,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "ConditionalCanBeOptional",
                "shortDescription": {
                  "text": "Conditional can be replaced with Optional"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "note",
                  "parameters": {
                    "suppressToolId": "ConditionalCanBeOptional",
                    "ideaSeverity": "INFORMATION",
                    "qodanaSeverity": "Info"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Code style issues",
                      "index": 9,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "AssignmentToLambdaParameter",
                "shortDescription": {
                  "text": "Assignment to lambda parameter"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "AssignmentToLambdaParameter",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Assignment issues",
                      "index": 54,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "SystemGetenv",
                "shortDescription": {
                  "text": "Call to 'System.getenv()'"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "CallToSystemGetenv",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Portability",
                      "index": 60,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "ConstantExpression",
                "shortDescription": {
                  "text": "Constant expression can be evaluated"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "note",
                  "parameters": {
                    "suppressToolId": "ConstantExpression",
                    "ideaSeverity": "INFORMATION",
                    "qodanaSeverity": "Info"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Code style issues",
                      "index": 9,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "PackageDotHtmlMayBePackageInfo",
                "shortDescription": {
                  "text": "'package.html' may be converted to 'package-info.java'"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "PackageDotHtmlMayBePackageInfo",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Javadoc",
                      "index": 49,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "LongLiteralsEndingWithLowercaseL",
                "shortDescription": {
                  "text": "'long' literal ending with 'l' instead of 'L'"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": true,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "LongLiteralEndingWithLowercaseL",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Numeric issues",
                      "index": 24,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "RedundantArrayCreation",
                "shortDescription": {
                  "text": "Redundant array creation"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "RedundantArrayCreation",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Verbose or redundant code constructs",
                      "index": 31,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "NonShortCircuitBoolean",
                "shortDescription": {
                  "text": "Non-short-circuit boolean expression"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "NonShortCircuitBooleanExpression",
                    "cweIds": [
                      480,
                      691
                    ],
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Probable bugs",
                      "index": 12,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "ThrowablePrintedToSystemOut",
                "shortDescription": {
                  "text": "'Throwable' printed to 'System.out'"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "ThrowablePrintedToSystemOut",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Code maturity",
                      "index": 38,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "RedundantRecordConstructor",
                "shortDescription": {
                  "text": "Redundant record constructor"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "RedundantRecordConstructor",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Declaration redundancy",
                      "index": 11,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "AmbiguousMethodCall",
                "shortDescription": {
                  "text": "Call to inherited method looks like call to local method"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "AmbiguousMethodCall",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Visibility",
                      "index": 64,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "StaticInheritance",
                "shortDescription": {
                  "text": "Static inheritance"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "StaticInheritance",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Inheritance issues",
                      "index": 110,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "RedundantUnmodifiable",
                "shortDescription": {
                  "text": "Redundant usage of unmodifiable collection wrappers"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "RedundantUnmodifiable",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Verbose or redundant code constructs",
                      "index": 31,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "ConstantValue",
                "shortDescription": {
                  "text": "Constant values"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": true,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "ConstantValue",
                    "cweIds": [
                      570,
                      571
                    ],
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Probable bugs",
                      "index": 12,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "CastCanBeReplacedWithVariable",
                "shortDescription": {
                  "text": "Cast can be replaced with variable"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "note",
                  "parameters": {
                    "suppressToolId": "CastCanBeReplacedWithVariable",
                    "ideaSeverity": "INFORMATION",
                    "qodanaSeverity": "Info"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Verbose or redundant code constructs",
                      "index": 31,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "Convert2Diamond",
                "shortDescription": {
                  "text": "Explicit type can be replaced with '<>'"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "Convert2Diamond",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Java language level migration aids/Java 7",
                      "index": 115,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "VarargParameter",
                "shortDescription": {
                  "text": "Varargs method"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "note",
                  "parameters": {
                    "suppressToolId": "VariableArgumentMethod",
                    "ideaSeverity": "INFORMATION",
                    "qodanaSeverity": "Info"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Java language level issues",
                      "index": 106,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "ArrayLengthInLoopCondition",
                "shortDescription": {
                  "text": "Array.length in loop condition"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "ArrayLengthInLoopCondition",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Performance/Embedded",
                      "index": 123,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "CheckForOutOfMemoryOnLargeArrayAllocation",
                "shortDescription": {
                  "text": "Large array allocation with no OutOfMemoryError check"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "CheckForOutOfMemoryOnLargeArrayAllocation",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Performance/Embedded",
                      "index": 123,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "ClassWithoutConstructor",
                "shortDescription": {
                  "text": "Class without constructor"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "ClassWithoutConstructor",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/JavaBeans issues",
                      "index": 102,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "PackageInfoWithoutPackage",
                "shortDescription": {
                  "text": "'package-info.java' without 'package' statement"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "PackageInfoWithoutPackage",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Javadoc",
                      "index": 49,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "NonSerializableWithSerializationMethods",
                "shortDescription": {
                  "text": "Non-serializable class with 'readObject()' or 'writeObject()'"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "NonSerializableClassWithSerializationMethods",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Serialization issues",
                      "index": 16,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "CloneReturnsClassType",
                "shortDescription": {
                  "text": "'clone()' should have return type equal to the class it contains"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "CloneReturnsClassType",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Cloning issues",
                      "index": 76,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "OptionalToIf",
                "shortDescription": {
                  "text": "'Optional' can be replaced with sequence of 'if' statements"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "note",
                  "parameters": {
                    "suppressToolId": "OptionalToIf",
                    "ideaSeverity": "INFORMATION",
                    "qodanaSeverity": "Info"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Code style issues",
                      "index": 9,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "IllegalDependencyOnInternalPackage",
                "shortDescription": {
                  "text": "Illegal dependency on internal package"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "error",
                  "parameters": {
                    "suppressToolId": "IllegalDependencyOnInternalPackage",
                    "ideaSeverity": "ERROR",
                    "qodanaSeverity": "Critical"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "JVM languages",
                      "index": 1,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "BigDecimalMethodWithoutRoundingCalled",
                "shortDescription": {
                  "text": "Call to 'BigDecimal' method without a rounding mode argument"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": true,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "BigDecimalMethodWithoutRoundingCalled",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Numeric issues",
                      "index": 24,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "OverlyComplexArithmeticExpression",
                "shortDescription": {
                  "text": "Overly complex arithmetic expression"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "OverlyComplexArithmeticExpression",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Numeric issues",
                      "index": 24,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "DriverManagerGetConnection",
                "shortDescription": {
                  "text": "Use of 'DriverManager' to get JDBC connection"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "CallToDriverManagerGetConnection",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Resource management",
                      "index": 99,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "ThreadDumpStack",
                "shortDescription": {
                  "text": "Call to 'Thread.dumpStack()'"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "CallToThreadDumpStack",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Code maturity",
                      "index": 38,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "FinalMethodInFinalClass",
                "shortDescription": {
                  "text": "'final' method in 'final' class"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "FinalMethodInFinalClass",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Declaration redundancy",
                      "index": 11,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "UnnecessaryBlockStatement",
                "shortDescription": {
                  "text": "Unnecessary code block"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "note",
                  "parameters": {
                    "suppressToolId": "UnnecessaryCodeBlock",
                    "ideaSeverity": "INFORMATION",
                    "qodanaSeverity": "Info"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Code style issues",
                      "index": 9,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "FinalPrivateMethod",
                "shortDescription": {
                  "text": "'private' method declared 'final'"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "FinalPrivateMethod",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Class structure",
                      "index": 15,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "UnnecessaryUnboxing",
                "shortDescription": {
                  "text": "Unnecessary unboxing"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "UnnecessaryUnboxing",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Java language level migration aids/Java 5",
                      "index": 82,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "AssignmentOrReturnOfFieldWithMutableType",
                "shortDescription": {
                  "text": "Assignment or return of field with mutable type"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "AssignmentOrReturnOfFieldWithMutableType",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Encapsulation",
                      "index": 93,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "OptionalAssignedToNull",
                "shortDescription": {
                  "text": "Null value for Optional type"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "OptionalAssignedToNull",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Code maturity",
                      "index": 38,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "PointlessIndexOfComparison",
                "shortDescription": {
                  "text": "Pointless 'indexOf()' comparison"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "PointlessIndexOfComparison",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Control flow issues",
                      "index": 23,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "IteratorHasNextCallsIteratorNext",
                "shortDescription": {
                  "text": "'Iterator.hasNext()' which calls 'next()'"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": true,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "IteratorHasNextCallsIteratorNext",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Probable bugs",
                      "index": 12,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "EqualsAndHashcode",
                "shortDescription": {
                  "text": "'equals()' and 'hashCode()' not paired"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "EqualsAndHashcode",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Probable bugs",
                      "index": 12,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "StringRepeatCanBeUsed",
                "shortDescription": {
                  "text": "String.repeat() can be used"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "StringRepeatCanBeUsed",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Java language level migration aids/Java 11",
                      "index": 130,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "MathRoundingWithIntArgument",
                "shortDescription": {
                  "text": "Call math rounding with 'int' argument"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": true,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "MathRoundingWithIntArgument",
                    "cweIds": [
                      681
                    ],
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Probable bugs",
                      "index": 12,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "SynchronizationOnStaticField",
                "shortDescription": {
                  "text": "Synchronization on 'static' field"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "SynchronizationOnStaticField",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Threading issues",
                      "index": 22,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "SwitchStatementWithConfusingDeclaration",
                "shortDescription": {
                  "text": "Local variable used and declared in different 'switch' branches"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": true,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "LocalVariableUsedAndDeclaredInDifferentSwitchBranches",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Control flow issues",
                      "index": 23,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "FieldMayBeFinal",
                "shortDescription": {
                  "text": "Field may be 'final'"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "FieldMayBeFinal",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Code style issues",
                      "index": 9,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "SuspiciousArrayMethodCall",
                "shortDescription": {
                  "text": "Suspicious 'Arrays' method call"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": true,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "SuspiciousArrayMethodCall",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Probable bugs",
                      "index": 12,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "ClassHasNoToStringMethod",
                "shortDescription": {
                  "text": "Class does not override 'toString()' method"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "ClassHasNoToStringMethod",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/toString() issues",
                      "index": 144,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "FieldAccessNotGuarded",
                "shortDescription": {
                  "text": "Unguarded field access or method call"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "FieldAccessNotGuarded",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Concurrency annotation issues",
                      "index": 66,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "PublicStaticArrayField",
                "shortDescription": {
                  "text": "'public static' array field"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "PublicStaticArrayField",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Security",
                      "index": 27,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "MagicNumber",
                "shortDescription": {
                  "text": "Magic number"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "MagicNumber",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Abstraction issues",
                      "index": 53,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "EnumSwitchStatementWhichMissesCases",
                "shortDescription": {
                  "text": "Enum 'switch' statement that misses case"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "note",
                  "parameters": {
                    "suppressToolId": "EnumSwitchStatementWhichMissesCases",
                    "ideaSeverity": "INFORMATION",
                    "qodanaSeverity": "Info"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Control flow issues",
                      "index": 23,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "NegativelyNamedBooleanVariable",
                "shortDescription": {
                  "text": "Negatively named boolean variable"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "NegativelyNamedBooleanVariable",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Data flow",
                      "index": 43,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "SuspiciousIntegerDivAssignment",
                "shortDescription": {
                  "text": "Suspicious integer division assignment"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": true,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "SuspiciousIntegerDivAssignment",
                    "cweIds": [
                      682
                    ],
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Probable bugs",
                      "index": 12,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "MethodWithMultipleLoops",
                "shortDescription": {
                  "text": "Method with multiple loops"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "MethodWithMultipleLoops",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Method metrics",
                      "index": 98,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "SleepWhileHoldingLock",
                "shortDescription": {
                  "text": "Call to 'Thread.sleep()' while synchronized"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "SleepWhileHoldingLock",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Threading issues",
                      "index": 22,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "DeprecatedClassUsageInspection",
                "shortDescription": {
                  "text": "Deprecated API usage in XML"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "DeprecatedClassUsageInspection",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "XML",
                      "index": 75,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "MethodReturnAlwaysConstant",
                "shortDescription": {
                  "text": "Method returns per-class constant"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "MethodReturnAlwaysConstant",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Class structure",
                      "index": 15,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "DuplicateBranchesInSwitch",
                "shortDescription": {
                  "text": "Duplicate branches in 'switch'"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "note",
                  "parameters": {
                    "suppressToolId": "DuplicateBranchesInSwitch",
                    "ideaSeverity": "WEAK WARNING",
                    "qodanaSeverity": "Moderate"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Verbose or redundant code constructs",
                      "index": 31,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "SingleElementAnnotation",
                "shortDescription": {
                  "text": "Non-normalized annotation"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "note",
                  "parameters": {
                    "suppressToolId": "SingleElementAnnotation",
                    "ideaSeverity": "INFORMATION",
                    "qodanaSeverity": "Info"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Code style issues",
                      "index": 9,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "ManualMinMaxCalculation",
                "shortDescription": {
                  "text": "Manual min/max calculation"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "ManualMinMaxCalculation",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Verbose or redundant code constructs",
                      "index": 31,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "SillyAssignment",
                "shortDescription": {
                  "text": "Variable is assigned to itself"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "SillyAssignment",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Declaration redundancy",
                      "index": 11,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "BoundedWildcard",
                "shortDescription": {
                  "text": "Can use bounded wildcard"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "BoundedWildcard",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Code style issues",
                      "index": 9,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "InstanceVariableInitialization",
                "shortDescription": {
                  "text": "Instance field may not be initialized"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "InstanceVariableMayNotBeInitialized",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Initialization",
                      "index": 25,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "IfStatementWithTooManyBranches",
                "shortDescription": {
                  "text": "'if' statement with too many branches"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "IfStatementWithTooManyBranches",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Control flow issues",
                      "index": 23,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "NonSerializableObjectPassedToObjectStream",
                "shortDescription": {
                  "text": "Non-serializable object passed to 'ObjectOutputStream'"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "NonSerializableObjectPassedToObjectStream",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Serialization issues",
                      "index": 16,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "ModuleWithTooFewClasses",
                "shortDescription": {
                  "text": "Module with too few classes"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "ModuleWithTooFewClasses",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Modularization issues",
                      "index": 48,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "UseOfObsoleteDateTimeApi",
                "shortDescription": {
                  "text": "Use of obsolete date-time API"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "UseOfObsoleteDateTimeApi",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Code maturity",
                      "index": 38,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "NullArgumentToVariableArgMethod",
                "shortDescription": {
                  "text": "Confusing argument to varargs method"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": true,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "ConfusingArgumentToVarargsMethod",
                    "cweIds": [
                      628
                    ],
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Probable bugs",
                      "index": 12,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "OverloadedVarargsMethod",
                "shortDescription": {
                  "text": "Overloaded varargs method"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "OverloadedVarargsMethod",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Naming conventions/Method",
                      "index": 70,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "AnonymousInnerClassMayBeStatic",
                "shortDescription": {
                  "text": "Anonymous class may be a named 'static' inner class"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "AnonymousInnerClassMayBeStatic",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Memory",
                      "index": 119,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "PublicConstructor",
                "shortDescription": {
                  "text": "'public' constructor can be replaced with factory method"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "PublicConstructor",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Class structure",
                      "index": 15,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "RedundantEmbeddedExpression",
                "shortDescription": {
                  "text": "Redundant embedded expression in string template"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "RedundantEmbeddedExpression",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Verbose or redundant code constructs",
                      "index": 31,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "SwitchStatementWithTooFewBranches",
                "shortDescription": {
                  "text": "Minimum 'switch' branches"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "SwitchStatementWithTooFewBranches",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Control flow issues",
                      "index": 23,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "UsagesOfObsoleteApi",
                "shortDescription": {
                  "text": "Usages of ApiStatus.@Obsolete"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "note",
                  "parameters": {
                    "suppressToolId": "UsagesOfObsoleteApi",
                    "ideaSeverity": "TEXT ATTRIBUTES",
                    "qodanaSeverity": "Info"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "JVM languages",
                      "index": 1,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "ConstantDeclaredInInterface",
                "shortDescription": {
                  "text": "Constant declared in interface"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "ConstantDeclaredInInterface",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Class structure",
                      "index": 15,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "StaticImport",
                "shortDescription": {
                  "text": "Static import"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "StaticImport",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Imports",
                      "index": 19,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "ReplaceNullCheck",
                "shortDescription": {
                  "text": "Null check can be replaced with method call"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "ReplaceNullCheck",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Java language level migration aids/Java 9",
                      "index": 55,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "NoExplicitFinalizeCalls",
                "shortDescription": {
                  "text": "'finalize()' called explicitly"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": true,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "FinalizeCalledExplicitly",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Finalization",
                      "index": 47,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "NegatedIfElse",
                "shortDescription": {
                  "text": "'if' statement with negated condition"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "IfStatementWithNegatedCondition",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Control flow issues",
                      "index": 23,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "FieldCount",
                "shortDescription": {
                  "text": "Class with too many fields"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "ClassWithTooManyFields",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Class metrics",
                      "index": 90,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              }
            ],
            "language": "en-US",
            "contents": [
              "localizedData",
              "nonLocalizedData"
            ],
            "isComprehensive": false
          },
          {
            "name": "org.jetbrains.kotlin",
            "version": "242.20224.419-IJ",
            "rules": [
              {
                "id": "RedundantRunCatching",
                "shortDescription": {
                  "text": "Redundant 'runCatching' call"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "note",
                  "parameters": {
                    "suppressToolId": "RedundantRunCatching",
                    "ideaSeverity": "WEAK WARNING",
                    "qodanaSeverity": "Moderate"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Kotlin/Style issues",
                      "index": 3,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "SimpleRedundantLet",
                "shortDescription": {
                  "text": "Redundant receiver-based 'let' call"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "SimpleRedundantLet",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Kotlin/Redundant constructs",
                      "index": 4,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "RemoveSingleExpressionStringTemplate",
                "shortDescription": {
                  "text": "Redundant string template"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "RemoveSingleExpressionStringTemplate",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Kotlin/Redundant constructs",
                      "index": 4,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "NonExhaustiveWhenStatementMigration",
                "shortDescription": {
                  "text": "Non-exhaustive 'when' statements will be prohibited since 1.7"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "NonExhaustiveWhenStatementMigration",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Kotlin/Migration",
                      "index": 13,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "IncompleteDestructuring",
                "shortDescription": {
                  "text": "Incomplete destructuring declaration"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "IncompleteDestructuring",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Kotlin/Probable bugs",
                      "index": 21,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "ScopeFunctionConversion",
                "shortDescription": {
                  "text": "Scope function can be converted to another one"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "note",
                  "parameters": {
                    "suppressToolId": "ScopeFunctionConversion",
                    "ideaSeverity": "INFORMATION",
                    "qodanaSeverity": "Info"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Kotlin/Style issues",
                      "index": 3,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "TrailingComma",
                "shortDescription": {
                  "text": "Trailing comma recommendations"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "note",
                  "parameters": {
                    "suppressToolId": "TrailingComma",
                    "ideaSeverity": "WEAK WARNING",
                    "qodanaSeverity": "Moderate"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Kotlin/Style issues",
                      "index": 3,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "FoldInitializerAndIfToElvis",
                "shortDescription": {
                  "text": "If-Null return/break/... foldable to '?:'"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "note",
                  "parameters": {
                    "suppressToolId": "FoldInitializerAndIfToElvis",
                    "ideaSeverity": "WEAK WARNING",
                    "qodanaSeverity": "Moderate"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Kotlin/Style issues",
                      "index": 3,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "AmbiguousNonLocalJump",
                "shortDescription": {
                  "text": "Ambiguous non-local 'break' or 'continue'"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": true,
                  "level": "note",
                  "parameters": {
                    "suppressToolId": "AmbiguousNonLocalJump",
                    "ideaSeverity": "WEAK WARNING",
                    "qodanaSeverity": "Moderate"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Kotlin/Probable bugs",
                      "index": 21,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "ReplaceWithStringBuilderAppendRange",
                "shortDescription": {
                  "text": "'StringBuilder.append(CharArray, offset, len)' call on the JVM"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": true,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "ReplaceWithStringBuilderAppendRange",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Kotlin/Other problems",
                      "index": 41,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "KotlinInvalidBundleOrProperty",
                "shortDescription": {
                  "text": "Invalid property key"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": true,
                  "level": "error",
                  "parameters": {
                    "suppressToolId": "InvalidBundleOrProperty",
                    "ideaSeverity": "ERROR",
                    "qodanaSeverity": "Critical"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Kotlin",
                      "index": 2,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "UselessCallOnCollection",
                "shortDescription": {
                  "text": "Useless call on collection type"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": true,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "UselessCallOnCollection",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Kotlin/Probable bugs",
                      "index": 21,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "RedundantRequireNotNullCall",
                "shortDescription": {
                  "text": "Redundant 'requireNotNull' or 'checkNotNull' call"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "note",
                  "parameters": {
                    "suppressToolId": "RedundantRequireNotNullCall",
                    "ideaSeverity": "WEAK WARNING",
                    "qodanaSeverity": "Moderate"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Kotlin/Redundant constructs",
                      "index": 4,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "ObjectPropertyName",
                "shortDescription": {
                  "text": "Object property naming convention"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "note",
                  "parameters": {
                    "suppressToolId": "ObjectPropertyName",
                    "ideaSeverity": "WEAK WARNING",
                    "qodanaSeverity": "Moderate"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Kotlin/Naming conventions",
                      "index": 46,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "PackageDirectoryMismatch",
                "shortDescription": {
                  "text": "Package name does not match containing directory"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": true,
                  "level": "note",
                  "parameters": {
                    "suppressToolId": "PackageDirectoryMismatch",
                    "ideaSeverity": "WEAK WARNING",
                    "qodanaSeverity": "Moderate"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Kotlin/Java interop issues",
                      "index": 50,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "KotlinCovariantEquals",
                "shortDescription": {
                  "text": "Covariant 'equals()'"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": true,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "CovariantEquals",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Kotlin/Probable bugs",
                      "index": 21,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "ReplaceSizeZeroCheckWithIsEmpty",
                "shortDescription": {
                  "text": "Size zero check can be replaced with 'isEmpty()'"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "note",
                  "parameters": {
                    "suppressToolId": "ReplaceSizeZeroCheckWithIsEmpty",
                    "ideaSeverity": "WEAK WARNING",
                    "qodanaSeverity": "Moderate"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Kotlin/Style issues",
                      "index": 3,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "AmbiguousExpressionInWhenBranchMigration",
                "shortDescription": {
                  "text": "Ambiguous logical expressions in 'when' branches since 1.7"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "AmbiguousExpressionInWhenBranchMigration",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Kotlin/Migration",
                      "index": 13,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "RedundantEnumConstructorInvocation",
                "shortDescription": {
                  "text": "Redundant enum constructor invocation"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "note",
                  "parameters": {
                    "suppressToolId": "RedundantEnumConstructorInvocation",
                    "ideaSeverity": "WEAK WARNING",
                    "qodanaSeverity": "Moderate"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Kotlin/Redundant constructs",
                      "index": 4,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "FakeJvmFieldConstant",
                "shortDescription": {
                  "text": "Kotlin non-const property used as Java constant"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": true,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "FakeJvmFieldConstant",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Kotlin/Java interop issues",
                      "index": 50,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "WhenWithOnlyElse",
                "shortDescription": {
                  "text": "'when' has only 'else' branch and can be simplified"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "note",
                  "parameters": {
                    "suppressToolId": "WhenWithOnlyElse",
                    "ideaSeverity": "WEAK WARNING",
                    "qodanaSeverity": "Moderate"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Kotlin/Redundant constructs",
                      "index": 4,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "InfixCallToOrdinary",
                "shortDescription": {
                  "text": "Infix call may be dot call"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "note",
                  "parameters": {
                    "suppressToolId": "InfixCallToOrdinary",
                    "ideaSeverity": "INFORMATION",
                    "qodanaSeverity": "Info"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Kotlin/Code migration",
                      "index": 71,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "KotlinTestJUnit",
                "shortDescription": {
                  "text": "kotlin-test-junit could be used"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": true,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "KotlinTestJUnit",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Kotlin",
                      "index": 2,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "SafeCastWithReturn",
                "shortDescription": {
                  "text": "Safe cast with 'return' should be replaced with 'if' type check"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "note",
                  "parameters": {
                    "suppressToolId": "SafeCastWithReturn",
                    "ideaSeverity": "WEAK WARNING",
                    "qodanaSeverity": "Moderate"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Kotlin/Style issues",
                      "index": 3,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "ReplaceAssertBooleanWithAssertEquality",
                "shortDescription": {
                  "text": "Assert boolean could be replaced with assert equality"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "note",
                  "parameters": {
                    "suppressToolId": "ReplaceAssertBooleanWithAssertEquality",
                    "ideaSeverity": "WEAK WARNING",
                    "qodanaSeverity": "Moderate"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Kotlin/Style issues",
                      "index": 3,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "UnnecessaryOptInAnnotation",
                "shortDescription": {
                  "text": "Unnecessary '@OptIn' annotation"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "note",
                  "parameters": {
                    "suppressToolId": "UnnecessaryOptInAnnotation",
                    "ideaSeverity": "WEAK WARNING",
                    "qodanaSeverity": "Moderate"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Kotlin/Redundant constructs",
                      "index": 4,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "NonVarPropertyInExternalInterface",
                "shortDescription": {
                  "text": "External interface contains val property"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": true,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "NonVarPropertyInExternalInterface",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Kotlin/Probable bugs",
                      "index": 21,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "ReplaceStringFormatWithLiteral",
                "shortDescription": {
                  "text": "'String.format' call can be replaced with string templates"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "note",
                  "parameters": {
                    "suppressToolId": "ReplaceStringFormatWithLiteral",
                    "ideaSeverity": "INFORMATION",
                    "qodanaSeverity": "Info"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Kotlin/Style issues",
                      "index": 3,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "ReplaceNotNullAssertionWithElvisReturn",
                "shortDescription": {
                  "text": "Not-null assertion can be replaced with 'return'"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "note",
                  "parameters": {
                    "suppressToolId": "ReplaceNotNullAssertionWithElvisReturn",
                    "ideaSeverity": "WEAK WARNING",
                    "qodanaSeverity": "Moderate"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Kotlin/Style issues",
                      "index": 3,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "ReplaceSubstringWithSubstringBefore",
                "shortDescription": {
                  "text": "'substring' call should be replaced with 'substringBefore'"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "note",
                  "parameters": {
                    "suppressToolId": "ReplaceSubstringWithSubstringBefore",
                    "ideaSeverity": "INFORMATION",
                    "qodanaSeverity": "Info"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Kotlin/Style issues",
                      "index": 3,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "ReplaceWithOperatorAssignment",
                "shortDescription": {
                  "text": "Assignment can be replaced with operator assignment"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "note",
                  "parameters": {
                    "suppressToolId": "ReplaceWithOperatorAssignment",
                    "ideaSeverity": "WEAK WARNING",
                    "qodanaSeverity": "Moderate"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Kotlin/Style issues",
                      "index": 3,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "UnusedSymbol",
                "shortDescription": {
                  "text": "Unused symbol"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "unused",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Kotlin/Redundant constructs",
                      "index": 4,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "ReplaceCollectionCountWithSize",
                "shortDescription": {
                  "text": "Collection count can be converted to size"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "note",
                  "parameters": {
                    "suppressToolId": "ReplaceCollectionCountWithSize",
                    "ideaSeverity": "WEAK WARNING",
                    "qodanaSeverity": "Moderate"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Kotlin/Style issues",
                      "index": 3,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "ReplaceArrayEqualityOpWithArraysEquals",
                "shortDescription": {
                  "text": "Arrays comparison via '==' and '!='"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": true,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "ReplaceArrayEqualityOpWithArraysEquals",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Kotlin/Probable bugs",
                      "index": 21,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "DeprecatedGradleDependency",
                "shortDescription": {
                  "text": "Deprecated library is used in Gradle"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": true,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "DeprecatedGradleDependency",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Kotlin",
                      "index": 2,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "CastDueToProgressionResolutionChangeMigration",
                "shortDescription": {
                  "text": "Progression resolution change since 1.9"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "CastDueToProgressionResolutionChangeMigration",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Kotlin/Migration",
                      "index": 13,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "ConvertReferenceToLambda",
                "shortDescription": {
                  "text": "Can be replaced with lambda"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "note",
                  "parameters": {
                    "suppressToolId": "ConvertReferenceToLambda",
                    "ideaSeverity": "INFORMATION",
                    "qodanaSeverity": "Info"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Kotlin/Style issues",
                      "index": 3,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "UnlabeledReturnInsideLambda",
                "shortDescription": {
                  "text": "Unlabeled return inside lambda"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "note",
                  "parameters": {
                    "suppressToolId": "UnlabeledReturnInsideLambda",
                    "ideaSeverity": "INFORMATION",
                    "qodanaSeverity": "Info"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Kotlin/Style issues",
                      "index": 3,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "AddConversionCallMigration",
                "shortDescription": {
                  "text": "Explicit conversion from `Int` needed since 1.9"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "AddConversionCallMigration",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Kotlin/Migration",
                      "index": 13,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "LateinitVarOverridesLateinitVar",
                "shortDescription": {
                  "text": "'lateinit var' property overrides 'lateinit var' property"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": true,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "LateinitVarOverridesLateinitVar",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Kotlin/Probable bugs",
                      "index": 21,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "VerboseNullabilityAndEmptiness",
                "shortDescription": {
                  "text": "Verbose nullability and emptiness check"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "note",
                  "parameters": {
                    "suppressToolId": "VerboseNullabilityAndEmptiness",
                    "ideaSeverity": "WEAK WARNING",
                    "qodanaSeverity": "Moderate"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Kotlin/Style issues",
                      "index": 3,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "DifferentKotlinGradleVersion",
                "shortDescription": {
                  "text": "Kotlin Gradle and IDE plugins versions are different"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "DifferentKotlinGradleVersion",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Kotlin",
                      "index": 2,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "JoinDeclarationAndAssignment",
                "shortDescription": {
                  "text": "Join declaration and assignment"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "note",
                  "parameters": {
                    "suppressToolId": "JoinDeclarationAndAssignment",
                    "ideaSeverity": "WEAK WARNING",
                    "qodanaSeverity": "Moderate"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Kotlin/Style issues",
                      "index": 3,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "KotlinEqualsBetweenInconvertibleTypes",
                "shortDescription": {
                  "text": "'equals()' between objects of inconvertible types"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": true,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "EqualsBetweenInconvertibleTypes",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Kotlin/Probable bugs",
                      "index": 21,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "HasPlatformType",
                "shortDescription": {
                  "text": "Function or property has platform type"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": true,
                  "level": "note",
                  "parameters": {
                    "suppressToolId": "HasPlatformType",
                    "ideaSeverity": "WEAK WARNING",
                    "qodanaSeverity": "Moderate"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Kotlin/Java interop issues",
                      "index": 50,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "DataClassPrivateConstructor",
                "shortDescription": {
                  "text": "Private data class constructor is exposed via the 'copy' method"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": true,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "DataClassPrivateConstructor",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Kotlin/Probable bugs",
                      "index": 21,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "RedundantInnerClassModifier",
                "shortDescription": {
                  "text": "Redundant 'inner' modifier"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "RedundantInnerClassModifier",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Kotlin/Redundant constructs",
                      "index": 4,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "JavaCollectionsStaticMethodOnImmutableList",
                "shortDescription": {
                  "text": "Call of Java mutator method on immutable Kotlin collection"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": true,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "JavaCollectionsStaticMethodOnImmutableList",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Kotlin/Java interop issues",
                      "index": 50,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "MavenCoroutinesDeprecation",
                "shortDescription": {
                  "text": "Incompatible kotlinx.coroutines dependency is used with Kotlin 1.3+ in Maven"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "error",
                  "parameters": {
                    "suppressToolId": "MavenCoroutinesDeprecation",
                    "ideaSeverity": "ERROR",
                    "qodanaSeverity": "Critical"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Kotlin/Migration/Maven",
                      "index": 112,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "NullableBooleanElvis",
                "shortDescription": {
                  "text": "Equality check can be used instead of elvis for nullable boolean check"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "note",
                  "parameters": {
                    "suppressToolId": "NullableBooleanElvis",
                    "ideaSeverity": "WEAK WARNING",
                    "qodanaSeverity": "Moderate"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Kotlin/Style issues",
                      "index": 3,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "DeprecatedMavenDependency",
                "shortDescription": {
                  "text": "Deprecated library is used in Maven"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": true,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "DeprecatedMavenDependency",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Kotlin",
                      "index": 2,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "UnnecessaryVariable",
                "shortDescription": {
                  "text": "Unnecessary local variable"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "note",
                  "parameters": {
                    "suppressToolId": "UnnecessaryVariable",
                    "ideaSeverity": "WEAK WARNING",
                    "qodanaSeverity": "Moderate"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Kotlin/Redundant constructs",
                      "index": 4,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "RedundantEmptyInitializerBlock",
                "shortDescription": {
                  "text": "Redundant empty initializer block"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": true,
                  "level": "note",
                  "parameters": {
                    "suppressToolId": "RedundantEmptyInitializerBlock",
                    "ideaSeverity": "WEAK WARNING",
                    "qodanaSeverity": "Moderate"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Kotlin/Other problems",
                      "index": 41,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "RedundantLabeledReturnOnLastExpressionInLambda",
                "shortDescription": {
                  "text": "Redundant labeled return on the last expression in a lambda"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "note",
                  "parameters": {
                    "suppressToolId": "RedundantLabeledReturnOnLastExpressionInLambda",
                    "ideaSeverity": "INFORMATION",
                    "qodanaSeverity": "Info"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Kotlin/Redundant constructs",
                      "index": 4,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "GradleKotlinxCoroutinesDeprecation",
                "shortDescription": {
                  "text": "Incompatible kotlinx.coroutines dependency is used with Kotlin 1.3+ in Gradle"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "error",
                  "parameters": {
                    "suppressToolId": "GradleKotlinxCoroutinesDeprecation",
                    "ideaSeverity": "ERROR",
                    "qodanaSeverity": "Critical"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Kotlin/Migration/Gradle",
                      "index": 118,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "WarningOnMainUnusedParameterMigration",
                "shortDescription": {
                  "text": "Unused 'args' on 'main' since 1.4"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "note",
                  "parameters": {
                    "suppressToolId": "WarningOnMainUnusedParameterMigration",
                    "ideaSeverity": "WEAK WARNING",
                    "qodanaSeverity": "Moderate"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Kotlin/Migration",
                      "index": 13,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "RedundantWith",
                "shortDescription": {
                  "text": "Redundant 'with' call"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "note",
                  "parameters": {
                    "suppressToolId": "RedundantWith",
                    "ideaSeverity": "WEAK WARNING",
                    "qodanaSeverity": "Moderate"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Kotlin/Redundant constructs",
                      "index": 4,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "RedundantLabelMigration",
                "shortDescription": {
                  "text": "Redundant label"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "note",
                  "parameters": {
                    "suppressToolId": "RedundantLabelMigration",
                    "ideaSeverity": "WEAK WARNING",
                    "qodanaSeverity": "Moderate"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Kotlin/Migration",
                      "index": 13,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "KotlinRedundantDiagnosticSuppress",
                "shortDescription": {
                  "text": "Redundant diagnostic suppression"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "KotlinRedundantDiagnosticSuppress",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Kotlin/Redundant constructs",
                      "index": 4,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "ReplaceNegatedIsEmptyWithIsNotEmpty",
                "shortDescription": {
                  "text": "Negated call can be simplified"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "note",
                  "parameters": {
                    "suppressToolId": "ReplaceNegatedIsEmptyWithIsNotEmpty",
                    "ideaSeverity": "WEAK WARNING",
                    "qodanaSeverity": "Moderate"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Kotlin/Style issues",
                      "index": 3,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "DelegationToVarProperty",
                "shortDescription": {
                  "text": "Delegating to 'var' property"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": true,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "DelegationToVarProperty",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Kotlin/Probable bugs",
                      "index": 21,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "ConstantConditionIf",
                "shortDescription": {
                  "text": "Condition of 'if' expression is constant"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "note",
                  "parameters": {
                    "suppressToolId": "ConstantConditionIf",
                    "ideaSeverity": "WEAK WARNING",
                    "qodanaSeverity": "Moderate"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Kotlin/Redundant constructs",
                      "index": 4,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "RedundantLambdaArrow",
                "shortDescription": {
                  "text": "Redundant lambda arrow"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "note",
                  "parameters": {
                    "suppressToolId": "RedundantLambdaArrow",
                    "ideaSeverity": "WEAK WARNING",
                    "qodanaSeverity": "Moderate"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Kotlin/Redundant constructs",
                      "index": 4,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "KotlinInternalInJava",
                "shortDescription": {
                  "text": "Usage of Kotlin internal declarations from Java"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": true,
                  "level": "error",
                  "parameters": {
                    "suppressToolId": "KotlinInternalInJava",
                    "ideaSeverity": "ERROR",
                    "qodanaSeverity": "Critical"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Kotlin/Java interop issues",
                      "index": 50,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "NoConstructorMigration",
                "shortDescription": {
                  "text": "Forbidden constructor call"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "error",
                  "parameters": {
                    "suppressToolId": "NoConstructorMigration",
                    "ideaSeverity": "ERROR",
                    "qodanaSeverity": "Critical"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Kotlin/Migration",
                      "index": 13,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "RedundantValueArgument",
                "shortDescription": {
                  "text": "Redundant value argument"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "note",
                  "parameters": {
                    "suppressToolId": "RedundantValueArgument",
                    "ideaSeverity": "WEAK WARNING",
                    "qodanaSeverity": "Moderate"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Kotlin/Redundant constructs",
                      "index": 4,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "UseWithIndex",
                "shortDescription": {
                  "text": "Manually incremented index variable can be replaced with use of 'withIndex()'"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "note",
                  "parameters": {
                    "suppressToolId": "UseWithIndex",
                    "ideaSeverity": "WEAK WARNING",
                    "qodanaSeverity": "Moderate"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Kotlin/Style issues",
                      "index": 3,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "ImplicitThis",
                "shortDescription": {
                  "text": "Implicit 'this'"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "note",
                  "parameters": {
                    "suppressToolId": "ImplicitThis",
                    "ideaSeverity": "INFORMATION",
                    "qodanaSeverity": "Info"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Kotlin/Style issues",
                      "index": 3,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "KotlinCatchMayIgnoreException",
                "shortDescription": {
                  "text": "'catch' block may ignore exception"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": true,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "CatchMayIgnoreException",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Kotlin/Probable bugs",
                      "index": 21,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "DifferentStdlibGradleVersion",
                "shortDescription": {
                  "text": "Kotlin library and Gradle plugin versions are different"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": true,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "DifferentStdlibGradleVersion",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Kotlin",
                      "index": 2,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "CanBeVal",
                "shortDescription": {
                  "text": "Local 'var' is never modified and can be declared as 'val'"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "CanBeVal",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Kotlin/Style issues",
                      "index": 3,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "ReplaceWithIgnoreCaseEquals",
                "shortDescription": {
                  "text": "Should be replaced with 'equals(..., ignoreCase = true)'"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "note",
                  "parameters": {
                    "suppressToolId": "ReplaceWithIgnoreCaseEquals",
                    "ideaSeverity": "WEAK WARNING",
                    "qodanaSeverity": "Moderate"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Kotlin/Redundant constructs",
                      "index": 4,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "ReplaceSubstringWithSubstringAfter",
                "shortDescription": {
                  "text": "'substring' call should be replaced with 'substringAfter'"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "note",
                  "parameters": {
                    "suppressToolId": "ReplaceSubstringWithSubstringAfter",
                    "ideaSeverity": "INFORMATION",
                    "qodanaSeverity": "Info"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Kotlin/Style issues",
                      "index": 3,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "RedundantCompanionReference",
                "shortDescription": {
                  "text": "Redundant 'Companion' reference"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "RedundantCompanionReference",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Kotlin/Redundant constructs",
                      "index": 4,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "KDocUnresolvedReference",
                "shortDescription": {
                  "text": "Unresolved reference in KDoc"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": true,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "KDocUnresolvedReference",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Kotlin/Probable bugs",
                      "index": 21,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "NestedLambdaShadowedImplicitParameter",
                "shortDescription": {
                  "text": "Nested lambda has shadowed implicit parameter"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "note",
                  "parameters": {
                    "suppressToolId": "NestedLambdaShadowedImplicitParameter",
                    "ideaSeverity": "WEAK WARNING",
                    "qodanaSeverity": "Moderate"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Kotlin/Style issues",
                      "index": 3,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "RedundantSamConstructor",
                "shortDescription": {
                  "text": "Redundant SAM constructor"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "RedundantSamConstructor",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Kotlin/Redundant constructs",
                      "index": 4,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "InconsistentCommentForJavaParameter",
                "shortDescription": {
                  "text": "Inconsistent comment for Java parameter"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "InconsistentCommentForJavaParameter",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Kotlin/Naming conventions",
                      "index": 46,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "RemoveRedundantCallsOfConversionMethods",
                "shortDescription": {
                  "text": "Redundant call of conversion method"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "RemoveRedundantCallsOfConversionMethods",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Kotlin/Redundant constructs",
                      "index": 4,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "KotlinThrowableNotThrown",
                "shortDescription": {
                  "text": "Throwable not thrown"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": true,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "ThrowableNotThrown",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Kotlin/Probable bugs",
                      "index": 21,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "KotlinSealedInheritorsInJava",
                "shortDescription": {
                  "text": "Inheritance of Kotlin sealed interface/class from Java"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": true,
                  "level": "error",
                  "parameters": {
                    "suppressToolId": "KotlinSealedInheritorsInJava",
                    "ideaSeverity": "ERROR",
                    "qodanaSeverity": "Critical"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Kotlin/Java interop issues",
                      "index": 50,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "SimplifyNegatedBinaryExpression",
                "shortDescription": {
                  "text": "Negated boolean expression can be simplified"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "note",
                  "parameters": {
                    "suppressToolId": "SimplifyNegatedBinaryExpression",
                    "ideaSeverity": "WEAK WARNING",
                    "qodanaSeverity": "Moderate"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Kotlin/Style issues",
                      "index": 3,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "MemberVisibilityCanBePrivate",
                "shortDescription": {
                  "text": "Class member can have 'private' visibility"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "note",
                  "parameters": {
                    "suppressToolId": "MemberVisibilityCanBePrivate",
                    "ideaSeverity": "WEAK WARNING",
                    "qodanaSeverity": "Moderate"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Kotlin/Style issues",
                      "index": 3,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "SelfAssignment",
                "shortDescription": {
                  "text": "Redundant assignment"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": true,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "SelfAssignment",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Kotlin/Probable bugs",
                      "index": 21,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "RecursiveEqualsCall",
                "shortDescription": {
                  "text": "Recursive equals call"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": true,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "RecursiveEqualsCall",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Kotlin/Probable bugs",
                      "index": 21,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "ExplicitThis",
                "shortDescription": {
                  "text": "Redundant explicit 'this'"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "note",
                  "parameters": {
                    "suppressToolId": "ExplicitThis",
                    "ideaSeverity": "INFORMATION",
                    "qodanaSeverity": "Info"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Kotlin/Redundant constructs",
                      "index": 4,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "NullChecksToSafeCall",
                "shortDescription": {
                  "text": "Null-checks can be replaced with safe-calls"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "note",
                  "parameters": {
                    "suppressToolId": "NullChecksToSafeCall",
                    "ideaSeverity": "WEAK WARNING",
                    "qodanaSeverity": "Moderate"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Kotlin/Redundant constructs",
                      "index": 4,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "UnusedMainParameter",
                "shortDescription": {
                  "text": "Main parameter is not necessary"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "note",
                  "parameters": {
                    "suppressToolId": "UnusedMainParameter",
                    "ideaSeverity": "WEAK WARNING",
                    "qodanaSeverity": "Moderate"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Kotlin/Style issues",
                      "index": 3,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "FunctionWithLambdaExpressionBody",
                "shortDescription": {
                  "text": "Function with '= { ... }' and inferred return type"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "note",
                  "parameters": {
                    "suppressToolId": "FunctionWithLambdaExpressionBody",
                    "ideaSeverity": "WEAK WARNING",
                    "qodanaSeverity": "Moderate"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Kotlin/Style issues",
                      "index": 3,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "ArrayInDataClass",
                "shortDescription": {
                  "text": "Array property in data class"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": true,
                  "level": "note",
                  "parameters": {
                    "suppressToolId": "ArrayInDataClass",
                    "ideaSeverity": "WEAK WARNING",
                    "qodanaSeverity": "Moderate"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Kotlin/Probable bugs",
                      "index": 21,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "ConvertTwoComparisonsToRangeCheck",
                "shortDescription": {
                  "text": "Two comparisons should be converted to a range check"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "note",
                  "parameters": {
                    "suppressToolId": "ConvertTwoComparisonsToRangeCheck",
                    "ideaSeverity": "WEAK WARNING",
                    "qodanaSeverity": "Moderate"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Kotlin/Style issues",
                      "index": 3,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "LocalVariableName",
                "shortDescription": {
                  "text": "Local variable naming convention"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "note",
                  "parameters": {
                    "suppressToolId": "LocalVariableName",
                    "ideaSeverity": "WEAK WARNING",
                    "qodanaSeverity": "Moderate"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Kotlin/Naming conventions",
                      "index": 46,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "ReplaceUntilWithRangeUntil",
                "shortDescription": {
                  "text": "Replace 'until' with '..<' operator"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "note",
                  "parameters": {
                    "suppressToolId": "ReplaceUntilWithRangeUntil",
                    "ideaSeverity": "WEAK WARNING",
                    "qodanaSeverity": "Moderate"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Kotlin/Style issues",
                      "index": 3,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "RemoveRedundantQualifierName",
                "shortDescription": {
                  "text": "Redundant qualifier name"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "RemoveRedundantQualifierName",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Kotlin/Redundant constructs",
                      "index": 4,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "RemoveCurlyBracesFromTemplate",
                "shortDescription": {
                  "text": "Redundant curly braces in string template"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "note",
                  "parameters": {
                    "suppressToolId": "RemoveCurlyBracesFromTemplate",
                    "ideaSeverity": "WEAK WARNING",
                    "qodanaSeverity": "Moderate"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Kotlin/Redundant constructs",
                      "index": 4,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "ReplaceSubstringWithIndexingOperation",
                "shortDescription": {
                  "text": "'substring' call should be replaced with indexing operator"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "note",
                  "parameters": {
                    "suppressToolId": "ReplaceSubstringWithIndexingOperation",
                    "ideaSeverity": "INFORMATION",
                    "qodanaSeverity": "Info"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Kotlin/Style issues",
                      "index": 3,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "MoveLambdaOutsideParentheses",
                "shortDescription": {
                  "text": "Lambda argument inside parentheses"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "note",
                  "parameters": {
                    "suppressToolId": "MoveLambdaOutsideParentheses",
                    "ideaSeverity": "WEAK WARNING",
                    "qodanaSeverity": "Moderate"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Kotlin/Style issues",
                      "index": 3,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "ProhibitTypeParametersForLocalVariablesMigration",
                "shortDescription": {
                  "text": "Local variable with type parameters"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "error",
                  "parameters": {
                    "suppressToolId": "ProhibitTypeParametersForLocalVariablesMigration",
                    "ideaSeverity": "ERROR",
                    "qodanaSeverity": "Critical"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Kotlin/Migration",
                      "index": 13,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "TestFunctionName",
                "shortDescription": {
                  "text": "Test function naming convention"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "note",
                  "parameters": {
                    "suppressToolId": "TestFunctionName",
                    "ideaSeverity": "WEAK WARNING",
                    "qodanaSeverity": "Moderate"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Kotlin/Naming conventions",
                      "index": 46,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "RecursivePropertyAccessor",
                "shortDescription": {
                  "text": "Recursive property accessor"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": true,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "RecursivePropertyAccessor",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Kotlin/Probable bugs",
                      "index": 21,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "RedundantUnitExpression",
                "shortDescription": {
                  "text": "Redundant 'Unit'"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "RedundantUnitExpression",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Kotlin/Redundant constructs",
                      "index": 4,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "PlatformExtensionReceiverOfInline",
                "shortDescription": {
                  "text": "'inline fun' with nullable receiver until Kotlin 1.2"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": true,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "PlatformExtensionReceiverOfInline",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Kotlin/Java interop issues",
                      "index": 50,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "SuspiciousEqualsCombination",
                "shortDescription": {
                  "text": "Suspicious combination of == and ==="
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": true,
                  "level": "note",
                  "parameters": {
                    "suppressToolId": "SuspiciousEqualsCombination",
                    "ideaSeverity": "WEAK WARNING",
                    "qodanaSeverity": "Moderate"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Kotlin/Probable bugs",
                      "index": 21,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "UnusedDataClassCopyResult",
                "shortDescription": {
                  "text": "Unused result of data class copy"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": true,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "UnusedDataClassCopyResult",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Kotlin/Probable bugs",
                      "index": 21,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "RedundantElseInIf",
                "shortDescription": {
                  "text": "Redundant 'else' in 'if'"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "note",
                  "parameters": {
                    "suppressToolId": "RedundantElseInIf",
                    "ideaSeverity": "INFORMATION",
                    "qodanaSeverity": "Info"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Kotlin/Style issues",
                      "index": 3,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "ReplacePutWithAssignment",
                "shortDescription": {
                  "text": "'map.put()' can be converted to assignment"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "note",
                  "parameters": {
                    "suppressToolId": "ReplacePutWithAssignment",
                    "ideaSeverity": "WEAK WARNING",
                    "qodanaSeverity": "Moderate"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Kotlin/Style issues",
                      "index": 3,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "JavaIoSerializableObjectMustHaveReadResolve",
                "shortDescription": {
                  "text": "Serializable object must implement 'readResolve'"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": true,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "JavaIoSerializableObjectMustHaveReadResolve",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Kotlin/Probable bugs",
                      "index": 21,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "KotlinDoubleNegation",
                "shortDescription": {
                  "text": "Redundant double negation"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "note",
                  "parameters": {
                    "suppressToolId": "DoubleNegation",
                    "ideaSeverity": "WEAK WARNING",
                    "qodanaSeverity": "Moderate"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Kotlin/Redundant constructs",
                      "index": 4,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "FunctionName",
                "shortDescription": {
                  "text": "Function naming convention"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "note",
                  "parameters": {
                    "suppressToolId": "FunctionName",
                    "ideaSeverity": "WEAK WARNING",
                    "qodanaSeverity": "Moderate"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Kotlin/Naming conventions",
                      "index": 46,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "DifferentKotlinMavenVersion",
                "shortDescription": {
                  "text": "Maven and IDE plugins versions are different"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": true,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "DifferentKotlinMavenVersion",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Kotlin",
                      "index": 2,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "RedundantUnitReturnType",
                "shortDescription": {
                  "text": "Redundant 'Unit' return type"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "RedundantUnitReturnType",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Kotlin/Redundant constructs",
                      "index": 4,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "ReplaceRangeToWithUntil",
                "shortDescription": {
                  "text": "'rangeTo' or the '..' call should be replaced with 'until'"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "note",
                  "parameters": {
                    "suppressToolId": "ReplaceRangeToWithUntil",
                    "ideaSeverity": "WEAK WARNING",
                    "qodanaSeverity": "Moderate"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Kotlin/Style issues",
                      "index": 3,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "UnusedEquals",
                "shortDescription": {
                  "text": "Unused equals expression"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": true,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "UnusedEquals",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Kotlin/Probable bugs",
                      "index": 21,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "UnclearPrecedenceOfBinaryExpression",
                "shortDescription": {
                  "text": "Multiple operators with different precedence"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "UnclearPrecedenceOfBinaryExpression",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Kotlin/Style issues",
                      "index": 3,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "UnusedLambdaExpressionBody",
                "shortDescription": {
                  "text": "Unused return value of a function with lambda expression body"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": true,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "UnusedLambdaExpressionBody",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Kotlin/Probable bugs",
                      "index": 21,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "ConvertLambdaToReference",
                "shortDescription": {
                  "text": "Can be replaced with function reference"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "note",
                  "parameters": {
                    "suppressToolId": "ConvertLambdaToReference",
                    "ideaSeverity": "INFORMATION",
                    "qodanaSeverity": "Info"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Kotlin/Style issues",
                      "index": 3,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "RedundantSetter",
                "shortDescription": {
                  "text": "Redundant property setter"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "note",
                  "parameters": {
                    "suppressToolId": "RedundantSetter",
                    "ideaSeverity": "WEAK WARNING",
                    "qodanaSeverity": "Moderate"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Kotlin/Redundant constructs",
                      "index": 4,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "CanSealedSubClassBeObject",
                "shortDescription": {
                  "text": "Sealed subclass without state and overridden equals"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": true,
                  "level": "note",
                  "parameters": {
                    "suppressToolId": "CanSealedSubClassBeObject",
                    "ideaSeverity": "WEAK WARNING",
                    "qodanaSeverity": "Moderate"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Kotlin/Probable bugs",
                      "index": 21,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "PropertyName",
                "shortDescription": {
                  "text": "Property naming convention"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "note",
                  "parameters": {
                    "suppressToolId": "PropertyName",
                    "ideaSeverity": "WEAK WARNING",
                    "qodanaSeverity": "Moderate"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Kotlin/Naming conventions",
                      "index": 46,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "InlineClassDeprecatedMigration",
                "shortDescription": {
                  "text": "Inline classes are deprecated since 1.5"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "InlineClassDeprecatedMigration",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Kotlin/Migration",
                      "index": 13,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "KotlinMavenPluginPhase",
                "shortDescription": {
                  "text": "Kotlin Maven Plugin misconfigured"
                },
                "fullDescription": {
                  "text": "Reports kotlin-maven-plugin configuration issues",
                  "markdown": "Reports kotlin-maven-plugin configuration issues"
                },
                "defaultConfiguration": {
                  "enabled": true,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "KotlinMavenPluginPhase",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Kotlin",
                      "index": 2,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "ConvertToStringTemplate",
                "shortDescription": {
                  "text": "String concatenation that can be converted to string template"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "note",
                  "parameters": {
                    "suppressToolId": "ConvertToStringTemplate",
                    "ideaSeverity": "WEAK WARNING",
                    "qodanaSeverity": "Moderate"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Kotlin/Style issues",
                      "index": 3,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "SimplifiableCall",
                "shortDescription": {
                  "text": "Library function call could be simplified"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "note",
                  "parameters": {
                    "suppressToolId": "SimplifiableCall",
                    "ideaSeverity": "WEAK WARNING",
                    "qodanaSeverity": "Moderate"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Kotlin/Style issues",
                      "index": 3,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "ObjectLiteralToLambda",
                "shortDescription": {
                  "text": "Object literal can be converted to lambda"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "note",
                  "parameters": {
                    "suppressToolId": "ObjectLiteralToLambda",
                    "ideaSeverity": "WEAK WARNING",
                    "qodanaSeverity": "Moderate"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Kotlin/Style issues",
                      "index": 3,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "RedundantLambdaOrAnonymousFunction",
                "shortDescription": {
                  "text": "Redundant creation of lambda or anonymous function"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "note",
                  "parameters": {
                    "suppressToolId": "RedundantLambdaOrAnonymousFunction",
                    "ideaSeverity": "WEAK WARNING",
                    "qodanaSeverity": "Moderate"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Kotlin/Redundant constructs",
                      "index": 4,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "ConvertObjectToDataObject",
                "shortDescription": {
                  "text": "Convert 'object' to 'data object'"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": true,
                  "level": "note",
                  "parameters": {
                    "suppressToolId": "ConvertObjectToDataObject",
                    "ideaSeverity": "WEAK WARNING",
                    "qodanaSeverity": "Moderate"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Kotlin/Probable bugs",
                      "index": 21,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "BooleanLiteralArgument",
                "shortDescription": {
                  "text": "Boolean literal argument without parameter name"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "note",
                  "parameters": {
                    "suppressToolId": "BooleanLiteralArgument",
                    "ideaSeverity": "WEAK WARNING",
                    "qodanaSeverity": "Moderate"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Kotlin/Style issues",
                      "index": 3,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "ConvertArgumentToSet",
                "shortDescription": {
                  "text": "Argument could be converted to 'Set' to improve performance"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": true,
                  "level": "note",
                  "parameters": {
                    "suppressToolId": "ConvertArgumentToSet",
                    "ideaSeverity": "WEAK WARNING",
                    "qodanaSeverity": "Moderate"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Kotlin/Other problems",
                      "index": 41,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "ReplaceGuardClauseWithFunctionCall",
                "shortDescription": {
                  "text": "Guard clause can be replaced with Kotlin's function call"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "note",
                  "parameters": {
                    "suppressToolId": "ReplaceGuardClauseWithFunctionCall",
                    "ideaSeverity": "INFORMATION",
                    "qodanaSeverity": "Info"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Kotlin/Style issues",
                      "index": 3,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "ReplaceToStringWithStringTemplate",
                "shortDescription": {
                  "text": "Call of 'toString' could be replaced with string template"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "note",
                  "parameters": {
                    "suppressToolId": "ReplaceToStringWithStringTemplate",
                    "ideaSeverity": "INFORMATION",
                    "qodanaSeverity": "Info"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Kotlin/Style issues",
                      "index": 3,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "ProtectedInFinal",
                "shortDescription": {
                  "text": "'protected' visibility is effectively 'private' in a final class"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "note",
                  "parameters": {
                    "suppressToolId": "ProtectedInFinal",
                    "ideaSeverity": "WEAK WARNING",
                    "qodanaSeverity": "Moderate"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Kotlin/Style issues",
                      "index": 3,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "ReplaceRangeStartEndInclusiveWithFirstLast",
                "shortDescription": {
                  "text": "Boxed properties should be replaced with unboxed"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "note",
                  "parameters": {
                    "suppressToolId": "ReplaceRangeStartEndInclusiveWithFirstLast",
                    "ideaSeverity": "WEAK WARNING",
                    "qodanaSeverity": "Moderate"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Kotlin/Style issues",
                      "index": 3,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "ReplaceSizeCheckWithIsNotEmpty",
                "shortDescription": {
                  "text": "Size check can be replaced with 'isNotEmpty()'"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "note",
                  "parameters": {
                    "suppressToolId": "ReplaceSizeCheckWithIsNotEmpty",
                    "ideaSeverity": "WEAK WARNING",
                    "qodanaSeverity": "Moderate"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Kotlin/Style issues",
                      "index": 3,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "RedundantSemicolon",
                "shortDescription": {
                  "text": "Redundant semicolon"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "RedundantSemicolon",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Kotlin/Redundant constructs",
                      "index": 4,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "IntroduceWhenSubject",
                "shortDescription": {
                  "text": "'when' that can be simplified by introducing an argument"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "note",
                  "parameters": {
                    "suppressToolId": "IntroduceWhenSubject",
                    "ideaSeverity": "WEAK WARNING",
                    "qodanaSeverity": "Moderate"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Kotlin/Style issues",
                      "index": 3,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "DeprecatedCallableAddReplaceWith",
                "shortDescription": {
                  "text": "@Deprecated annotation without 'replaceWith' argument"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": true,
                  "level": "note",
                  "parameters": {
                    "suppressToolId": "DeprecatedCallableAddReplaceWith",
                    "ideaSeverity": "WEAK WARNING",
                    "qodanaSeverity": "Moderate"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Kotlin/Other problems",
                      "index": 41,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "ComplexRedundantLet",
                "shortDescription": {
                  "text": "Redundant argument-based 'let' call"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "note",
                  "parameters": {
                    "suppressToolId": "ComplexRedundantLet",
                    "ideaSeverity": "WEAK WARNING",
                    "qodanaSeverity": "Moderate"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Kotlin/Redundant constructs",
                      "index": 4,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "RemoveRedundantSpreadOperator",
                "shortDescription": {
                  "text": "Redundant spread operator"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "RemoveRedundantSpreadOperator",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Kotlin/Redundant constructs",
                      "index": 4,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "ProhibitJvmOverloadsOnConstructorsOfAnnotationClassesMigration",
                "shortDescription": {
                  "text": "'@JvmOverloads' annotation cannot be used on constructors of annotation classes since 1.4"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "error",
                  "parameters": {
                    "suppressToolId": "ProhibitJvmOverloadsOnConstructorsOfAnnotationClassesMigration",
                    "ideaSeverity": "ERROR",
                    "qodanaSeverity": "Critical"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Kotlin/Migration",
                      "index": 13,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "RemoveSetterParameterType",
                "shortDescription": {
                  "text": "Redundant setter parameter type"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "RemoveSetterParameterType",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Kotlin/Redundant constructs",
                      "index": 4,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "IfThenToElvis",
                "shortDescription": {
                  "text": "If-Then foldable to '?:'"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "note",
                  "parameters": {
                    "suppressToolId": "IfThenToElvis",
                    "ideaSeverity": "WEAK WARNING",
                    "qodanaSeverity": "Moderate"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Kotlin/Style issues",
                      "index": 3,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "ObjectPrivatePropertyName",
                "shortDescription": {
                  "text": "Object private property naming convention"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "note",
                  "parameters": {
                    "suppressToolId": "ObjectPrivatePropertyName",
                    "ideaSeverity": "WEAK WARNING",
                    "qodanaSeverity": "Moderate"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Kotlin/Naming conventions",
                      "index": 46,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "WrapUnaryOperator",
                "shortDescription": {
                  "text": "Ambiguous unary operator use with number constant"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": true,
                  "level": "note",
                  "parameters": {
                    "suppressToolId": "WrapUnaryOperator",
                    "ideaSeverity": "WEAK WARNING",
                    "qodanaSeverity": "Moderate"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Kotlin/Probable bugs",
                      "index": 21,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "ConflictingExtensionProperty",
                "shortDescription": {
                  "text": "Extension property conflicting with synthetic one"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": true,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "ConflictingExtensionProperty",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Kotlin/Probable bugs",
                      "index": 21,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "ReplaceJavaStaticMethodWithKotlinAnalog",
                "shortDescription": {
                  "text": "Java methods should be replaced with Kotlin analog"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "note",
                  "parameters": {
                    "suppressToolId": "ReplaceJavaStaticMethodWithKotlinAnalog",
                    "ideaSeverity": "WEAK WARNING",
                    "qodanaSeverity": "Moderate"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Kotlin/Style issues",
                      "index": 3,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "RemoveEmptyParenthesesFromLambdaCall",
                "shortDescription": {
                  "text": "Unnecessary parentheses in function call with lambda"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "note",
                  "parameters": {
                    "suppressToolId": "RemoveEmptyParenthesesFromLambdaCall",
                    "ideaSeverity": "WEAK WARNING",
                    "qodanaSeverity": "Moderate"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Kotlin/Redundant constructs",
                      "index": 4,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "RemoveExplicitSuperQualifier",
                "shortDescription": {
                  "text": "Unnecessary supertype qualification"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "note",
                  "parameters": {
                    "suppressToolId": "RemoveExplicitSuperQualifier",
                    "ideaSeverity": "WEAK WARNING",
                    "qodanaSeverity": "Moderate"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Kotlin/Redundant constructs",
                      "index": 4,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "RedundantExplicitType",
                "shortDescription": {
                  "text": "Obvious explicit type"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "RedundantExplicitType",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Kotlin/Redundant constructs",
                      "index": 4,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "SuspiciousVarProperty",
                "shortDescription": {
                  "text": "Suspicious 'var' property: its setter does not influence its getter result"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": true,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "SuspiciousVarProperty",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Kotlin/Probable bugs",
                      "index": 21,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "JavaCollectionsStaticMethod",
                "shortDescription": {
                  "text": "Java Collections static method call can be replaced with Kotlin stdlib"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "note",
                  "parameters": {
                    "suppressToolId": "JavaCollectionsStaticMethod",
                    "ideaSeverity": "WEAK WARNING",
                    "qodanaSeverity": "Moderate"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Kotlin/Style issues",
                      "index": 3,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "MoveVariableDeclarationIntoWhen",
                "shortDescription": {
                  "text": "Variable declaration could be moved inside 'when'"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "note",
                  "parameters": {
                    "suppressToolId": "MoveVariableDeclarationIntoWhen",
                    "ideaSeverity": "WEAK WARNING",
                    "qodanaSeverity": "Moderate"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Kotlin/Style issues",
                      "index": 3,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "RemoveEmptyParenthesesFromAnnotationEntry",
                "shortDescription": {
                  "text": "Remove unnecessary parentheses"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "note",
                  "parameters": {
                    "suppressToolId": "RemoveEmptyParenthesesFromAnnotationEntry",
                    "ideaSeverity": "WEAK WARNING",
                    "qodanaSeverity": "Moderate"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Kotlin/Style issues",
                      "index": 3,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "SimplifiableCallChain",
                "shortDescription": {
                  "text": "Call chain on collection type can be simplified"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "note",
                  "parameters": {
                    "suppressToolId": "SimplifiableCallChain",
                    "ideaSeverity": "WEAK WARNING",
                    "qodanaSeverity": "Moderate"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Kotlin/Style issues",
                      "index": 3,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "ReplaceCallWithBinaryOperator",
                "shortDescription": {
                  "text": "Can be replaced with binary operator"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "note",
                  "parameters": {
                    "suppressToolId": "ReplaceCallWithBinaryOperator",
                    "ideaSeverity": "WEAK WARNING",
                    "qodanaSeverity": "Moderate"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Kotlin/Style issues",
                      "index": 3,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "ReplacePrintlnWithLogging",
                "shortDescription": {
                  "text": "Call to 'print()' or 'println()'"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "ReplacePrintlnWithLogging",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Kotlin/Other problems",
                      "index": 41,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "UnusedUnaryOperator",
                "shortDescription": {
                  "text": "Unused unary operator"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": true,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "UnusedUnaryOperator",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Kotlin/Probable bugs",
                      "index": 21,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "ClassName",
                "shortDescription": {
                  "text": "Class naming convention"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "note",
                  "parameters": {
                    "suppressToolId": "ClassName",
                    "ideaSeverity": "WEAK WARNING",
                    "qodanaSeverity": "Moderate"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Kotlin/Naming conventions",
                      "index": 46,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "RemoveEmptyPrimaryConstructor",
                "shortDescription": {
                  "text": "Redundant empty primary constructor"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "note",
                  "parameters": {
                    "suppressToolId": "RemoveEmptyPrimaryConstructor",
                    "ideaSeverity": "WEAK WARNING",
                    "qodanaSeverity": "Moderate"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Kotlin/Redundant constructs",
                      "index": 4,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "RemoveEmptySecondaryConstructorBody",
                "shortDescription": {
                  "text": "Redundant constructor body"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "note",
                  "parameters": {
                    "suppressToolId": "RemoveEmptySecondaryConstructorBody",
                    "ideaSeverity": "WEAK WARNING",
                    "qodanaSeverity": "Moderate"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Kotlin/Redundant constructs",
                      "index": 4,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "FloatingPointLiteralPrecision",
                "shortDescription": {
                  "text": "Floating-point literal exceeds the available precision"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": true,
                  "level": "note",
                  "parameters": {
                    "suppressToolId": "FloatingPointLiteralPrecision",
                    "ideaSeverity": "WEAK WARNING",
                    "qodanaSeverity": "Moderate"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Kotlin/Other problems",
                      "index": 41,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "ConvertPairConstructorToToFunction",
                "shortDescription": {
                  "text": "Convert Pair constructor to 'to' function"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "note",
                  "parameters": {
                    "suppressToolId": "ConvertPairConstructorToToFunction",
                    "ideaSeverity": "INFORMATION",
                    "qodanaSeverity": "Info"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Kotlin/Style issues",
                      "index": 3,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "RedundantGetter",
                "shortDescription": {
                  "text": "Redundant property getter"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "note",
                  "parameters": {
                    "suppressToolId": "RedundantGetter",
                    "ideaSeverity": "WEAK WARNING",
                    "qodanaSeverity": "Moderate"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Kotlin/Redundant constructs",
                      "index": 4,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "RedundantIf",
                "shortDescription": {
                  "text": "Redundant 'if' statement"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "note",
                  "parameters": {
                    "suppressToolId": "RedundantIf",
                    "ideaSeverity": "WEAK WARNING",
                    "qodanaSeverity": "Moderate"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Kotlin/Redundant constructs",
                      "index": 4,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "KDocMissingDocumentation",
                "shortDescription": {
                  "text": "Missing KDoc comments for public declarations"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "KDocMissingDocumentation",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Kotlin/Other problems",
                      "index": 41,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "RemoveExplicitTypeArguments",
                "shortDescription": {
                  "text": "Unnecessary type argument"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "note",
                  "parameters": {
                    "suppressToolId": "RemoveExplicitTypeArguments",
                    "ideaSeverity": "WEAK WARNING",
                    "qodanaSeverity": "Moderate"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Kotlin/Redundant constructs",
                      "index": 4,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "RedundantVisibilityModifier",
                "shortDescription": {
                  "text": "Redundant visibility modifier"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "RedundantVisibilityModifier",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Kotlin/Redundant constructs",
                      "index": 4,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "EnumValuesSoftDeprecateInJava",
                "shortDescription": {
                  "text": "'Enum.values()' is recommended to be replaced by 'Enum.getEntries()' since Kotlin 1.9"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": true,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "EnumValuesSoftDeprecateInJava",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Kotlin/Other problems",
                      "index": 41,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "UsePropertyAccessSyntax",
                "shortDescription": {
                  "text": "Accessor call that can be replaced with property access syntax"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "note",
                  "parameters": {
                    "suppressToolId": "UsePropertyAccessSyntax",
                    "ideaSeverity": "WEAK WARNING",
                    "qodanaSeverity": "Moderate"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Kotlin/Style issues",
                      "index": 3,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "UseExpressionBody",
                "shortDescription": {
                  "text": "Expression body syntax is preferable here"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "note",
                  "parameters": {
                    "suppressToolId": "UseExpressionBody",
                    "ideaSeverity": "INFORMATION",
                    "qodanaSeverity": "Info"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Kotlin/Style issues",
                      "index": 3,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "MapGetWithNotNullAssertionOperator",
                "shortDescription": {
                  "text": "'map.get()' with not-null assertion operator (!!)"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "note",
                  "parameters": {
                    "suppressToolId": "MapGetWithNotNullAssertionOperator",
                    "ideaSeverity": "INFORMATION",
                    "qodanaSeverity": "Info"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Kotlin/Style issues",
                      "index": 3,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "SortModifiers",
                "shortDescription": {
                  "text": "Non-canonical modifier order"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "note",
                  "parameters": {
                    "suppressToolId": "SortModifiers",
                    "ideaSeverity": "WEAK WARNING",
                    "qodanaSeverity": "Moderate"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Kotlin/Style issues",
                      "index": 3,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "EnumEntryName",
                "shortDescription": {
                  "text": "Enum entry naming convention"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "note",
                  "parameters": {
                    "suppressToolId": "EnumEntryName",
                    "ideaSeverity": "WEAK WARNING",
                    "qodanaSeverity": "Moderate"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Kotlin/Naming conventions",
                      "index": 46,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "ReplaceSubstringWithDropLast",
                "shortDescription": {
                  "text": "'substring' call should be replaced with 'dropLast' call"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "note",
                  "parameters": {
                    "suppressToolId": "ReplaceSubstringWithDropLast",
                    "ideaSeverity": "INFORMATION",
                    "qodanaSeverity": "Info"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Kotlin/Style issues",
                      "index": 3,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "SetterBackingFieldAssignment",
                "shortDescription": {
                  "text": "Existing backing field without assignment"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": true,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "SetterBackingFieldAssignment",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Kotlin/Probable bugs",
                      "index": 21,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "CopyWithoutNamedArguments",
                "shortDescription": {
                  "text": "'copy' method of data class is called without named arguments"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "note",
                  "parameters": {
                    "suppressToolId": "CopyWithoutNamedArguments",
                    "ideaSeverity": "WEAK WARNING",
                    "qodanaSeverity": "Moderate"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Kotlin/Style issues",
                      "index": 3,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "RedundantConstructorKeyword",
                "shortDescription": {
                  "text": "Redundant 'constructor' keyword"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "note",
                  "parameters": {
                    "suppressToolId": "RedundantConstructorKeyword",
                    "ideaSeverity": "WEAK WARNING",
                    "qodanaSeverity": "Moderate"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Kotlin/Redundant constructs",
                      "index": 4,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "KotlinDeprecation",
                "shortDescription": {
                  "text": "Usage of redundant or deprecated syntax or deprecated symbols"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "KotlinDeprecation",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Kotlin/Migration",
                      "index": 13,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "ReplaceSubstringWithTake",
                "shortDescription": {
                  "text": "'substring' call should be replaced with 'take' call"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "note",
                  "parameters": {
                    "suppressToolId": "ReplaceSubstringWithTake",
                    "ideaSeverity": "INFORMATION",
                    "qodanaSeverity": "Info"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Kotlin/Style issues",
                      "index": 3,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "ReplaceRangeToWithRangeUntil",
                "shortDescription": {
                  "text": "'rangeTo' or the '..' call should be replaced with '..<'"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "note",
                  "parameters": {
                    "suppressToolId": "ReplaceRangeToWithRangeUntil",
                    "ideaSeverity": "WEAK WARNING",
                    "qodanaSeverity": "Moderate"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Kotlin/Style issues",
                      "index": 3,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "ConvertCallChainIntoSequence",
                "shortDescription": {
                  "text": "Call chain on collection could be converted into 'Sequence' to improve performance"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "note",
                  "parameters": {
                    "suppressToolId": "ConvertCallChainIntoSequence",
                    "ideaSeverity": "WEAK WARNING",
                    "qodanaSeverity": "Moderate"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Kotlin/Style issues",
                      "index": 3,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "AddOperatorModifier",
                "shortDescription": {
                  "text": "Function should have 'operator' modifier"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "note",
                  "parameters": {
                    "suppressToolId": "AddOperatorModifier",
                    "ideaSeverity": "INFORMATION",
                    "qodanaSeverity": "Info"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Kotlin/Style issues",
                      "index": 3,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "MayBeConstant",
                "shortDescription": {
                  "text": "Might be 'const'"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "note",
                  "parameters": {
                    "suppressToolId": "MayBeConstant",
                    "ideaSeverity": "WEAK WARNING",
                    "qodanaSeverity": "Moderate"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Kotlin/Style issues",
                      "index": 3,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "ReplaceIsEmptyWithIfEmpty",
                "shortDescription": {
                  "text": "'if' condition can be replaced with lambda call"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "note",
                  "parameters": {
                    "suppressToolId": "ReplaceIsEmptyWithIfEmpty",
                    "ideaSeverity": "WEAK WARNING",
                    "qodanaSeverity": "Moderate"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Kotlin/Style issues",
                      "index": 3,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "ReplaceWithImportAlias",
                "shortDescription": {
                  "text": "Fully qualified name can be replaced with existing import alias"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "note",
                  "parameters": {
                    "suppressToolId": "ReplaceWithImportAlias",
                    "ideaSeverity": "INFORMATION",
                    "qodanaSeverity": "Info"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Kotlin/Style issues",
                      "index": 3,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "SimplifyBooleanWithConstants",
                "shortDescription": {
                  "text": "Boolean expression can be simplified"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "note",
                  "parameters": {
                    "suppressToolId": "SimplifyBooleanWithConstants",
                    "ideaSeverity": "WEAK WARNING",
                    "qodanaSeverity": "Moderate"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Kotlin/Style issues",
                      "index": 3,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "OverrideDeprecatedMigration",
                "shortDescription": {
                  "text": "Do not propagate method deprecation through overrides since 1.9"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "error",
                  "parameters": {
                    "suppressToolId": "OverrideDeprecatedMigration",
                    "ideaSeverity": "ERROR",
                    "qodanaSeverity": "Critical"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Kotlin/Migration",
                      "index": 13,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "RedundantModalityModifier",
                "shortDescription": {
                  "text": "Redundant modality modifier"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "RedundantModalityModifier",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Kotlin/Redundant constructs",
                      "index": 4,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "SimplifyAssertNotNull",
                "shortDescription": {
                  "text": "'assert' call can be replaced with '!!' or '?:'"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "note",
                  "parameters": {
                    "suppressToolId": "SimplifyAssertNotNull",
                    "ideaSeverity": "INFORMATION",
                    "qodanaSeverity": "Info"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Kotlin/Style issues",
                      "index": 3,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "ConvertNaNEquality",
                "shortDescription": {
                  "text": "Convert equality check with 'NaN' to 'isNaN' call"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": true,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "ConvertNaNEquality",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Kotlin/Probable bugs",
                      "index": 21,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "ReplaceManualRangeWithIndicesCalls",
                "shortDescription": {
                  "text": "Range can be converted to indices or iteration"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "note",
                  "parameters": {
                    "suppressToolId": "ReplaceManualRangeWithIndicesCalls",
                    "ideaSeverity": "WEAK WARNING",
                    "qodanaSeverity": "Moderate"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Kotlin/Style issues",
                      "index": 3,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "KotlinLoggerInitializedWithForeignClass",
                "shortDescription": {
                  "text": "Logger initialized with foreign class"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "KotlinLoggerInitializedWithForeignClass",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Kotlin/Logging",
                      "index": 143,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "RedundantAsSequence",
                "shortDescription": {
                  "text": "Redundant 'asSequence' call"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "note",
                  "parameters": {
                    "suppressToolId": "RedundantAsSequence",
                    "ideaSeverity": "WEAK WARNING",
                    "qodanaSeverity": "Moderate"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Kotlin/Style issues",
                      "index": 3,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "RemoveToStringInStringTemplate",
                "shortDescription": {
                  "text": "Redundant call to 'toString()' in string template"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "note",
                  "parameters": {
                    "suppressToolId": "RemoveToStringInStringTemplate",
                    "ideaSeverity": "WEAK WARNING",
                    "qodanaSeverity": "Moderate"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Kotlin/Redundant constructs",
                      "index": 4,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "KotlinUnusedImport",
                "shortDescription": {
                  "text": "Unused import directive"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "UnusedImport",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Kotlin/Redundant constructs",
                      "index": 4,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "CanBePrimaryConstructorProperty",
                "shortDescription": {
                  "text": "Property is explicitly assigned to constructor parameter"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "CanBePrimaryConstructorProperty",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Kotlin/Redundant constructs",
                      "index": 4,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "JavaMapForEach",
                "shortDescription": {
                  "text": "Java Map.forEach method call should be replaced with Kotlin's forEach"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "note",
                  "parameters": {
                    "suppressToolId": "JavaMapForEach",
                    "ideaSeverity": "WEAK WARNING",
                    "qodanaSeverity": "Moderate"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Kotlin/Style issues",
                      "index": 3,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "RedundantObjectTypeCheck",
                "shortDescription": {
                  "text": "Non-idiomatic 'is' type check for an object"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "note",
                  "parameters": {
                    "suppressToolId": "RedundantObjectTypeCheck",
                    "ideaSeverity": "INFORMATION",
                    "qodanaSeverity": "Info"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Kotlin/Style issues",
                      "index": 3,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "SuspendFunctionOnCoroutineScope",
                "shortDescription": {
                  "text": "Ambiguous coroutineContext due to CoroutineScope receiver of suspend function"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": true,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "SuspendFunctionOnCoroutineScope",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Kotlin/Probable bugs",
                      "index": 21,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "DifferentMavenStdlibVersion",
                "shortDescription": {
                  "text": "Library and maven plugin versions are different"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": true,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "DifferentMavenStdlibVersion",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Kotlin",
                      "index": 2,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "ImplicitNullableNothingType",
                "shortDescription": {
                  "text": "Implicit 'Nothing?' type"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": true,
                  "level": "note",
                  "parameters": {
                    "suppressToolId": "ImplicitNullableNothingType",
                    "ideaSeverity": "WEAK WARNING",
                    "qodanaSeverity": "Moderate"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Kotlin/Probable bugs",
                      "index": 21,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "ReplaceAssociateFunction",
                "shortDescription": {
                  "text": "'associate' can be replaced with 'associateBy' or 'associateWith'"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "note",
                  "parameters": {
                    "suppressToolId": "ReplaceAssociateFunction",
                    "ideaSeverity": "WEAK WARNING",
                    "qodanaSeverity": "Moderate"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Kotlin/Style issues",
                      "index": 3,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "ObsoleteExperimentalCoroutines",
                "shortDescription": {
                  "text": "Experimental coroutines usages are deprecated since 1.3"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "error",
                  "parameters": {
                    "suppressToolId": "ObsoleteExperimentalCoroutines",
                    "ideaSeverity": "ERROR",
                    "qodanaSeverity": "Critical"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Kotlin/Migration",
                      "index": 13,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "LiftReturnOrAssignment",
                "shortDescription": {
                  "text": "Return or assignment can be lifted out"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "note",
                  "parameters": {
                    "suppressToolId": "LiftReturnOrAssignment",
                    "ideaSeverity": "WEAK WARNING",
                    "qodanaSeverity": "Moderate"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Kotlin/Style issues",
                      "index": 3,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "SimplifyWhenWithBooleanConstantCondition",
                "shortDescription": {
                  "text": "Simplifiable 'when'"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "note",
                  "parameters": {
                    "suppressToolId": "SimplifyWhenWithBooleanConstantCondition",
                    "ideaSeverity": "WEAK WARNING",
                    "qodanaSeverity": "Moderate"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Kotlin/Redundant constructs",
                      "index": 4,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "KotlinConstantConditions",
                "shortDescription": {
                  "text": "Constant conditions"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": true,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "KotlinConstantConditions",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Kotlin/Probable bugs",
                      "index": 21,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "ForEachParameterNotUsed",
                "shortDescription": {
                  "text": "Iterated elements are not used in forEach"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": true,
                  "level": "note",
                  "parameters": {
                    "suppressToolId": "ForEachParameterNotUsed",
                    "ideaSeverity": "WEAK WARNING",
                    "qodanaSeverity": "Moderate"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Kotlin/Probable bugs",
                      "index": 21,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "LeakingThis",
                "shortDescription": {
                  "text": "Leaking 'this' in constructor"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": true,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "LeakingThis",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Kotlin/Probable bugs",
                      "index": 21,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "AddVarianceModifier",
                "shortDescription": {
                  "text": "Type parameter can have 'in' or 'out' variance"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "note",
                  "parameters": {
                    "suppressToolId": "AddVarianceModifier",
                    "ideaSeverity": "INFORMATION",
                    "qodanaSeverity": "Info"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Kotlin/Style issues",
                      "index": 3,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "RemoveForLoopIndices",
                "shortDescription": {
                  "text": "Unused loop index"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "RemoveForLoopIndices",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Kotlin/Redundant constructs",
                      "index": 4,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "RedundantSuspendModifier",
                "shortDescription": {
                  "text": "Redundant 'suspend' modifier"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "RedundantSuspendModifier",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Kotlin/Redundant constructs",
                      "index": 4,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "SuspiciousAsDynamic",
                "shortDescription": {
                  "text": "Suspicious 'asDynamic' member invocation"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "note",
                  "parameters": {
                    "suppressToolId": "SuspiciousAsDynamic",
                    "ideaSeverity": "WEAK WARNING",
                    "qodanaSeverity": "Moderate"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Kotlin/Style issues",
                      "index": 3,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "FilterIsInstanceCallWithClassLiteralArgument",
                "shortDescription": {
                  "text": "'filterIsInstance' call with a class literal argument"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "note",
                  "parameters": {
                    "suppressToolId": "FilterIsInstanceCallWithClassLiteralArgument",
                    "ideaSeverity": "WEAK WARNING",
                    "qodanaSeverity": "Moderate"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Kotlin/Style issues",
                      "index": 3,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "FromClosedRangeMigration",
                "shortDescription": {
                  "text": "MIN_VALUE step in fromClosedRange() since 1.3"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "note",
                  "parameters": {
                    "suppressToolId": "FromClosedRangeMigration",
                    "ideaSeverity": "WEAK WARNING",
                    "qodanaSeverity": "Moderate"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Kotlin/Migration",
                      "index": 13,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "RemoveRedundantBackticks",
                "shortDescription": {
                  "text": "Redundant backticks"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "RemoveRedundantBackticks",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Kotlin/Redundant constructs",
                      "index": 4,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "ReplaceReadLineWithReadln",
                "shortDescription": {
                  "text": "'readLine' can be replaced with 'readln' or 'readlnOrNull'"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "note",
                  "parameters": {
                    "suppressToolId": "ReplaceReadLineWithReadln",
                    "ideaSeverity": "WEAK WARNING",
                    "qodanaSeverity": "Moderate"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Kotlin/Style issues",
                      "index": 3,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "SimplifyNestedEachInScopeFunction",
                "shortDescription": {
                  "text": "Scope function with nested forEach can be simplified"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "note",
                  "parameters": {
                    "suppressToolId": "SimplifyNestedEachInScopeFunction",
                    "ideaSeverity": "WEAK WARNING",
                    "qodanaSeverity": "Moderate"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Kotlin/Style issues",
                      "index": 3,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "UnsafeCastFromDynamic",
                "shortDescription": {
                  "text": "Implicit (unsafe) cast from dynamic type"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": true,
                  "level": "note",
                  "parameters": {
                    "suppressToolId": "UnsafeCastFromDynamic",
                    "ideaSeverity": "WEAK WARNING",
                    "qodanaSeverity": "Moderate"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Kotlin/Probable bugs",
                      "index": 21,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "PublicApiImplicitType",
                "shortDescription": {
                  "text": "Public API declaration with implicit return type"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "note",
                  "parameters": {
                    "suppressToolId": "PublicApiImplicitType",
                    "ideaSeverity": "WEAK WARNING",
                    "qodanaSeverity": "Moderate"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Kotlin/Other problems",
                      "index": 41,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "DeclaringClassMigration",
                "shortDescription": {
                  "text": "Deprecated 'Enum.declaringClass' property"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "DeclaringClassMigration",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Kotlin/Migration",
                      "index": 13,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "ReplaceMapIndexedWithListGenerator",
                "shortDescription": {
                  "text": "Replace 'mapIndexed' with List generator"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "note",
                  "parameters": {
                    "suppressToolId": "ReplaceMapIndexedWithListGenerator",
                    "ideaSeverity": "WEAK WARNING",
                    "qodanaSeverity": "Moderate"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Kotlin/Style issues",
                      "index": 3,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "ControlFlowWithEmptyBody",
                "shortDescription": {
                  "text": "Control flow with empty body"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": true,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "ControlFlowWithEmptyBody",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Kotlin/Probable bugs",
                      "index": 21,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "LoopToCallChain",
                "shortDescription": {
                  "text": "Loop can be replaced with stdlib operations"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "note",
                  "parameters": {
                    "suppressToolId": "LoopToCallChain",
                    "ideaSeverity": "INFORMATION",
                    "qodanaSeverity": "Info"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Kotlin/Style issues",
                      "index": 3,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "RemoveEmptyClassBody",
                "shortDescription": {
                  "text": "Replace empty class body"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "note",
                  "parameters": {
                    "suppressToolId": "RemoveEmptyClassBody",
                    "ideaSeverity": "WEAK WARNING",
                    "qodanaSeverity": "Moderate"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Kotlin/Redundant constructs",
                      "index": 4,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "CanBeParameter",
                "shortDescription": {
                  "text": "Constructor parameter is never used as a property"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "CanBeParameter",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Kotlin/Redundant constructs",
                      "index": 4,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "RedundantReturnLabel",
                "shortDescription": {
                  "text": "Redundant 'return' label"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "note",
                  "parameters": {
                    "suppressToolId": "RedundantReturnLabel",
                    "ideaSeverity": "WEAK WARNING",
                    "qodanaSeverity": "Moderate"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Kotlin/Redundant constructs",
                      "index": 4,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "PackageName",
                "shortDescription": {
                  "text": "Package naming convention"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "note",
                  "parameters": {
                    "suppressToolId": "PackageName",
                    "ideaSeverity": "WEAK WARNING",
                    "qodanaSeverity": "Moderate"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Kotlin/Naming conventions",
                      "index": 46,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "ProhibitUseSiteTargetAnnotationsOnSuperTypesMigration",
                "shortDescription": {
                  "text": "Meaningless annotations targets on superclass"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "error",
                  "parameters": {
                    "suppressToolId": "ProhibitUseSiteTargetAnnotationsOnSuperTypesMigration",
                    "ideaSeverity": "ERROR",
                    "qodanaSeverity": "Critical"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Kotlin/Migration",
                      "index": 13,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "ReplaceWithEnumMap",
                "shortDescription": {
                  "text": "'HashMap' can be replaced with 'EnumMap'"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": true,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "ReplaceWithEnumMap",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Kotlin/Other problems",
                      "index": 41,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "EnumValuesSoftDeprecate",
                "shortDescription": {
                  "text": "'Enum.values()' is recommended to be replaced by 'Enum.entries' since 1.9"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": true,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "EnumValuesSoftDeprecate",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Kotlin/Other problems",
                      "index": 41,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "SuspiciousCollectionReassignment",
                "shortDescription": {
                  "text": "Augmented assignment creates a new collection under the hood"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": true,
                  "level": "note",
                  "parameters": {
                    "suppressToolId": "SuspiciousCollectionReassignment",
                    "ideaSeverity": "WEAK WARNING",
                    "qodanaSeverity": "Moderate"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Kotlin/Probable bugs",
                      "index": 21,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "RedundantNotNullExtensionReceiverOfInline",
                "shortDescription": {
                  "text": "'inline fun' extension receiver can be explicitly nullable until Kotlin 1.2"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "note",
                  "parameters": {
                    "suppressToolId": "RedundantNotNullExtensionReceiverOfInline",
                    "ideaSeverity": "INFORMATION",
                    "qodanaSeverity": "Info"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Kotlin/Java interop issues",
                      "index": 50,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "RedundantElvisReturnNull",
                "shortDescription": {
                  "text": "Redundant '?: return null'"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "RedundantElvisReturnNull",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Kotlin/Redundant constructs",
                      "index": 4,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "PrivatePropertyName",
                "shortDescription": {
                  "text": "Private property naming convention"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "note",
                  "parameters": {
                    "suppressToolId": "PrivatePropertyName",
                    "ideaSeverity": "WEAK WARNING",
                    "qodanaSeverity": "Moderate"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Kotlin/Naming conventions",
                      "index": 46,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "KotlinJvmAnnotationInJava",
                "shortDescription": {
                  "text": "Kotlin JVM annotation in Java"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": true,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "KotlinJvmAnnotationInJava",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Kotlin/Java interop issues",
                      "index": 50,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "ObsoleteKotlinJsPackages",
                "shortDescription": {
                  "text": "'kotlin.browser' and 'kotlin.dom' packages are deprecated since 1.4"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "error",
                  "parameters": {
                    "suppressToolId": "ObsoleteKotlinJsPackages",
                    "ideaSeverity": "ERROR",
                    "qodanaSeverity": "Critical"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Kotlin/Migration",
                      "index": 13,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "CascadeIf",
                "shortDescription": {
                  "text": "Cascade 'if' can be replaced with 'when'"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "note",
                  "parameters": {
                    "suppressToolId": "CascadeIf",
                    "ideaSeverity": "WEAK WARNING",
                    "qodanaSeverity": "Moderate"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Kotlin/Style issues",
                      "index": 3,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "EmptyRange",
                "shortDescription": {
                  "text": "Range with start greater than endInclusive is empty"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": true,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "EmptyRange",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Kotlin/Probable bugs",
                      "index": 21,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "NonExternalClassifierExtendingStateOrProps",
                "shortDescription": {
                  "text": "Non-external classifier extending State or Props"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": true,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "NonExternalClassifierExtendingStateOrProps",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Kotlin/React/Probable bugs",
                      "index": 146,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "OptionalExpectation",
                "shortDescription": {
                  "text": "Optionally expected annotation has no actual annotation"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "note",
                  "parameters": {
                    "suppressToolId": "OptionalExpectation",
                    "ideaSeverity": "INFORMATION",
                    "qodanaSeverity": "Info"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Kotlin/Style issues",
                      "index": 3,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "DestructuringWrongName",
                "shortDescription": {
                  "text": "Variable in destructuring declaration uses name of a wrong data class property"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": true,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "DestructuringWrongName",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Kotlin/Probable bugs",
                      "index": 21,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "IfThenToSafeAccess",
                "shortDescription": {
                  "text": "If-Then foldable to '?.'"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "note",
                  "parameters": {
                    "suppressToolId": "IfThenToSafeAccess",
                    "ideaSeverity": "WEAK WARNING",
                    "qodanaSeverity": "Moderate"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Kotlin/Style issues",
                      "index": 3,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "RestrictReturnStatementTargetMigration",
                "shortDescription": {
                  "text": "Target label does not denote a function since 1.4"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "error",
                  "parameters": {
                    "suppressToolId": "RestrictReturnStatementTargetMigration",
                    "ideaSeverity": "ERROR",
                    "qodanaSeverity": "Critical"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Kotlin/Migration",
                      "index": 13,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "MigrateDiagnosticSuppression",
                "shortDescription": {
                  "text": "Diagnostic name should be replaced"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": true,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "MigrateDiagnosticSuppression",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Kotlin/Other problems",
                      "index": 41,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "NonNullableBooleanPropertyInExternalInterface",
                "shortDescription": {
                  "text": "External interface contains non-nullable boolean property"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "NonNullableBooleanPropertyInExternalInterface",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Kotlin/Probable bugs",
                      "index": 21,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "DeferredResultUnused",
                "shortDescription": {
                  "text": "'@Deferred' result is unused"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": true,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "DeferredResultUnused",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Kotlin/Probable bugs",
                      "index": 21,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "SelfReferenceConstructorParameter",
                "shortDescription": {
                  "text": "Constructor can never be complete"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": true,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "SelfReferenceConstructorParameter",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Kotlin/Probable bugs",
                      "index": 21,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "MainFunctionReturnUnit",
                "shortDescription": {
                  "text": "Main function should return 'Unit'"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": true,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "MainFunctionReturnUnit",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Kotlin/Probable bugs",
                      "index": 21,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "SuspiciousCallableReferenceInLambda",
                "shortDescription": {
                  "text": "Suspicious callable reference used as lambda result"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": true,
                  "level": "note",
                  "parameters": {
                    "suppressToolId": "SuspiciousCallableReferenceInLambda",
                    "ideaSeverity": "WEAK WARNING",
                    "qodanaSeverity": "Moderate"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Kotlin/Probable bugs",
                      "index": 21,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "ConvertSecondaryConstructorToPrimary",
                "shortDescription": {
                  "text": "Convert to primary constructor"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "ConvertSecondaryConstructorToPrimary",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Kotlin/Style issues",
                      "index": 3,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "ReplaceGetOrSet",
                "shortDescription": {
                  "text": "Explicit 'get' or 'set' call"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "note",
                  "parameters": {
                    "suppressToolId": "ReplaceGetOrSet",
                    "ideaSeverity": "WEAK WARNING",
                    "qodanaSeverity": "Moderate"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Kotlin/Style issues",
                      "index": 3,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "ProhibitRepeatedUseSiteTargetAnnotationsMigration",
                "shortDescription": {
                  "text": "Repeated annotation which is not marked as '@Repeatable'"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "error",
                  "parameters": {
                    "suppressToolId": "ProhibitRepeatedUseSiteTargetAnnotationsMigration",
                    "ideaSeverity": "ERROR",
                    "qodanaSeverity": "Critical"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Kotlin/Migration",
                      "index": 13,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "Destructure",
                "shortDescription": {
                  "text": "Use destructuring declaration"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "note",
                  "parameters": {
                    "suppressToolId": "Destructure",
                    "ideaSeverity": "WEAK WARNING",
                    "qodanaSeverity": "Moderate"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Kotlin/Style issues",
                      "index": 3,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "UnusedReceiverParameter",
                "shortDescription": {
                  "text": "Unused receiver parameter"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "UnusedReceiverParameter",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Kotlin/Redundant constructs",
                      "index": 4,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "ConvertTryFinallyToUseCall",
                "shortDescription": {
                  "text": "Convert try / finally to use() call"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "note",
                  "parameters": {
                    "suppressToolId": "ConvertTryFinallyToUseCall",
                    "ideaSeverity": "WEAK WARNING",
                    "qodanaSeverity": "Moderate"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Kotlin/Style issues",
                      "index": 3,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "KotlinRedundantOverride",
                "shortDescription": {
                  "text": "Redundant overriding method"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "note",
                  "parameters": {
                    "suppressToolId": "RedundantOverride",
                    "ideaSeverity": "WEAK WARNING",
                    "qodanaSeverity": "Moderate"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Kotlin/Redundant constructs",
                      "index": 4,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "RunBlocking",
                "shortDescription": {
                  "text": "RunBlocking in coroutine"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "RunBlocking",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Kotlin/Coroutine inspections",
                      "index": 148,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "ReplaceArrayOfWithLiteral",
                "shortDescription": {
                  "text": "'arrayOf' call can be replaced with array literal [...]"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "note",
                  "parameters": {
                    "suppressToolId": "ReplaceArrayOfWithLiteral",
                    "ideaSeverity": "WEAK WARNING",
                    "qodanaSeverity": "Moderate"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Kotlin/Style issues",
                      "index": 3,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "ReplaceToWithInfixForm",
                "shortDescription": {
                  "text": "'to' call should be replaced with infix form"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "note",
                  "parameters": {
                    "suppressToolId": "ReplaceToWithInfixForm",
                    "ideaSeverity": "WEAK WARNING",
                    "qodanaSeverity": "Moderate"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Kotlin/Style issues",
                      "index": 3,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "ConstPropertyName",
                "shortDescription": {
                  "text": "Const property naming convention"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "note",
                  "parameters": {
                    "suppressToolId": "ConstPropertyName",
                    "ideaSeverity": "WEAK WARNING",
                    "qodanaSeverity": "Moderate"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Kotlin/Naming conventions",
                      "index": 46,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "RedundantNullableReturnType",
                "shortDescription": {
                  "text": "Redundant nullable return type"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "RedundantNullableReturnType",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Kotlin/Redundant constructs",
                      "index": 4,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "UselessCallOnNotNull",
                "shortDescription": {
                  "text": "Useless call on not-null type"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": true,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "UselessCallOnNotNull",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Kotlin/Probable bugs",
                      "index": 21,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "EqualsOrHashCode",
                "shortDescription": {
                  "text": "'equals()' and 'hashCode()' not paired"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": true,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "EqualsOrHashCode",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Kotlin/Probable bugs",
                      "index": 21,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              }
            ],
            "language": "en-US",
            "contents": [
              "localizedData",
              "nonLocalizedData"
            ],
            "isComprehensive": false
          },
          {
            "name": "org.jetbrains.android",
            "version": "242.20224.419",
            "rules": [
              {
                "id": "AndroidLintJcenterRepositoryObsolete",
                "shortDescription": {
                  "text": "JCenter Maven repository is read-only"
                },
                "fullDescription": {
                  "text": "JCenter Maven repository is read-only The JCenter Maven repository is no longer accepting submissions of Maven artifacts since 31st March 2021. Ensure that the project is configured to search in repositories with the latest versions of its dependencies. Issue id: JcenterRepositoryObsolete https://developer.android.com/r/tools/jcenter-end-of-service",
                  "markdown": "JCenter Maven repository is read-only  \n\nThe JCenter Maven repository is no longer accepting submissions of Maven artifacts since 31st March 2021. Ensure that the project is configured to search in repositories with the latest versions of its dependencies.  \n\nIssue id: JcenterRepositoryObsolete  \n\n<https://developer.android.com/r/tools/jcenter-end-of-service>"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "AndroidLintJcenterRepositoryObsolete",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Android Lint: Correctness",
                      "index": 5,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "AndroidLintNotificationId0",
                "shortDescription": {
                  "text": "Notification Id is 0"
                },
                "fullDescription": {
                  "text": "Notification Id is 0 The notification id cannot be 0; using 0 here can make the service not run in the foreground. Issue id: NotificationId0",
                  "markdown": "Notification Id is 0  \n\nThe notification id **cannot** be 0; using 0 here can make the service not run in the foreground.  \n\nIssue id: NotificationId0"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "error",
                  "parameters": {
                    "suppressToolId": "AndroidLintNotificationId0",
                    "ideaSeverity": "ERROR",
                    "qodanaSeverity": "Critical"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Android Lint: Correctness",
                      "index": 5,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "AndroidLintNotifyDataSetChanged",
                "shortDescription": {
                  "text": "Invalidating All RecyclerView Data"
                },
                "fullDescription": {
                  "text": "Invalidating All RecyclerView Data The 'RecyclerView' adapter's 'onNotifyDataSetChanged' method does not specify what about the data set has changed, forcing any observers to assume that all existing items and structure may no longer be valid. `LayoutManager`s will be forced to fully rebind and relayout all visible views. Issue id: NotifyDataSetChanged",
                  "markdown": "Invalidating All RecyclerView Data  \n\nThe `RecyclerView` adapter's `onNotifyDataSetChanged` method does not specify what about the data set has changed, forcing any observers to assume that all existing items and structure may no longer be valid. \\`LayoutManager\\`s will be forced to fully rebind and relayout all visible views.  \n\nIssue id: NotifyDataSetChanged"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "AndroidLintNotifyDataSetChanged",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Android Lint: Performance",
                      "index": 14,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "AndroidLintGradleDeprecatedConfiguration",
                "shortDescription": {
                  "text": "Deprecated Gradle Configuration"
                },
                "fullDescription": {
                  "text": "Deprecated Gradle Configuration Some Gradle configurations have been deprecated since Android Gradle Plugin 3.0.0 and will be removed in a future version of the Android Gradle Plugin. Issue id: GradleDeprecatedConfiguration https://d.android.com/r/tools/update-dependency-configurations",
                  "markdown": "Deprecated Gradle Configuration  \n\nSome Gradle configurations have been deprecated since Android Gradle Plugin 3.0.0 and will be removed in a future version of the Android Gradle Plugin.  \n\nIssue id: GradleDeprecatedConfiguration  \n\n<https://d.android.com/r/tools/update-dependency-configurations>"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "AndroidLintGradleDeprecatedConfiguration",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Android Lint: Correctness",
                      "index": 5,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "AndroidLintWrongViewCast",
                "shortDescription": {
                  "text": "Mismatched view type"
                },
                "fullDescription": {
                  "text": "Mismatched view type Keeps track of the view types associated with ids and if it finds a usage of the id in the Java code it ensures that it is treated as the same type. Issue id: WrongViewCast",
                  "markdown": "Mismatched view type  \n\nKeeps track of the view types associated with ids and if it finds a usage of the id in the Java code it ensures that it is treated as the same type.  \n\nIssue id: WrongViewCast"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "error",
                  "parameters": {
                    "suppressToolId": "AndroidLintWrongViewCast",
                    "ideaSeverity": "ERROR",
                    "qodanaSeverity": "Critical"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Android Lint: Correctness",
                      "index": 5,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "AndroidLintDiscouragedPrivateApi",
                "shortDescription": {
                  "text": "Using Discouraged Private API"
                },
                "fullDescription": {
                  "text": "Using Discouraged Private API Usage of restricted non-SDK interface may throw an exception at runtime. Accessing non-SDK methods or fields through reflection has a high likelihood to break your app between versions, and is being restricted to facilitate future app compatibility. Issue id: DiscouragedPrivateApi https://developer.android.com/preview/restrictions-non-sdk-interfaces",
                  "markdown": "Using Discouraged Private API  \n\nUsage of restricted non-SDK interface may throw an exception at runtime. Accessing non-SDK methods or fields through reflection has a high likelihood to break your app between versions, and is being restricted to facilitate future app compatibility.  \n\nIssue id: DiscouragedPrivateApi  \n\n<https://developer.android.com/preview/restrictions-non-sdk-interfaces>"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "AndroidLintDiscouragedPrivateApi",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Android Lint: Correctness",
                      "index": 5,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "AndroidLintRange",
                "shortDescription": {
                  "text": "Outside Range"
                },
                "fullDescription": {
                  "text": "Outside Range Some parameters are required to be in a particular numerical range; this check makes sure that arguments passed fall within the range. For arrays, Strings and collections this refers to the size or length. Issue id: Range",
                  "markdown": "Outside Range  \n\nSome parameters are required to be in a particular numerical range; this check makes sure that arguments passed fall within the range. For arrays, Strings and collections this refers to the size or length.  \n\nIssue id: Range"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "error",
                  "parameters": {
                    "suppressToolId": "AndroidLintRange",
                    "ideaSeverity": "ERROR",
                    "qodanaSeverity": "Critical"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Android Lint: Correctness",
                      "index": 5,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "AndroidLintKotlincFE10",
                "shortDescription": {
                  "text": "Avoid using kotlinc old frontend"
                },
                "fullDescription": {
                  "text": "Avoid using old K1 Kotlin compiler APIs K2, the new version of Kotlin compiler, which encompasses the new frontend, is coming. Try to avoid using internal APIs from the old frontend if possible. Issue id: KotlincFE10",
                  "markdown": "Avoid using old K1 Kotlin compiler APIs  \n\nK2, the new version of Kotlin compiler, which encompasses the new frontend, is coming. Try to avoid using internal APIs from the old frontend if possible.  \n\nIssue id: KotlincFE10"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "AndroidLintKotlincFE10",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Android Lint: Interoperability",
                      "index": 39,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "AndroidLintWearPasswordInput",
                "shortDescription": {
                  "text": "Wear OS: Using password input"
                },
                "fullDescription": {
                  "text": "Wear: Using password input Your app must not ask the user to input password directly on the Wear device. Issue id: WearPasswordInput https://developer.android.com/training/wearables/apps/auth-wear#auth-methods",
                  "markdown": "Wear: Using password input  \n\nYour app must not ask the user to input password directly on the Wear device.  \n\nIssue id: WearPasswordInput  \n\n<https://developer.android.com/training/wearables/apps/auth-wear#auth-methods>"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "error",
                  "parameters": {
                    "suppressToolId": "AndroidLintWearPasswordInput",
                    "ideaSeverity": "ERROR",
                    "qodanaSeverity": "Critical"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Android Lint: Usability",
                      "index": 42,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "AndroidLintExportedService",
                "shortDescription": {
                  "text": "Exported service does not require permission"
                },
                "fullDescription": {
                  "text": "Exported service does not require permission Exported services (services which either set 'exported=true' or contain an intent-filter and do not specify 'exported=false') should define a permission that an entity must have in order to launch the service or bind to it. Without this, any application can use this service. Issue id: ExportedService https://goo.gle/ExportedService",
                  "markdown": "Exported service does not require permission  \n\nExported services (services which either set `exported=true` or contain an intent-filter and do not specify `exported=false`) should define a permission that an entity must have in order to launch the service or bind to it. Without this, any application can use this service.  \n\nIssue id: ExportedService  \n\n<https://goo.gle/ExportedService>"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "AndroidLintExportedService",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Android Lint: Security",
                      "index": 44,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "AndroidLintSystemPermissionTypo",
                "shortDescription": {
                  "text": "Permission appears to be a standard permission with a typo"
                },
                "fullDescription": {
                  "text": "Permission appears to be a standard permission with a typo This check looks for required permissions that look like well-known system permissions or permissions from the Android SDK, but aren't, and may be typos. Please double check the permission value you have supplied. Issue id: SystemPermissionTypo",
                  "markdown": "Permission appears to be a standard permission with a typo  \n\nThis check looks for required permissions that *look* like well-known system permissions or permissions from the Android SDK, but aren't, and may be typos.  \n\nPlease double check the permission value you have supplied.  \n\nIssue id: SystemPermissionTypo"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "AndroidLintSystemPermissionTypo",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Android Lint: Security",
                      "index": 44,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "AndroidLintFindViewByIdCast",
                "shortDescription": {
                  "text": "Add Explicit Cast"
                },
                "fullDescription": {
                  "text": "Add Explicit Cast In Android O, the 'findViewById' signature switched to using generics, which means that most of the time you can leave out explicit casts and just assign the result of the 'findViewById' call to variables of specific view classes. However, due to language changes between Java 7 and 8, this change may cause code to not compile without explicit casts. This lint check looks for these scenarios and suggests casts to be added now such that the code will continue to compile if the language level is updated to 1.8. Issue id: FindViewByIdCast",
                  "markdown": "Add Explicit Cast  \n\nIn Android O, the `findViewById` signature switched to using generics, which means that most of the time you can leave out explicit casts and just assign the result of the `findViewById` call to variables of specific view classes.  \n\nHowever, due to language changes between Java 7 and 8, this change may cause code to not compile without explicit casts. This lint check looks for these scenarios and suggests casts to be added now such that the code will continue to compile if the language level is updated to 1.8.  \n\nIssue id: FindViewByIdCast"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "AndroidLintFindViewByIdCast",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Android Lint: Correctness",
                      "index": 5,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "AndroidLintPermissionNamingConvention",
                "shortDescription": {
                  "text": "Permission name does not follow recommended convention"
                },
                "fullDescription": {
                  "text": "Permission name does not follow recommended convention Permissions should be prefixed with an app's package name, using reverse-domain-style naming. This prefix should be followed by '.permission.', and then a description of the capability that the permission represents, in upper SNAKE_CASE. For example, 'com.example.myapp.permission.ENGAGE_HYPERSPACE'. Following this recommendation avoids naming collisions, and helps clearly identify the owner and intention of a custom permission. Issue id: PermissionNamingConvention",
                  "markdown": "Permission name does not follow recommended convention  \n\nPermissions should be prefixed with an app's package name, using reverse-domain-style naming. This prefix should be followed by `.permission.`, and then a description of the capability that the permission represents, in upper SNAKE_CASE. For example, `com.example.myapp.permission.ENGAGE_HYPERSPACE`.  \n\nFollowing this recommendation avoids naming collisions, and helps clearly identify the owner and intention of a custom permission.  \n\nIssue id: PermissionNamingConvention"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "AndroidLintPermissionNamingConvention",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Android Lint: Security",
                      "index": 44,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "AndroidLintIntentWithNullActionLaunch",
                "shortDescription": {
                  "text": "Unsafe use of intent with a null action"
                },
                "fullDescription": {
                  "text": "Unsafe intent launched with no action set Intents that have no action and do not specify a component are a potential security risk, and using them will result in a crash in an upcoming version of Android. If a specific app is being targeted (including the case where the current app is the target) then set the targeted component using 'setComponent()', 'setClass()', 'setClassName()', or the Intent constructors that take a Class parameter. If the intent is not intended for a specific app then the action name should be set. Issue id: IntentWithNullActionLaunch",
                  "markdown": "Unsafe intent launched with no action set  \n\nIntents that have no action and do not specify a component are a potential security risk, and using them will result in a crash in an upcoming version of Android. If a specific app is being targeted (including the case where the current app is the target) then set the targeted component using `setComponent()`, `setClass()`, `setClassName()`, or the Intent constructors that take a Class parameter. If the intent is not intended for a specific app then the action name should be set.  \n\nIssue id: IntentWithNullActionLaunch"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "AndroidLintIntentWithNullActionLaunch",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Android Lint: Security",
                      "index": 44,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "AndroidLintNotificationIconCompatibility",
                "shortDescription": {
                  "text": "Notification Icon Compatibility"
                },
                "fullDescription": {
                  "text": "Notification Icon Compatibility Notification icons should define a raster image to support Android versions below 5.0 (API 21). Note that the way Lint decides whether an icon is a notification icon is based on the filename prefix 'ic_stat_'. This corresponds to the naming convention documented in https://d.android.com/r/studio-ui/designer/material/iconography Issue id: NotificationIconCompatibility",
                  "markdown": "Notification Icon Compatibility  \n\nNotification icons should define a raster image to support Android versions below 5.0 (API 21). Note that the way Lint decides whether an icon is a notification icon is based on the filename prefix `ic_stat_`. This corresponds to the naming convention documented in <https://d.android.com/r/studio-ui/designer/material/iconography>  \n\nIssue id: NotificationIconCompatibility"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "AndroidLintNotificationIconCompatibility",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Android Lint: Correctness",
                      "index": 5,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "AndroidLintGradleOverrides",
                "shortDescription": {
                  "text": "Value overridden by Gradle build script"
                },
                "fullDescription": {
                  "text": "Value overridden by Gradle build script The value of (for example) 'minSdkVersion' is only used if it is not specified in the 'build.gradle' build scripts. When specified in the Gradle build scripts, the manifest value is ignored and can be misleading, so should be removed to avoid ambiguity. Issue id: GradleOverrides",
                  "markdown": "Value overridden by Gradle build script  \n\nThe value of (for example) `minSdkVersion` is only used if it is not specified in the `build.gradle` build scripts. When specified in the Gradle build scripts, the manifest value is ignored and can be misleading, so should be removed to avoid ambiguity.  \n\nIssue id: GradleOverrides"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "AndroidLintGradleOverrides",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Android Lint: Correctness",
                      "index": 5,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "AndroidLintWearSplashScreen",
                "shortDescription": {
                  "text": "Wear OS: Use SplashScreen library"
                },
                "fullDescription": {
                  "text": "Wear: Use 'SplashScreen' library If your app implements a custom splash screen or uses a launcher theme, migrate your app to the 'SplashScreen' library, available in Jetpack, to ensure it displays correctly on all Wear OS versions. Starting in Android 12, the system always applies the new Android system default splash screen on cold and warm starts for all apps. By default, this system default splash screen is constructed using your app’s launcher icon element and the 'windowBackground' of your theme (if it's a single color). If you do not migrate your app, your app launch experience on Android 12 and higher will be either degraded or may have unintended results. Issue id: WearSplashScreen https://developer.android.com/training/wearables/apps/splash-screen",
                  "markdown": "Wear: Use `SplashScreen` library  \n\nIf your app implements a custom splash screen or uses a launcher theme, migrate your app to the `SplashScreen` library, available in Jetpack, to ensure it displays correctly on all Wear OS versions. Starting in Android 12, the system always applies the new Android system default splash screen on cold and warm starts for all apps. By default, this system default splash screen is constructed using your app's launcher icon element and the `windowBackground` of your theme (if it's a single color). If you do not migrate your app, your app launch experience on Android 12 and higher will be either degraded or may have unintended results.  \n\nIssue id: WearSplashScreen  \n\n<https://developer.android.com/training/wearables/apps/splash-screen>"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "AndroidLintWearSplashScreen",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Android Lint: Usability",
                      "index": 42,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "AndroidLintDefaultLocale",
                "shortDescription": {
                  "text": "Implied default locale in case conversion"
                },
                "fullDescription": {
                  "text": "Implied default locale in case conversion Calling 'String#toLowerCase()' or '#toUpperCase()' without specifying an explicit locale is a common source of bugs. The reason for that is that those methods will use the current locale on the user's device, and even though the code appears to work correctly when you are developing the app, it will fail in some locales. For example, in the Turkish locale, the uppercase replacement for 'i' is not 'I'. If you want the methods to just perform ASCII replacement, for example to convert an enum name, call 'String#toUpperCase(Locale.ROOT)' instead. If you really want to use the current locale, call 'String#toUpperCase(Locale.getDefault())' instead. Issue id: DefaultLocale https://developer.android.com/reference/java/util/Locale.html#default_locale",
                  "markdown": "Implied default locale in case conversion  \n\nCalling `String#toLowerCase()` or `#toUpperCase()` **without specifying an explicit locale** is a common source of bugs. The reason for that is that those methods will use the current locale on the user's device, and even though the code appears to work correctly when you are developing the app, it will fail in some locales. For example, in the Turkish locale, the uppercase replacement for `i` is **not** `I`.  \n\nIf you want the methods to just perform ASCII replacement, for example to convert an enum name, call `String#toUpperCase(Locale.ROOT)` instead. If you really want to use the current locale, call `String#toUpperCase(Locale.getDefault())` instead.  \n\nIssue id: DefaultLocale  \n\n<https://developer.android.com/reference/java/util/Locale.html#default_locale>"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "AndroidLintDefaultLocale",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Android Lint: Correctness",
                      "index": 5,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "AndroidLintReturnThis",
                "shortDescription": {
                  "text": "Method must return this"
                },
                "fullDescription": {
                  "text": "Method must return 'this' Methods annotated with '@ReturnThis' (usually in the super method that this method is overriding) should also 'return this'. Issue id: ReturnThis",
                  "markdown": "Method must return `this`  \n\nMethods annotated with `@ReturnThis` (usually in the super method that this method is overriding) should also `return this`.  \n\nIssue id: ReturnThis"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "error",
                  "parameters": {
                    "suppressToolId": "AndroidLintReturnThis",
                    "ideaSeverity": "ERROR",
                    "qodanaSeverity": "Critical"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Android Lint: Correctness",
                      "index": 5,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "AndroidLintConvertToWebp",
                "shortDescription": {
                  "text": "Convert to WebP"
                },
                "fullDescription": {
                  "text": "Convert to WebP The WebP format is typically more compact than PNG and JPEG. As of Android 4.2.1 it supports transparency and lossless conversion as well. Note that there is a quickfix in the IDE which lets you perform conversion. Previously, launcher icons were required to be in the PNG format but that restriction is no longer there, so lint now flags these. Issue id: ConvertToWebp",
                  "markdown": "Convert to WebP  \n\nThe WebP format is typically more compact than PNG and JPEG. As of Android 4.2.1 it supports transparency and lossless conversion as well. Note that there is a quickfix in the IDE which lets you perform conversion.  \n\nPreviously, launcher icons were required to be in the PNG format but that restriction is no longer there, so lint now flags these.  \n\nIssue id: ConvertToWebp"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "AndroidLintConvertToWebp",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Android Lint: Usability",
                      "index": 42,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "AndroidLintAllowAllHostnameVerifier",
                "shortDescription": {
                  "text": "Insecure HostnameVerifier"
                },
                "fullDescription": {
                  "text": "Insecure 'HostnameVerifier' This check looks for use of HostnameVerifier implementations whose 'verify' method always returns true (thus trusting any hostname) which could result in insecure network traffic caused by trusting arbitrary hostnames in TLS/SSL certificates presented by peers. Issue id: AllowAllHostnameVerifier https://goo.gle/AllowAllHostnameVerifier",
                  "markdown": "Insecure `HostnameVerifier`  \n\nThis check looks for use of HostnameVerifier implementations whose `verify` method always returns true (thus trusting any hostname) which could result in insecure network traffic caused by trusting arbitrary hostnames in TLS/SSL certificates presented by peers.  \n\nIssue id: AllowAllHostnameVerifier  \n\n<https://goo.gle/AllowAllHostnameVerifier>"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "AndroidLintAllowAllHostnameVerifier",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Android Lint: Security",
                      "index": 44,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "AndroidLintSmallSp",
                "shortDescription": {
                  "text": "Text size is too small"
                },
                "fullDescription": {
                  "text": "Text size is too small Avoid using sizes smaller than 11sp. Issue id: SmallSp",
                  "markdown": "Text size is too small  \n\nAvoid using sizes smaller than 11sp.  \n\nIssue id: SmallSp"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "AndroidLintSmallSp",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Android Lint: Usability",
                      "index": 42,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "AndroidLintCustomViewStyleable",
                "shortDescription": {
                  "text": "Mismatched Styleable/Custom View Name"
                },
                "fullDescription": {
                  "text": "Mismatched Styleable/Custom View Name The convention for custom views is to use a 'declare-styleable' whose name matches the custom view class name. The IDE relies on this convention such that for example code completion can be offered for attributes in a custom view in layout XML resource files. (Similarly, layout parameter classes should use the suffix '_Layout'.) Issue id: CustomViewStyleable",
                  "markdown": "Mismatched Styleable/Custom View Name  \n\nThe convention for custom views is to use a `declare-styleable` whose name matches the custom view class name. The IDE relies on this convention such that for example code completion can be offered for attributes in a custom view in layout XML resource files.  \n\n(Similarly, layout parameter classes should use the suffix `_Layout`.)  \n\nIssue id: CustomViewStyleable"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "AndroidLintCustomViewStyleable",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Android Lint: Correctness",
                      "index": 5,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "AndroidLintExportedContentProvider",
                "shortDescription": {
                  "text": "Content provider does not require permission"
                },
                "fullDescription": {
                  "text": "Content provider does not require permission Content providers are exported by default and any application on the system can potentially use them to read and write data. If the content provider provides access to sensitive data, it should be protected by specifying 'export=false' in the manifest or by protecting it with a permission that can be granted to other applications. Issue id: ExportedContentProvider https://goo.gle/ExportedContentProvider",
                  "markdown": "Content provider does not require permission  \n\nContent providers are exported by default and any application on the system can potentially use them to read and write data. If the content provider provides access to sensitive data, it should be protected by specifying `export=false` in the manifest or by protecting it with a permission that can be granted to other applications.  \n\nIssue id: ExportedContentProvider  \n\n<https://goo.gle/ExportedContentProvider>"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "AndroidLintExportedContentProvider",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Android Lint: Security",
                      "index": 44,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "AndroidLintTypos",
                "shortDescription": {
                  "text": "Spelling error"
                },
                "fullDescription": {
                  "text": "Spelling error This check looks through the string definitions, and if it finds any words that look like likely misspellings, they are flagged. Issue id: Typos",
                  "markdown": "Spelling error  \n\nThis check looks through the string definitions, and if it finds any words that look like likely misspellings, they are flagged.  \n\nIssue id: Typos"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "AndroidLintTypos",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Android Lint: Correctness",
                      "index": 5,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "AndroidLintUnusedIds",
                "shortDescription": {
                  "text": "Unused id"
                },
                "fullDescription": {
                  "text": "Unused id This resource id definition appears not to be needed since it is not referenced from anywhere. Having id definitions, even if unused, is not necessarily a bad idea since they make working on layouts and menus easier, so there is not a strong reason to delete these. The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead. You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests =true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests =true. Issue id: UnusedIds",
                  "markdown": "Unused id  \n\nThis resource id definition appears not to be needed since it is not referenced from anywhere. Having id definitions, even if unused, is not necessarily a bad idea since they make working on layouts and menus easier, so there is not a strong reason to delete these.  \n\nThe unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.  \n\nYou can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests =true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests =true.  \n\nIssue id: UnusedIds"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "AndroidLintUnusedIds",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Android Lint: Performance",
                      "index": 14,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "AndroidLintExtraText",
                "shortDescription": {
                  "text": "Extraneous text in resource files"
                },
                "fullDescription": {
                  "text": "Extraneous text in resource files Non-value resource files should only contain elements and attributes. Any XML text content found in the file is likely accidental (and potentially dangerous if the text resembles XML and the developer believes the text to be functional). Issue id: ExtraText",
                  "markdown": "Extraneous text in resource files  \n\nNon-value resource files should only contain elements and attributes. Any XML text content found in the file is likely accidental (and potentially dangerous if the text resembles XML and the developer believes the text to be functional).  \n\nIssue id: ExtraText"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "error",
                  "parameters": {
                    "suppressToolId": "AndroidLintExtraText",
                    "ideaSeverity": "ERROR",
                    "qodanaSeverity": "Critical"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Android Lint: Correctness",
                      "index": 5,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "AndroidLintPackagedPrivateKey",
                "shortDescription": {
                  "text": "Packaged private key"
                },
                "fullDescription": {
                  "text": "Packaged private key In general, you should not package private key files inside your app. Issue id: PackagedPrivateKey https://goo.gle/PackagedPrivateKey",
                  "markdown": "Packaged private key  \n\nIn general, you should not package private key files inside your app.  \n\nIssue id: PackagedPrivateKey  \n\n<https://goo.gle/PackagedPrivateKey>"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "error",
                  "parameters": {
                    "suppressToolId": "AndroidLintPackagedPrivateKey",
                    "ideaSeverity": "ERROR",
                    "qodanaSeverity": "Critical"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Android Lint: Security",
                      "index": 44,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "AndroidLintRtlHardcoded",
                "shortDescription": {
                  "text": "Using left/right instead of start/end attributes"
                },
                "fullDescription": {
                  "text": "Using left/right instead of start/end attributes Using 'Gravity#LEFT' and 'Gravity#RIGHT' can lead to problems when a layout is rendered in locales where text flows from right to left. Use 'Gravity#START' and 'Gravity#END' instead. Similarly, in XML 'gravity' and 'layout_gravity' attributes, use 'start' rather than 'left'. For XML attributes such as paddingLeft and 'layout_marginLeft', use 'paddingStart' and 'layout_marginStart'. NOTE: If your 'minSdkVersion' is less than 17, you should add both the older left/right attributes as well as the new start/end attributes. On older platforms, where RTL is not supported and the start/end attributes are unknown and therefore ignored, you need the older left/right attributes. There is a separate lint check which catches that type of error. (Note: For 'Gravity#LEFT' and 'Gravity#START', you can use these constants even when targeting older platforms, because the 'start' bitmask is a superset of the 'left' bitmask. Therefore, you can use 'gravity=\"start\"' rather than 'gravity=\"left|start\"'.) Issue id: RtlHardcoded",
                  "markdown": "Using left/right instead of start/end attributes  \n\nUsing `Gravity#LEFT` and `Gravity#RIGHT` can lead to problems when a layout is rendered in locales where text flows from right to left. Use `Gravity#START` and `Gravity#END` instead. Similarly, in XML `gravity` and `layout_gravity` attributes, use `start` rather than `left`.  \n\nFor XML attributes such as paddingLeft and `layout_marginLeft`, use `paddingStart` and `layout_marginStart`. **NOTE** : If your `minSdkVersion` is less than 17, you should add **both** the older left/right attributes **as well as** the new start/end attributes. On older platforms, where RTL is not supported and the start/end attributes are unknown and therefore ignored, you need the older left/right attributes. There is a separate lint check which catches that type of error.  \n\n(Note: For `Gravity#LEFT` and `Gravity#START`, you can use these constants even when targeting older platforms, because the `start` bitmask is a superset of the `left` bitmask. Therefore, you can use `gravity=\"start\"` rather than `gravity=\"left|start\"`.)  \n\nIssue id: RtlHardcoded"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "AndroidLintRtlHardcoded",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Android Lint: Internationalization",
                      "index": 63,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "AndroidLintIconDensities",
                "shortDescription": {
                  "text": "Icon densities validation"
                },
                "fullDescription": {
                  "text": "Icon densities validation Icons will look best if a custom version is provided for each of the major screen density classes (low, medium, high, extra high). This lint check identifies icons which do not have complete coverage across the densities. Low density is not really used much anymore, so this check ignores the ldpi density. To force lint to include it, set the environment variable 'ANDROID_LINT_INCLUDE_LDPI=true'. For more information on current density usage, see https://developer.android.com/about/dashboards Issue id: IconDensities https://developer.android.com/guide/practices/screens_support.html",
                  "markdown": "Icon densities validation  \n\nIcons will look best if a custom version is provided for each of the major screen density classes (low, medium, high, extra high). This lint check identifies icons which do not have complete coverage across the densities.  \n\nLow density is not really used much anymore, so this check ignores the ldpi density. To force lint to include it, set the environment variable `ANDROID_LINT_INCLUDE_LDPI=true`. For more information on current density usage, see <https://developer.android.com/about/dashboards>  \n\nIssue id: IconDensities  \n\n<https://developer.android.com/guide/practices/screens_support.html>"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "AndroidLintIconDensities",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Android Lint: Usability",
                      "index": 42,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "AndroidLintScheduleExactAlarm",
                "shortDescription": {
                  "text": "Scheduling Exact Alarms Without Required Permission"
                },
                "fullDescription": {
                  "text": "Scheduling Exact Alarms Without Required Permission Applications looking to schedule exact alarms should ensure that the 'SCHEDULE_EXACT_ALARM' permission is granted by calling the 'AlarmManager#canScheduleExactAlarms' API before attempting to set an exact alarm. If the permission is not granted to your application, please consider requesting it from the user by starting the 'ACTION_REQUEST_SCHEDULE_EXACT_ALARM' intent or gracefully falling back to another option. Issue id: ScheduleExactAlarm https://developer.android.com/training/scheduling/alarms#exact",
                  "markdown": "Scheduling Exact Alarms Without Required Permission  \n\nApplications looking to schedule exact alarms should ensure that the `SCHEDULE_EXACT_ALARM` permission is granted by calling the `AlarmManager#canScheduleExactAlarms` API before attempting to set an exact alarm. If the permission is not granted to your application, please consider requesting it from the user by starting the `ACTION_REQUEST_SCHEDULE_EXACT_ALARM` intent or gracefully falling back to another option.  \n\nIssue id: ScheduleExactAlarm  \n\n<https://developer.android.com/training/scheduling/alarms#exact>"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "error",
                  "parameters": {
                    "suppressToolId": "AndroidLintScheduleExactAlarm",
                    "ideaSeverity": "ERROR",
                    "qodanaSeverity": "Critical"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Android Lint: Correctness",
                      "index": 5,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "AndroidLintAccessibilityFocus",
                "shortDescription": {
                  "text": "Forcing accessibility focus"
                },
                "fullDescription": {
                  "text": "Forcing accessibility focus Forcing accessibility focus interferes with screen readers and gives an inconsistent user experience, especially across apps. Issue id: AccessibilityFocus",
                  "markdown": "Forcing accessibility focus  \n\nForcing accessibility focus interferes with screen readers and gives an inconsistent user experience, especially across apps.  \n\nIssue id: AccessibilityFocus"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "AndroidLintAccessibilityFocus",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Android Lint: Accessibility",
                      "index": 68,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "AndroidLintSuspicious0dp",
                "shortDescription": {
                  "text": "Suspicious 0dp dimension"
                },
                "fullDescription": {
                  "text": "Suspicious 0dp dimension Using 0dp as the width in a horizontal 'LinearLayout' with weights is a useful trick to ensure that only the weights (and not the intrinsic sizes) are used when sizing the children. However, if you use 0dp for the opposite dimension, the view will be invisible. This can happen if you change the orientation of a layout without also flipping the '0dp' dimension in all the children. Issue id: Suspicious0dp",
                  "markdown": "Suspicious 0dp dimension  \n\nUsing 0dp as the width in a horizontal `LinearLayout` with weights is a useful trick to ensure that only the weights (and not the intrinsic sizes) are used when sizing the children.  \n\nHowever, if you use 0dp for the opposite dimension, the view will be invisible. This can happen if you change the orientation of a layout without also flipping the `0dp` dimension in all the children.  \n\nIssue id: Suspicious0dp"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "error",
                  "parameters": {
                    "suppressToolId": "AndroidLintSuspicious0dp",
                    "ideaSeverity": "ERROR",
                    "qodanaSeverity": "Critical"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Android Lint: Correctness",
                      "index": 5,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "AndroidLintGetInstance",
                "shortDescription": {
                  "text": "Cipher.getInstance with ECB"
                },
                "fullDescription": {
                  "text": "Cipher.getInstance with ECB 'Cipher#getInstance' should not be called with ECB as the cipher mode or without setting the cipher mode because the default mode on android is ECB, which is insecure. Issue id: GetInstance https://goo.gle/GetInstance",
                  "markdown": "Cipher.getInstance with ECB  \n\n`Cipher#getInstance` should not be called with ECB as the cipher mode or without setting the cipher mode because the default mode on android is ECB, which is insecure.  \n\nIssue id: GetInstance  \n\n<https://goo.gle/GetInstance>"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "AndroidLintGetInstance",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Android Lint: Security",
                      "index": 44,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "AndroidLintMissingVersion",
                "shortDescription": {
                  "text": "Missing application name/version"
                },
                "fullDescription": {
                  "text": "Missing application name/version You should define the version information for your application. 'android:versionCode': An integer value that represents the version of the application code, relative to other versions. 'android:versionName': A string value that represents the release version of the application code, as it should be shown to users. Issue id: MissingVersion https://developer.android.com/studio/publish/versioning#appversioning",
                  "markdown": "Missing application name/version  \n\nYou should define the version information for your application.  \n\n`android:versionCode`: An integer value that represents the version of the application code, relative to other versions.  \n\n`android:versionName`: A string value that represents the release version of the application code, as it should be shown to users.  \n\nIssue id: MissingVersion  \n\n<https://developer.android.com/studio/publish/versioning#appversioning>"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "AndroidLintMissingVersion",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Android Lint: Correctness",
                      "index": 5,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "AndroidLintAppLinksAutoVerify",
                "shortDescription": {
                  "text": "App Links Auto Verification Failure"
                },
                "fullDescription": {
                  "text": "App Links Auto Verification Failure Ensures that app links are correctly set and associated with website. Issue id: AppLinksAutoVerify https://g.co/appindexing/applinks",
                  "markdown": "App Links Auto Verification Failure  \n\nEnsures that app links are correctly set and associated with website.  \n\nIssue id: AppLinksAutoVerify  \n\n<https://g.co/appindexing/applinks>"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "error",
                  "parameters": {
                    "suppressToolId": "AndroidLintAppLinksAutoVerify",
                    "ideaSeverity": "ERROR",
                    "qodanaSeverity": "Critical"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Android Lint: Correctness",
                      "index": 5,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "AndroidLintProguardSplit",
                "shortDescription": {
                  "text": "Proguard.cfg file contains generic Android rules"
                },
                "fullDescription": {
                  "text": "Proguard.cfg file contains generic Android rules Earlier versions of the Android tools bundled a single 'proguard.cfg' file containing a ProGuard configuration file suitable for Android shrinking and obfuscation. However, that version was copied into new projects, which means that it does not continue to get updated as we improve the default ProGuard rules for Android. In the new version of the tools, we have split the ProGuard configuration into two halves: * A simple configuration file containing only project-specific flags, in your project * A generic configuration file containing the recommended set of ProGuard options for Android projects. This generic file lives in the SDK install directory which means that it gets updated along with the tools. In order for this to work, the proguard.config property in the 'project.properties' file now refers to a path, so you can reference both the generic file as well as your own (and any additional files too). To migrate your project to the new setup, create a new 'proguard-project.txt' file in your project containing any project specific ProGuard flags as well as any customizations you have made, then update your project.properties file to contain: 'proguard.config=${sdk.dir}/tools/proguard/proguard-android.txt:proguard-project.txt' Issue id: ProguardSplit",
                  "markdown": "Proguard.cfg file contains generic Android rules  \n\nEarlier versions of the Android tools bundled a single `proguard.cfg` file containing a ProGuard configuration file suitable for Android shrinking and obfuscation. However, that version was copied into new projects, which means that it does not continue to get updated as we improve the default ProGuard rules for Android.  \n\nIn the new version of the tools, we have split the ProGuard configuration into two halves:  \n\\* A simple configuration file containing only project-specific flags, in your project  \n\\* A generic configuration file containing the recommended set of ProGuard options for Android projects. This generic file lives in the SDK install directory which means that it gets updated along with the tools.  \n\nIn order for this to work, the proguard.config property in the `project.properties` file now refers to a path, so you can reference both the generic file as well as your own (and any additional files too).  \n\nTo migrate your project to the new setup, create a new `proguard-project.txt` file in your project containing any project specific ProGuard flags as well as any customizations you have made, then update your project.properties file to contain:  \n`proguard.config=${sdk.dir}/tools/proguard/proguard-android.txt:proguard-project.txt`  \n\nIssue id: ProguardSplit"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "AndroidLintProguardSplit",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Android Lint: Correctness",
                      "index": 5,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "AndroidLintDeprecated",
                "shortDescription": {
                  "text": "Using deprecated resources"
                },
                "fullDescription": {
                  "text": "Using deprecated resources Deprecated views, attributes and so on are deprecated because there is a better way to do something. Do it that new way. You've been warned. Issue id: Deprecated",
                  "markdown": "Using deprecated resources  \n\nDeprecated views, attributes and so on are deprecated because there is a better way to do something. Do it that new way. You've been warned.  \n\nIssue id: Deprecated"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "AndroidLintDeprecated",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Android Lint: Correctness",
                      "index": 5,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "AndroidLintStringShouldBeInt",
                "shortDescription": {
                  "text": "String should be int"
                },
                "fullDescription": {
                  "text": "String should be int The properties 'compileSdkVersion', 'minSdkVersion' and 'targetSdkVersion' are usually numbers, but can be strings when you are using an add-on (in the case of 'compileSdkVersion') or a preview platform (for the other two properties). However, you can not use a number as a string (e.g. \"19\" instead of 19); that will result in a platform not found error message at build/sync time. Issue id: StringShouldBeInt",
                  "markdown": "String should be int  \n\nThe properties `compileSdkVersion`, `minSdkVersion` and `targetSdkVersion` are usually numbers, but can be strings when you are using an add-on (in the case of `compileSdkVersion`) or a preview platform (for the other two properties).  \n\nHowever, you can not use a number as a string (e.g. \"19\" instead of 19); that will result in a platform not found error message at build/sync time.  \n\nIssue id: StringShouldBeInt"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "error",
                  "parameters": {
                    "suppressToolId": "AndroidLintStringShouldBeInt",
                    "ideaSeverity": "ERROR",
                    "qodanaSeverity": "Critical"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Android Lint: Correctness",
                      "index": 5,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "AndroidLintUntranslatable",
                "shortDescription": {
                  "text": "Translated Untranslatable"
                },
                "fullDescription": {
                  "text": "Translated Untranslatable Strings can be marked with 'translatable=false' to indicate that they are not intended to be translated, but are present in the resource file for other purposes (for example for non-display strings that should vary by some other configuration qualifier such as screen size or API level). There are cases where translators accidentally translate these strings anyway, and lint will flag these occurrences with this lint check. Issue id: Untranslatable",
                  "markdown": "Translated Untranslatable  \n\nStrings can be marked with `translatable=false` to indicate that they are not intended to be translated, but are present in the resource file for other purposes (for example for non-display strings that should vary by some other configuration qualifier such as screen size or API level).  \n\nThere are cases where translators accidentally translate these strings anyway, and lint will flag these occurrences with this lint check.  \n\nIssue id: Untranslatable"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "AndroidLintUntranslatable",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Android Lint: Correctness",
                      "index": 5,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "AndroidLintHardwareIds",
                "shortDescription": {
                  "text": "Hardware Id Usage"
                },
                "fullDescription": {
                  "text": "Hardware Id Usage Using these device identifiers is not recommended other than for high value fraud prevention and advanced telephony use-cases. For advertising use-cases, use 'AdvertisingIdClient$Info#getId' and for analytics, use 'InstanceId#getId'. Issue id: HardwareIds https://developer.android.com/training/articles/user-data-ids.html",
                  "markdown": "Hardware Id Usage  \n\nUsing these device identifiers is not recommended other than for high value fraud prevention and advanced telephony use-cases. For advertising use-cases, use `AdvertisingIdClient$Info#getId` and for analytics, use `InstanceId#getId`.  \n\nIssue id: HardwareIds  \n\n<https://developer.android.com/training/articles/user-data-ids.html>"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "AndroidLintHardwareIds",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Android Lint: Security",
                      "index": 44,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "AndroidLintRemoteViewLayout",
                "shortDescription": {
                  "text": "Unsupported View in RemoteView"
                },
                "fullDescription": {
                  "text": "Unsupported View in RemoteView In a 'RemoteView', only some layouts and views are allowed. Issue id: RemoteViewLayout https://developer.android.com/reference/android/widget/RemoteViews",
                  "markdown": "Unsupported View in RemoteView  \n\nIn a `RemoteView`, only some layouts and views are allowed.  \n\nIssue id: RemoteViewLayout  \n\n<https://developer.android.com/reference/android/widget/RemoteViews>"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "error",
                  "parameters": {
                    "suppressToolId": "AndroidLintRemoteViewLayout",
                    "ideaSeverity": "ERROR",
                    "qodanaSeverity": "Critical"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Android Lint: Correctness",
                      "index": 5,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "AndroidLintUseCheckPermission",
                "shortDescription": {
                  "text": "Using the result of check permission calls"
                },
                "fullDescription": {
                  "text": "Using the result of check permission calls You normally want to use the result of checking a permission; these methods return whether the permission is held; they do not throw an error if the permission is not granted. Code which does not do anything with the return value probably meant to be calling the enforce methods instead, e.g. rather than 'Context#checkCallingPermission' it should call 'Context#enforceCallingPermission'. Issue id: UseCheckPermission",
                  "markdown": "Using the result of check permission calls  \n\nYou normally want to use the result of checking a permission; these methods return whether the permission is held; they do not throw an error if the permission is not granted. Code which does not do anything with the return value probably meant to be calling the enforce methods instead, e.g. rather than `Context#checkCallingPermission` it should call `Context#enforceCallingPermission`.  \n\nIssue id: UseCheckPermission"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "AndroidLintUseCheckPermission",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Android Lint: Security",
                      "index": 44,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "AndroidLintTypographyDashes",
                "shortDescription": {
                  "text": "Hyphen can be replaced with dash"
                },
                "fullDescription": {
                  "text": "Hyphen can be replaced with dash The \"n dash\" (u2013, &#8211;) and the \"m dash\" (u2014, &#8212;) characters are used for ranges (n dash) and breaks (m dash). Using these instead of plain hyphens can make text easier to read and your application will look more polished. Issue id: TypographyDashes https://en.wikipedia.org/wiki/Dash",
                  "markdown": "Hyphen can be replaced with dash  \n\nThe \"n dash\" (u2013, \\&#8211;) and the \"m dash\" (u2014, \\&#8212;) characters are used for ranges (n dash) and breaks (m dash). Using these instead of plain hyphens can make text easier to read and your application will look more polished.  \n\nIssue id: TypographyDashes  \n\n<https://en.wikipedia.org/wiki/Dash>"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "AndroidLintTypographyDashes",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Android Lint: Usability",
                      "index": 42,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "AndroidLintAllCaps",
                "shortDescription": {
                  "text": "Combining textAllCaps and markup"
                },
                "fullDescription": {
                  "text": "Combining textAllCaps and markup The textAllCaps text transform will end up calling 'toString' on the 'CharSequence', which has the net effect of removing any markup such as '<b>'. This check looks for usages of strings containing markup that also specify 'textAllCaps=true'. Issue id: AllCaps",
                  "markdown": "Combining textAllCaps and markup  \n\nThe textAllCaps text transform will end up calling `toString` on the `CharSequence`, which has the net effect of removing any markup such as `<b>`. This check looks for usages of strings containing markup that also specify `textAllCaps=true`.  \n\nIssue id: AllCaps"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "AndroidLintAllCaps",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Android Lint: Usability",
                      "index": 42,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "AndroidLintCanvasSize",
                "shortDescription": {
                  "text": "Wrong Canvas Size"
                },
                "fullDescription": {
                  "text": "Wrong Canvas Size In a custom view's draw implementation, you should normally call 'getWidth' and 'getHeight' on the custom view itself, not on the 'canvas' instance. Canvas width and height are the width and height of the 'Canvas', which is not always the same as size of the view. In the hardware accelerated path the width and height of the canvas typically always match that of the 'View' because every view goes to its own recorded 'DisplayList'. But in software rendering there's just one canvas that is clipped and transformed as it makes its way through the 'View' tree, and otherwise remains the same 'Canvas' object for every View's draw method. You should only use Canvas state to adjust how much you draw, such as a quick-reject for early work avoidance if it's going to be clipped away, but not what you draw. Issue id: CanvasSize",
                  "markdown": "Wrong Canvas Size  \n\nIn a custom view's draw implementation, you should normally call `getWidth` and `getHeight` on the custom view itself, not on the `canvas` instance.  \n\nCanvas width and height are the width and height of the `Canvas`, which is not always the same as size of the view.  \n\nIn the hardware accelerated path the width and height of the canvas typically always match that of the `View` because every view goes to its own recorded `DisplayList`. But in software rendering there's just one canvas that is clipped and transformed as it makes its way through the `View` tree, and otherwise remains the same `Canvas` object for every View's draw method.  \n\nYou should only use Canvas state to adjust how much you draw, such as a quick-reject for early work avoidance if it's going to be clipped away, but not what you draw.  \n\nIssue id: CanvasSize"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "AndroidLintCanvasSize",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Android Lint: Correctness",
                      "index": 5,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "AndroidLintManifestResource",
                "shortDescription": {
                  "text": "Manifest Resource References"
                },
                "fullDescription": {
                  "text": "Manifest Resource References Elements in the manifest can reference resources, but those resources cannot vary across configurations (except as a special case, by version, and except for a few specific package attributes such as the application title and icon). Issue id: ManifestResource",
                  "markdown": "Manifest Resource References  \n\nElements in the manifest can reference resources, but those resources cannot vary across configurations (except as a special case, by version, and except for a few specific package attributes such as the application title and icon).  \n\nIssue id: ManifestResource"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "error",
                  "parameters": {
                    "suppressToolId": "AndroidLintManifestResource",
                    "ideaSeverity": "ERROR",
                    "qodanaSeverity": "Critical"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Android Lint: Correctness",
                      "index": 5,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "AndroidLintSlices",
                "shortDescription": {
                  "text": "Slices"
                },
                "fullDescription": {
                  "text": "Slices This check analyzes usages of the Slices API and offers suggestions based on best practices. Issue id: Slices",
                  "markdown": "Slices  \n\nThis check analyzes usages of the Slices API and offers suggestions based on best practices.  \n\nIssue id: Slices"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "AndroidLintSlices",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Android Lint: Correctness",
                      "index": 5,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "AndroidLintNamespaceTypo",
                "shortDescription": {
                  "text": "Misspelled namespace declaration"
                },
                "fullDescription": {
                  "text": "Misspelled namespace declaration Accidental misspellings in namespace declarations can lead to some very obscure error messages. This check looks for potential misspellings to help track these down. Issue id: NamespaceTypo",
                  "markdown": "Misspelled namespace declaration  \n\nAccidental misspellings in namespace declarations can lead to some very obscure error messages. This check looks for potential misspellings to help track these down.  \n\nIssue id: NamespaceTypo"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "error",
                  "parameters": {
                    "suppressToolId": "AndroidLintNamespaceTypo",
                    "ideaSeverity": "ERROR",
                    "qodanaSeverity": "Critical"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Android Lint: Correctness",
                      "index": 5,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "AndroidLintSecureRandom",
                "shortDescription": {
                  "text": "Using a fixed seed with SecureRandom"
                },
                "fullDescription": {
                  "text": "Using a fixed seed with 'SecureRandom' Specifying a fixed seed will cause the instance to return a predictable sequence of numbers. This may be useful for testing but it is not appropriate for secure use. Issue id: SecureRandom https://goo.gle/SecureRandom https://developer.android.com/reference/java/security/SecureRandom.html",
                  "markdown": "Using a fixed seed with `SecureRandom`  \n\nSpecifying a fixed seed will cause the instance to return a predictable sequence of numbers. This may be useful for testing but it is not appropriate for secure use.  \n\nIssue id: SecureRandom  \n\n<https://goo.gle/SecureRandom>  \n<https://developer.android.com/reference/java/security/SecureRandom.html>"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "AndroidLintSecureRandom",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Android Lint: Security",
                      "index": 44,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "AndroidLintShowToast",
                "shortDescription": {
                  "text": "Toast created but not shown"
                },
                "fullDescription": {
                  "text": "Toast created but not shown 'Toast.makeText()' creates a 'Toast' but does not show it. You must call 'show()' on the resulting object to actually make the 'Toast' appear. Issue id: ShowToast",
                  "markdown": "Toast created but not shown  \n\n`Toast.makeText()` creates a `Toast` but does **not** show it. You must call `show()` on the resulting object to actually make the `Toast` appear.  \n\nIssue id: ShowToast"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "AndroidLintShowToast",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Android Lint: Correctness",
                      "index": 5,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "AndroidLintInvalidNavigation",
                "shortDescription": {
                  "text": "No start destination specified"
                },
                "fullDescription": {
                  "text": "No start destination specified All '<navigation>' elements must have a start destination specified, and it must be a direct child of that '<navigation>'. Issue id: InvalidNavigation",
                  "markdown": "No start destination specified  \n\nAll `<navigation>` elements must have a start destination specified, and it must be a direct child of that `<navigation>`.  \n\nIssue id: InvalidNavigation"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "AndroidLintInvalidNavigation",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Android Lint: Correctness",
                      "index": 5,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "ShrinkerInvalidFlags",
                "shortDescription": {
                  "text": "Invalid flag in shrinker config"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "error",
                  "parameters": {
                    "suppressToolId": "ShrinkerInvalidFlags",
                    "ideaSeverity": "ERROR",
                    "qodanaSeverity": "Critical"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Android/Shrinker",
                      "index": 84,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "AndroidLintAuthLeak",
                "shortDescription": {
                  "text": "Code might contain an auth leak"
                },
                "fullDescription": {
                  "text": "Code might contain an auth leak Strings in java apps can be discovered by decompiling apps, this lint check looks for code which looks like it may contain an url with a username and password Issue id: AuthLeak https://goo.gle/AuthLeak",
                  "markdown": "Code might contain an auth leak  \n\nStrings in java apps can be discovered by decompiling apps, this lint check looks for code which looks like it may contain an url with a username and password  \n\nIssue id: AuthLeak  \n\n<https://goo.gle/AuthLeak>"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "AndroidLintAuthLeak",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Android Lint: Security",
                      "index": 44,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "AndroidLintSimilarGradleDependency",
                "shortDescription": {
                  "text": "Multiple Versions Gradle Dependency"
                },
                "fullDescription": {
                  "text": "Multiple Versions Gradle Dependency This detector looks for usages of libraries when name and group are the same but versions are different. Using multiple versions in big project is fine, and there are cases where you deliberately want to stick with such approach. However, you may simply not be aware that this situation happens, and that is what this lint check helps find. Issue id: SimilarGradleDependency",
                  "markdown": "Multiple Versions Gradle Dependency  \n\nThis detector looks for usages of libraries when name and group are the same but versions are different. Using multiple versions in big project is fine, and there are cases where you deliberately want to stick with such approach. However, you may simply not be aware that this situation happens, and that is what this lint check helps find.  \n\nIssue id: SimilarGradleDependency"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "note",
                  "parameters": {
                    "suppressToolId": "AndroidLintSimilarGradleDependency",
                    "ideaSeverity": "INFO",
                    "qodanaSeverity": "Info"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Android Lint: Correctness",
                      "index": 5,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "AndroidLintObsoleteLayoutParam",
                "shortDescription": {
                  "text": "Obsolete layout params"
                },
                "fullDescription": {
                  "text": "Obsolete layout params The given layout_param is not defined for the given layout, meaning it has no effect. This usually happens when you change the parent layout or move view code around without updating the layout params. This will cause useless attribute processing at runtime, and is misleading for others reading the layout so the parameter should be removed. Issue id: ObsoleteLayoutParam",
                  "markdown": "Obsolete layout params  \n\nThe given layout_param is not defined for the given layout, meaning it has no effect. This usually happens when you change the parent layout or move view code around without updating the layout params. This will cause useless attribute processing at runtime, and is misleading for others reading the layout so the parameter should be removed.  \n\nIssue id: ObsoleteLayoutParam"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "AndroidLintObsoleteLayoutParam",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Android Lint: Performance",
                      "index": 14,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "AndroidLintWebViewLayout",
                "shortDescription": {
                  "text": "WebViews in wrap_content parents"
                },
                "fullDescription": {
                  "text": "WebViews in wrap_content parents The WebView implementation has certain performance optimizations which will not work correctly if the parent view is using 'wrap_content' rather than 'match_parent'. This can lead to subtle UI bugs. Issue id: WebViewLayout",
                  "markdown": "WebViews in wrap_content parents  \n\nThe WebView implementation has certain performance optimizations which will not work correctly if the parent view is using `wrap_content` rather than `match_parent`. This can lead to subtle UI bugs.  \n\nIssue id: WebViewLayout"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "error",
                  "parameters": {
                    "suppressToolId": "AndroidLintWebViewLayout",
                    "ideaSeverity": "ERROR",
                    "qodanaSeverity": "Critical"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Android Lint: Correctness",
                      "index": 5,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "AndroidLintProtectedPermissions",
                "shortDescription": {
                  "text": "Using system app permission"
                },
                "fullDescription": {
                  "text": "Using system app permission Permissions with the protection level 'signature', 'privileged' or 'signatureOrSystem' are only granted to system apps. If an app is a regular non-system app, it will never be able to use these permissions. Issue id: ProtectedPermissions",
                  "markdown": "Using system app permission  \n\nPermissions with the protection level `signature`, `privileged` or `signatureOrSystem` are only granted to system apps. If an app is a regular non-system app, it will never be able to use these permissions.  \n\nIssue id: ProtectedPermissions"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "error",
                  "parameters": {
                    "suppressToolId": "AndroidLintProtectedPermissions",
                    "ideaSeverity": "ERROR",
                    "qodanaSeverity": "Critical"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Android Lint: Correctness",
                      "index": 5,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "AndroidLintViewConstructor",
                "shortDescription": {
                  "text": "Missing View constructors for XML inflation"
                },
                "fullDescription": {
                  "text": "Missing View constructors for XML inflation Some layout tools (such as the Android layout editor) need to find a constructor with one of the following signatures: * 'View(Context context)' * 'View(Context context, AttributeSet attrs)' * 'View(Context context, AttributeSet attrs, int defStyle)' If your custom view needs to perform initialization which does not apply when used in a layout editor, you can surround the given code with a check to see if 'View#isInEditMode()' is false, since that method will return 'false' at runtime but true within a user interface editor. Issue id: ViewConstructor",
                  "markdown": "Missing View constructors for XML inflation  \n\nSome layout tools (such as the Android layout editor) need to find a constructor with one of the following signatures:  \n\\* `View(Context context)`  \n\\* `View(Context context, AttributeSet attrs)`  \n\\* `View(Context context, AttributeSet attrs, int defStyle)`  \n\nIf your custom view needs to perform initialization which does not apply when used in a layout editor, you can surround the given code with a check to see if `View#isInEditMode()` is false, since that method will return `false` at runtime but true within a user interface editor.  \n\nIssue id: ViewConstructor"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "AndroidLintViewConstructor",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Android Lint: Usability",
                      "index": 42,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "AndroidLintResAuto",
                "shortDescription": {
                  "text": "Hardcoded Package in Namespace"
                },
                "fullDescription": {
                  "text": "Hardcoded Package in Namespace In Gradle projects, the actual package used in the final APK can vary; for example,you can add a '.debug' package suffix in one version and not the other. Therefore, you should not hardcode the application package in the resource; instead, use the special namespace 'http://schemas.android.com/apk/res-auto' which will cause the tools to figure out the right namespace for the resource regardless of the actual package used during the build. Issue id: ResAuto",
                  "markdown": "Hardcoded Package in Namespace  \n\nIn Gradle projects, the actual package used in the final APK can vary; for example,you can add a `.debug` package suffix in one version and not the other. Therefore, you should **not** hardcode the application package in the resource; instead, use the special namespace `http://schemas.android.com/apk/res-auto` which will cause the tools to figure out the right namespace for the resource regardless of the actual package used during the build.  \n\nIssue id: ResAuto"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "error",
                  "parameters": {
                    "suppressToolId": "AndroidLintResAuto",
                    "ideaSeverity": "ERROR",
                    "qodanaSeverity": "Critical"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Android Lint: Correctness",
                      "index": 5,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "AndroidLintUsingC2DM",
                "shortDescription": {
                  "text": "Using C2DM"
                },
                "fullDescription": {
                  "text": "Using C2DM The C2DM library does not work on Android P or newer devices; you should migrate to Firebase Cloud Messaging to ensure reliable message delivery. Issue id: UsingC2DM https://developers.google.com/cloud-messaging/c2dm",
                  "markdown": "Using C2DM  \n\nThe C2DM library does not work on Android P or newer devices; you should migrate to Firebase Cloud Messaging to ensure reliable message delivery.  \n\nIssue id: UsingC2DM  \n\n<https://developers.google.com/cloud-messaging/c2dm>"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "error",
                  "parameters": {
                    "suppressToolId": "AndroidLintUsingC2DM",
                    "ideaSeverity": "ERROR",
                    "qodanaSeverity": "Critical"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Android Lint: Security",
                      "index": 44,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "AndroidRoomSqlBooleanLiteral",
                "shortDescription": {
                  "text": "Boolean literal used in a Room query"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "AndroidRoomSqlBooleanLiteral",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Android/Room",
                      "index": 91,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "AndroidLintGifUsage",
                "shortDescription": {
                  "text": "Using .gif format for bitmaps is discouraged"
                },
                "fullDescription": {
                  "text": "Using '.gif' format for bitmaps is discouraged The '.gif' file format is discouraged. Consider using '.png' (preferred) or '.jpg' (acceptable) instead. Issue id: GifUsage https://developer.android.com/guide/topics/resources/drawable-resource.html#Bitmap",
                  "markdown": "Using `.gif` format for bitmaps is discouraged  \n\nThe `.gif` file format is discouraged. Consider using `.png` (preferred) or `.jpg` (acceptable) instead.  \n\nIssue id: GifUsage  \n\n<https://developer.android.com/guide/topics/resources/drawable-resource.html#Bitmap>"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "AndroidLintGifUsage",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Android Lint: Usability",
                      "index": 42,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "ShrinkerInnerClassSeparator",
                "shortDescription": {
                  "text": "Invalid separator between class and inner class"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "error",
                  "parameters": {
                    "suppressToolId": "ShrinkerInnerClassSeparator",
                    "ideaSeverity": "ERROR",
                    "qodanaSeverity": "Critical"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Android/Shrinker",
                      "index": 84,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "AndroidLintScrollViewCount",
                "shortDescription": {
                  "text": "ScrollView can have only one child"
                },
                "fullDescription": {
                  "text": "'ScrollView' can have only one child A 'ScrollView' can only have one child widget. If you want more children, wrap them in a container layout. Issue id: ScrollViewCount",
                  "markdown": "`ScrollView` can have only one child  \n\nA `ScrollView` can only have one child widget. If you want more children, wrap them in a container layout.  \n\nIssue id: ScrollViewCount"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "AndroidLintScrollViewCount",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Android Lint: Correctness",
                      "index": 5,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "AndroidLintRelativeOverlap",
                "shortDescription": {
                  "text": "Overlapping items in RelativeLayout"
                },
                "fullDescription": {
                  "text": "Overlapping items in RelativeLayout If relative layout has text or button items aligned to left and right sides they can overlap each other due to localized text expansion unless they have mutual constraints like 'toEndOf'/'toStartOf'. Issue id: RelativeOverlap",
                  "markdown": "Overlapping items in RelativeLayout  \n\nIf relative layout has text or button items aligned to left and right sides they can overlap each other due to localized text expansion unless they have mutual constraints like `toEndOf`/`toStartOf`.  \n\nIssue id: RelativeOverlap"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "AndroidLintRelativeOverlap",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Android Lint: Internationalization",
                      "index": 63,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "AndroidLintAndroidGradlePluginVersion",
                "shortDescription": {
                  "text": "Obsolete Android Gradle Plugin Version"
                },
                "fullDescription": {
                  "text": "Obsolete Android Gradle Plugin Version This detector looks for usage of the Android Gradle Plugin where the version you are using is not the current stable release. Using older versions is fine, and there are cases where you deliberately want to stick with an older version. However, you may simply not be aware that a more recent version is available, and that is what this lint check helps find. Issue id: AndroidGradlePluginVersion",
                  "markdown": "Obsolete Android Gradle Plugin Version  \n\nThis detector looks for usage of the Android Gradle Plugin where the version you are using is not the current stable release. Using older versions is fine, and there are cases where you deliberately want to stick with an older version. However, you may simply not be aware that a more recent version is available, and that is what this lint check helps find.  \n\nIssue id: AndroidGradlePluginVersion"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "AndroidLintAndroidGradlePluginVersion",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Android Lint: Correctness",
                      "index": 5,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "AndroidLintWearableActionDuplicate",
                "shortDescription": {
                  "text": "Duplicate watch face configuration activities found"
                },
                "fullDescription": {
                  "text": "Duplicate watch face configuration activities found If and only if a watch face service defines 'wearableConfigurationAction' metadata, with the value 'WATCH_FACE_EDITOR', there should be an activity in the same package, which has an intent filter for 'WATCH_FACE_EDITOR' (with com.google.android.wearable.watchface.category.WEARABLE_CONFIGURATION if minSdkVersion is less than 30). Issue id: WearableActionDuplicate https://developer.android.com/training/wearables/watch-faces/configuration",
                  "markdown": "Duplicate watch face configuration activities found  \n\nIf and only if a watch face service defines `wearableConfigurationAction` metadata, with the value `WATCH_FACE_EDITOR`, there should be an activity in the same package, which has an intent filter for `WATCH_FACE_EDITOR` (with com.google.android.wearable.watchface.category.WEARABLE_CONFIGURATION if minSdkVersion is less than 30).  \n\nIssue id: WearableActionDuplicate  \n\n<https://developer.android.com/training/wearables/watch-faces/configuration>"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "AndroidLintWearableActionDuplicate",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Android Lint: Correctness",
                      "index": 5,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "AndroidLintWearBackNavigation",
                "shortDescription": {
                  "text": "Wear OS: Disabling Back navigation"
                },
                "fullDescription": {
                  "text": "Wear: Disabling Back navigation Disabling swipe-to-dismiss is generally not recommended for Wear applications because the user expects to dismiss any screen with a swipe. If your activity does not require swipe-to-dismiss to be disabled, the recommendation is to remove the 'android:windowSwipeToDismiss' attribute from your theme declaration. Issue id: WearBackNavigation https://developer.android.com/training/wearables/views/exit#disabling-swipe-to-dismiss",
                  "markdown": "Wear: Disabling Back navigation  \n\nDisabling swipe-to-dismiss is generally not recommended for Wear applications because the user expects to dismiss any screen with a swipe. If your activity does not require swipe-to-dismiss to be disabled, the recommendation is to remove the `android:windowSwipeToDismiss` attribute from your theme declaration.  \n\nIssue id: WearBackNavigation  \n\n<https://developer.android.com/training/wearables/views/exit#disabling-swipe-to-dismiss>"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "AndroidLintWearBackNavigation",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Android Lint: Usability",
                      "index": 42,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "AndroidLintUnsafeDynamicallyLoadedCode",
                "shortDescription": {
                  "text": "load used to dynamically load code"
                },
                "fullDescription": {
                  "text": "'load' used to dynamically load code Dynamically loading code from locations other than the application's library directory or the Android platform's built-in library directories is dangerous, as there is an increased risk that the code could have been tampered with. Applications should use 'loadLibrary' when possible, which provides increased assurance that libraries are loaded from one of these safer locations. Application developers should use the features of their development environment to place application native libraries into the lib directory of their compiled APKs. Issue id: UnsafeDynamicallyLoadedCode",
                  "markdown": "`load` used to dynamically load code  \n\nDynamically loading code from locations other than the application's library directory or the Android platform's built-in library directories is dangerous, as there is an increased risk that the code could have been tampered with. Applications should use `loadLibrary` when possible, which provides increased assurance that libraries are loaded from one of these safer locations. Application developers should use the features of their development environment to place application native libraries into the lib directory of their compiled APKs.  \n\nIssue id: UnsafeDynamicallyLoadedCode"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "AndroidLintUnsafeDynamicallyLoadedCode",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Android Lint: Security",
                      "index": 44,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "AndroidLintUseOfBundledGooglePlayServices",
                "shortDescription": {
                  "text": "Use of bundled version of Google Play services"
                },
                "fullDescription": {
                  "text": "Use of bundled version of Google Play services Google Play services SDK's can be selectively included, which enables a smaller APK size. Consider declaring dependencies on individual Google Play services SDK's. If you are using Firebase API's (https://firebase.google.com/docs/android/setup), Android Studio's Tools → Firebase assistant window can automatically add just the dependencies needed for each feature. Issue id: UseOfBundledGooglePlayServices https://developers.google.com/android/guides/setup#split",
                  "markdown": "Use of bundled version of Google Play services  \n\nGoogle Play services SDK's can be selectively included, which enables a smaller APK size. Consider declaring dependencies on individual Google Play services SDK's. If you are using Firebase API's (<https://firebase.google.com/docs/android/setup>), Android Studio's Tools → Firebase assistant window can automatically add just the dependencies needed for each feature.  \n\nIssue id: UseOfBundledGooglePlayServices  \n\n<https://developers.google.com/android/guides/setup#split>"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "AndroidLintUseOfBundledGooglePlayServices",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Android Lint: Performance",
                      "index": 14,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "AndroidLintSuspiciousImport",
                "shortDescription": {
                  "text": "'import android.R' statement"
                },
                "fullDescription": {
                  "text": "''import android.R'' statement Importing 'android.R' is usually not intentional; it sometimes happens when you use an IDE and ask it to automatically add imports at a time when your project's R class it not present. Once the import is there you might get a lot of \"confusing\" error messages because of course the fields available on 'android.R' are not the ones you'd expect from just looking at your own 'R' class. Issue id: SuspiciousImport",
                  "markdown": "'`import android.R`' statement  \n\nImporting `android.R` is usually not intentional; it sometimes happens when you use an IDE and ask it to automatically add imports at a time when your project's R class it not present.  \n\nOnce the import is there you might get a lot of \"confusing\" error messages because of course the fields available on `android.R` are not the ones you'd expect from just looking at your own `R` class.  \n\nIssue id: SuspiciousImport"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "AndroidLintSuspiciousImport",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Android Lint: Correctness",
                      "index": 5,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "AndroidLintPrivateApi",
                "shortDescription": {
                  "text": "Using Private APIs"
                },
                "fullDescription": {
                  "text": "Using Private APIs Using reflection to access hidden/private Android APIs is not safe; it will often not work on devices from other vendors, and it may suddenly stop working (if the API is removed) or crash spectacularly (if the API behavior changes, since there are no guarantees for compatibility). Issue id: PrivateApi https://developer.android.com/preview/restrictions-non-sdk-interfaces",
                  "markdown": "Using Private APIs  \n\nUsing reflection to access hidden/private Android APIs is not safe; it will often not work on devices from other vendors, and it may suddenly stop working (if the API is removed) or crash spectacularly (if the API behavior changes, since there are no guarantees for compatibility).  \n\nIssue id: PrivateApi  \n\n<https://developer.android.com/preview/restrictions-non-sdk-interfaces>"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "AndroidLintPrivateApi",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Android Lint: Correctness",
                      "index": 5,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "AndroidLintWatchFaceForAndroidX",
                "shortDescription": {
                  "text": "AndroidX watch faces must use action WATCH_FACE_EDITOR"
                },
                "fullDescription": {
                  "text": "AndroidX watch faces must use action 'WATCH_FACE_EDITOR' If the package depends on 'androidx.wear:wear-watchface', and an AndroidX watch face declares the 'wearableConfigurationAction' metadata, its value should be 'androidx.wear.watchface.editor.action.WATCH_FACE_EDITOR'. Issue id: WatchFaceForAndroidX https://developer.android.com/training/wearables/watch-faces/configuration",
                  "markdown": "AndroidX watch faces must use action `WATCH_FACE_EDITOR`  \n\nIf the package depends on `androidx.wear:wear-watchface`, and an AndroidX watch face declares the `wearableConfigurationAction` metadata, its value should be `androidx.wear.watchface.editor.action.WATCH_FACE_EDITOR`.  \n\nIssue id: WatchFaceForAndroidX  \n\n<https://developer.android.com/training/wearables/watch-faces/configuration>"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "AndroidLintWatchFaceForAndroidX",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Android Lint: Correctness",
                      "index": 5,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "AndroidLintUnsafeIntentLaunch",
                "shortDescription": {
                  "text": "Launched Unsafe Intent"
                },
                "fullDescription": {
                  "text": "Launched Unsafe Intent Intent that potentially could come from an untrusted source should not be launched from an unprotected component without first being sanitized. See this support FAQ for details: https://support.google.com/faqs/answer/9267555 Issue id: UnsafeIntentLaunch",
                  "markdown": "Launched Unsafe Intent  \n\nIntent that potentially could come from an untrusted source should not be launched from an unprotected component without first being sanitized. See this support FAQ for details: <https://support.google.com/faqs/answer/9267555>  \n\nIssue id: UnsafeIntentLaunch"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "AndroidLintUnsafeIntentLaunch",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Android Lint: Security",
                      "index": 44,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "AndroidLintPermissionImpliesUnsupportedChromeOsHardware",
                "shortDescription": {
                  "text": "Permission Implies Unsupported Chrome OS Hardware"
                },
                "fullDescription": {
                  "text": "Permission Implies Unsupported Chrome OS Hardware The '<uses-permission>' element should not require a permission that implies an unsupported large screen hardware feature. Google Play assumes that certain hardware related permissions indicate that the underlying hardware features are required by default. To fix the issue, consider declaring the corresponding <uses-feature> element with 'required=\"false\"' attribute. Issue id: PermissionImpliesUnsupportedChromeOsHardware https://developer.android.com/topic/arc/manifest.html#implied-features",
                  "markdown": "Permission Implies Unsupported Chrome OS Hardware  \n\nThe `<uses-permission>` element should not require a permission that implies an unsupported large screen hardware feature. Google Play assumes that certain hardware related permissions indicate that the underlying hardware features are required by default. To fix the issue, consider declaring the corresponding \\<uses-feature\\> element with `required=\"false\"` attribute.  \n\nIssue id: PermissionImpliesUnsupportedChromeOsHardware  \n\n<https://developer.android.com/topic/arc/manifest.html#implied-features>"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "error",
                  "parameters": {
                    "suppressToolId": "AndroidLintPermissionImpliesUnsupportedChromeOsHardware",
                    "ideaSeverity": "ERROR",
                    "qodanaSeverity": "Critical"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Android Lint: Correctness",
                      "index": 5,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "AndroidLintEditedTargetSdkVersion",
                "shortDescription": {
                  "text": "Manually Edited TargetSdkVersion"
                },
                "fullDescription": {
                  "text": "Manually Edited TargetSdkVersion Updating the 'targetSdkVersion' of an app is seemingly easy: just increment the 'targetSdkVersion' number in the manifest file! But that's not actually safe. The 'targetSdkVersion' controls a wide range of behaviors that change from release to release, and to update, you should carefully consult the documentation to see what has changed, how your app may need to adjust, and then of course, carefully test everything. In new versions of Android Studio, there is a special migration assistant, available from the tools menu (and as a quickfix from this lint warning) which analyzes your specific app and filters the set of applicable migration steps to those needed for your app. This lint check does something very simple: it just detects whether it looks like you've manually edited the targetSdkVersion field in a build.gradle file. Obviously, as part of doing the above careful steps, you may end up editing the value, which would trigger the check -- and it's safe to ignore it; this lint check only runs in the IDE, not from the command line; it's sole purpose to bring awareness to the (many) developers who haven't been aware of this issue and have just bumped the targetSdkVersion, recompiled, and uploaded their updated app to the Google Play Store, sometimes leading to crashes or other problems on newer devices. Issue id: EditedTargetSdkVersion",
                  "markdown": "Manually Edited TargetSdkVersion  \n\nUpdating the `targetSdkVersion` of an app is seemingly easy: just increment the `targetSdkVersion` number in the manifest file!  \n\nBut that's not actually safe. The `targetSdkVersion` controls a wide range of behaviors that change from release to release, and to update, you should carefully consult the documentation to see what has changed, how your app may need to adjust, and then of course, carefully test everything.  \n\nIn new versions of Android Studio, there is a special migration assistant, available from the tools menu (and as a quickfix from this lint warning) which analyzes your specific app and filters the set of applicable migration steps to those needed for your app.  \n\nThis lint check does something very simple: it just detects whether it looks like you've manually edited the targetSdkVersion field in a build.gradle file. Obviously, as part of doing the above careful steps, you may end up editing the value, which would trigger the check -- and it's safe to ignore it; this lint check *only* runs in the IDE, not from the command line; it's sole purpose to bring *awareness* to the (many) developers who haven't been aware of this issue and have just bumped the targetSdkVersion, recompiled, and uploaded their updated app to the Google Play Store, sometimes leading to crashes or other problems on newer devices.  \n\nIssue id: EditedTargetSdkVersion"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "error",
                  "parameters": {
                    "suppressToolId": "AndroidLintEditedTargetSdkVersion",
                    "ideaSeverity": "ERROR",
                    "qodanaSeverity": "Critical"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Android Lint: Correctness",
                      "index": 5,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "AndroidLintSetWorldReadable",
                "shortDescription": {
                  "text": "File.setReadable() used to make file world-readable"
                },
                "fullDescription": {
                  "text": "'File.setReadable()' used to make file world-readable Setting files world-readable is very dangerous, and likely to cause security holes in applications. It is strongly discouraged; instead, applications should use more formal mechanisms for interactions such as 'ContentProvider', 'BroadcastReceiver', and 'Service'. Issue id: SetWorldReadable https://goo.gle/SetWorldReadable",
                  "markdown": "`File.setReadable()` used to make file world-readable  \n\nSetting files world-readable is very dangerous, and likely to cause security holes in applications. It is strongly discouraged; instead, applications should use more formal mechanisms for interactions such as `ContentProvider`, `BroadcastReceiver`, and `Service`.  \n\nIssue id: SetWorldReadable  \n\n<https://goo.gle/SetWorldReadable>"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "AndroidLintSetWorldReadable",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Android Lint: Security",
                      "index": 44,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "AndroidLintLocaleFolder",
                "shortDescription": {
                  "text": "Wrong locale name"
                },
                "fullDescription": {
                  "text": "Wrong locale name From the 'java.util.Locale' documentation: \"Note that Java uses several deprecated two-letter codes. The Hebrew (\"he\") language code is rewritten as \"iw\", Indonesian (\"id\") as \"in\", and Yiddish (\"yi\") as \"ji\". This rewriting happens even if you construct your own Locale object, not just for instances returned by the various lookup methods. Because of this, if you add your localized resources in for example 'values-he' they will not be used, since the system will look for 'values-iw' instead. To work around this, place your resources in a 'values' folder using the deprecated language code instead. Issue id: LocaleFolder https://developer.android.com/reference/java/util/Locale.html",
                  "markdown": "Wrong locale name  \n\nFrom the `java.util.Locale` documentation:  \n\"Note that Java uses several deprecated two-letter codes. The Hebrew (\"he\") language code is rewritten as \"iw\", Indonesian (\"id\") as \"in\", and Yiddish (\"yi\") as \"ji\". This rewriting happens even if you construct your own Locale object, not just for instances returned by the various lookup methods.  \n\nBecause of this, if you add your localized resources in for example `values-he` they will not be used, since the system will look for `values-iw` instead.  \n\nTo work around this, place your resources in a `values` folder using the deprecated language code instead.  \n\nIssue id: LocaleFolder  \n\n<https://developer.android.com/reference/java/util/Locale.html>"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "AndroidLintLocaleFolder",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Android Lint: Correctness",
                      "index": 5,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "AndroidLintBuildListAdds",
                "shortDescription": {
                  "text": "Missing add call in buildList"
                },
                "fullDescription": {
                  "text": "Missing 'add' call in 'buildList' The 'buildList { }' standard library function is a convenient way to build lists, but you need to actually call 'add' on the items. Issue id: BuildListAdds",
                  "markdown": "Missing `add` call in `buildList`  \n\nThe `buildList { }` standard library function is a convenient way to build lists, but you need to actually call `add` on the items.  \n\nIssue id: BuildListAdds"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "AndroidLintBuildListAdds",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Android Lint: Correctness",
                      "index": 5,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "AndroidLintManifestOrder",
                "shortDescription": {
                  "text": "Incorrect order of elements in manifest"
                },
                "fullDescription": {
                  "text": "Incorrect order of elements in manifest The '<application>' tag should appear after the elements which declare which version you need, which features you need, which libraries you need, and so on. In the past there have been subtle bugs (such as themes not getting applied correctly) when the '<application>' tag appears before some of these other elements, so it's best to order your manifest in the logical dependency order. Issue id: ManifestOrder",
                  "markdown": "Incorrect order of elements in manifest  \n\nThe `<application>` tag should appear after the elements which declare which version you need, which features you need, which libraries you need, and so on. In the past there have been subtle bugs (such as themes not getting applied correctly) when the `<application>` tag appears before some of these other elements, so it's best to order your manifest in the logical dependency order.  \n\nIssue id: ManifestOrder"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "AndroidLintManifestOrder",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Android Lint: Correctness",
                      "index": 5,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "AndroidLintAcceptsUserCertificates",
                "shortDescription": {
                  "text": "Allowing User Certificates"
                },
                "fullDescription": {
                  "text": "Allowing User Certificates Allowing user certificates could allow eavesdroppers to intercept data sent by your app, 'which could impact the privacy of your users. Consider nesting your app's 'trust-anchors' inside a '<debug-overrides>' element to make sure they are only available when 'android:debuggable' is set to '\"true\"'. Issue id: AcceptsUserCertificates https://goo.gle/AcceptsUserCertificates https://developer.android.com/training/articles/security-config#TrustingDebugCa",
                  "markdown": "Allowing User Certificates  \n\nAllowing user certificates could allow eavesdroppers to intercept data sent by your app, 'which could impact the privacy of your users. Consider nesting your app's `trust-anchors` inside a `<debug-overrides>` element to make sure they are only available when `android:debuggable` is set to `\"true\"`.  \n\nIssue id: AcceptsUserCertificates  \n\n<https://goo.gle/AcceptsUserCertificates>  \n<https://developer.android.com/training/articles/security-config#TrustingDebugCa>"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "AndroidLintAcceptsUserCertificates",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Android Lint: Security",
                      "index": 44,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "AndroidLintMissingPermission",
                "shortDescription": {
                  "text": "Missing Permissions"
                },
                "fullDescription": {
                  "text": "Missing Permissions This check scans through your code and libraries and looks at the APIs being used, and checks this against the set of permissions required to access those APIs. If the code using those APIs is called at runtime, then the program will crash. Furthermore, for permissions that are revocable (with 'targetSdkVersion' 23), client code must also be prepared to handle the calls throwing an exception if the user rejects the request for permission at runtime. Issue id: MissingPermission",
                  "markdown": "Missing Permissions  \n\nThis check scans through your code and libraries and looks at the APIs being used, and checks this against the set of permissions required to access those APIs. If the code using those APIs is called at runtime, then the program will crash.  \n\nFurthermore, for permissions that are revocable (with `targetSdkVersion` 23), client code must also be prepared to handle the calls throwing an exception if the user rejects the request for permission at runtime.  \n\nIssue id: MissingPermission"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "error",
                  "parameters": {
                    "suppressToolId": "AndroidLintMissingPermission",
                    "ideaSeverity": "ERROR",
                    "qodanaSeverity": "Critical"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Android Lint: Correctness",
                      "index": 5,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "AndroidLintMockLocation",
                "shortDescription": {
                  "text": "Using mock location provider in production"
                },
                "fullDescription": {
                  "text": "Using mock location provider in production Using a mock location provider (by requiring the permission 'android.permission.ACCESS_MOCK_LOCATION') should only be done in debug builds (or from tests). In Gradle projects, that means you should only request this permission in a test or debug source set specific manifest file. To fix this, create a new manifest file in the debug folder and move the '<uses-permission>' element there. A typical path to a debug manifest override file in a Gradle project is src/debug/AndroidManifest.xml. Issue id: MockLocation",
                  "markdown": "Using mock location provider in production  \n\nUsing a mock location provider (by requiring the permission `android.permission.ACCESS_MOCK_LOCATION`) should **only** be done in debug builds (or from tests). In Gradle projects, that means you should only request this permission in a test or debug source set specific manifest file.  \n\nTo fix this, create a new manifest file in the debug folder and move the `<uses-permission>` element there. A typical path to a debug manifest override file in a Gradle project is src/debug/AndroidManifest.xml.  \n\nIssue id: MockLocation"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "error",
                  "parameters": {
                    "suppressToolId": "AndroidLintMockLocation",
                    "ideaSeverity": "ERROR",
                    "qodanaSeverity": "Critical"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Android Lint: Correctness",
                      "index": 5,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "AndroidElementNotAllowed",
                "shortDescription": {
                  "text": "Android XML element is not allowed"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "AndroidElementNotAllowed",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Android",
                      "index": 83,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "AndroidLintEnqueueWork",
                "shortDescription": {
                  "text": "WorkManager Enqueue"
                },
                "fullDescription": {
                  "text": "WorkManager Enqueue 'WorkContinuations' cannot be enqueued automatically. You must call 'enqueue()' on a 'WorkContinuation' to have it and its parent continuations enqueued inside 'WorkManager'. Issue id: EnqueueWork",
                  "markdown": "WorkManager Enqueue  \n\n`WorkContinuations` cannot be enqueued automatically. You must call `enqueue()` on a `WorkContinuation` to have it and its parent continuations enqueued inside `WorkManager`.  \n\nIssue id: EnqueueWork"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "AndroidLintEnqueueWork",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Android Lint: Correctness",
                      "index": 5,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "AndroidLintGradleDependency",
                "shortDescription": {
                  "text": "Obsolete Gradle Dependency"
                },
                "fullDescription": {
                  "text": "Obsolete Gradle Dependency This detector looks for usages of libraries where the version you are using is not the current stable release. Using older versions is fine, and there are cases where you deliberately want to stick with an older version. However, you may simply not be aware that a more recent version is available, and that is what this lint check helps find. Issue id: GradleDependency",
                  "markdown": "Obsolete Gradle Dependency  \n\nThis detector looks for usages of libraries where the version you are using is not the current stable release. Using older versions is fine, and there are cases where you deliberately want to stick with an older version. However, you may simply not be aware that a more recent version is available, and that is what this lint check helps find.  \n\nIssue id: GradleDependency"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "AndroidLintGradleDependency",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Android Lint: Correctness",
                      "index": 5,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "AndroidLintKtxExtensionAvailable",
                "shortDescription": {
                  "text": "KTX Extension Available"
                },
                "fullDescription": {
                  "text": "KTX Extension Available Android KTX extensions augment some libraries with support for modern Kotlin language features like extension functions, extension properties, lambdas, named parameters, coroutines, and more. In Kotlin projects, use the KTX version of a library by replacing the dependency in your 'build.gradle' file. For example, you can replace 'androidx.fragment:fragment' with 'androidx.fragment:fragment-ktx'. Issue id: KtxExtensionAvailable https://developer.android.com/kotlin/ktx",
                  "markdown": "KTX Extension Available  \n\nAndroid KTX extensions augment some libraries with support for modern Kotlin language features like extension functions, extension properties, lambdas, named parameters, coroutines, and more.  \n\nIn Kotlin projects, use the KTX version of a library by replacing the dependency in your `build.gradle` file. For example, you can replace `androidx.fragment:fragment` with `androidx.fragment:fragment-ktx`.  \n\nIssue id: KtxExtensionAvailable  \n\n<https://developer.android.com/kotlin/ktx>"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "note",
                  "parameters": {
                    "suppressToolId": "AndroidLintKtxExtensionAvailable",
                    "ideaSeverity": "INFO",
                    "qodanaSeverity": "Info"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Android Lint: Productivity",
                      "index": 103,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "AndroidDomInspection",
                "shortDescription": {
                  "text": "Android Resources Validation"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "error",
                  "parameters": {
                    "suppressToolId": "AndroidDomInspection",
                    "ideaSeverity": "ERROR",
                    "qodanaSeverity": "Critical"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Android",
                      "index": 83,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "AndroidLintInsecureBaseConfiguration",
                "shortDescription": {
                  "text": "Insecure Base Configuration"
                },
                "fullDescription": {
                  "text": "Insecure Base Configuration Permitting cleartext traffic could allow eavesdroppers to intercept data sent by your app, which impacts the privacy of your users. Consider only allowing encrypted traffic by setting the 'cleartextTrafficPermitted' tag to '\"false\"'. Issue id: InsecureBaseConfiguration https://goo.gle/InsecureBaseConfiguration https://developer.android.com/preview/features/security-config.html",
                  "markdown": "Insecure Base Configuration  \n\nPermitting cleartext traffic could allow eavesdroppers to intercept data sent by your app, which impacts the privacy of your users. Consider only allowing encrypted traffic by setting the `cleartextTrafficPermitted` tag to `\"false\"`.  \n\nIssue id: InsecureBaseConfiguration  \n\n<https://goo.gle/InsecureBaseConfiguration>  \n<https://developer.android.com/preview/features/security-config.html>"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "AndroidLintInsecureBaseConfiguration",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Android Lint: Security",
                      "index": 44,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "AndroidLintInlinedApi",
                "shortDescription": {
                  "text": "Using inlined constants on older versions"
                },
                "fullDescription": {
                  "text": "Using inlined constants on older versions This check scans through all the Android API field references in the application and flags certain constants, such as static final integers and Strings, which were introduced in later versions. These will actually be copied into the class files rather than being referenced, which means that the value is available even when running on older devices. In some cases that's fine, and in other cases it can result in a runtime crash or incorrect behavior. It depends on the context, so consider the code carefully and decide whether it's safe and can be suppressed or whether the code needs to be guarded. If you really want to use this API and don't need to support older devices just set the 'minSdkVersion' in your 'build.gradle' or 'AndroidManifest.xml' files. If your code is deliberately accessing newer APIs, and you have ensured (e.g. with conditional execution) that this code will only ever be called on a supported platform, then you can annotate your class or method with the '@TargetApi' annotation specifying the local minimum SDK to apply, such as '@TargetApi(11)', such that this check considers 11 rather than your manifest file's minimum SDK as the required API level. Issue id: InlinedApi",
                  "markdown": "Using inlined constants on older versions  \n\nThis check scans through all the Android API field references in the application and flags certain constants, such as static final integers and Strings, which were introduced in later versions. These will actually be copied into the class files rather than being referenced, which means that the value is available even when running on older devices. In some cases that's fine, and in other cases it can result in a runtime crash or incorrect behavior. It depends on the context, so consider the code carefully and decide whether it's safe and can be suppressed or whether the code needs to be guarded.  \n\nIf you really want to use this API and don't need to support older devices just set the `minSdkVersion` in your `build.gradle` or `AndroidManifest.xml` files.  \n\nIf your code is **deliberately** accessing newer APIs, and you have ensured (e.g. with conditional execution) that this code will only ever be called on a supported platform, then you can annotate your class or method with the `@TargetApi` annotation specifying the local minimum SDK to apply, such as `@TargetApi(11)`, such that this check considers 11 rather than your manifest file's minimum SDK as the required API level.  \n\nIssue id: InlinedApi"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "AndroidLintInlinedApi",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Android Lint: Correctness",
                      "index": 5,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "AndroidLintInvalidUsesTagAttribute",
                "shortDescription": {
                  "text": "Invalid name attribute for uses element"
                },
                "fullDescription": {
                  "text": "Invalid 'name' attribute for 'uses' element The <uses> element in '<automotiveApp>' should contain a valid value for the 'name' attribute. Valid values are 'media', 'notification', or 'sms'. Issue id: InvalidUsesTagAttribute https://developer.android.com/training/auto/start/index.html#auto-metadata",
                  "markdown": "Invalid `name` attribute for `uses` element  \n\nThe \\<uses\\> element in `<automotiveApp>` should contain a valid value for the `name` attribute. Valid values are `media`, `notification`, or `sms`.  \n\nIssue id: InvalidUsesTagAttribute  \n\n<https://developer.android.com/training/auto/start/index.html#auto-metadata>"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "error",
                  "parameters": {
                    "suppressToolId": "AndroidLintInvalidUsesTagAttribute",
                    "ideaSeverity": "ERROR",
                    "qodanaSeverity": "Critical"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Android Lint: Correctness",
                      "index": 5,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "AndroidLintViewHolder",
                "shortDescription": {
                  "text": "View Holder Candidates"
                },
                "fullDescription": {
                  "text": "View Holder Candidates When implementing a view Adapter, you should avoid unconditionally inflating a new layout; if an available item is passed in for reuse, you should try to use that one instead. This helps make for example 'ListView' scrolling much smoother. Issue id: ViewHolder https://developer.android.com/guide/topics/ui/layout/recyclerview#ViewHolder",
                  "markdown": "View Holder Candidates  \n\nWhen implementing a view Adapter, you should avoid unconditionally inflating a new layout; if an available item is passed in for reuse, you should try to use that one instead. This helps make for example `ListView` scrolling much smoother.  \n\nIssue id: ViewHolder  \n\n<https://developer.android.com/guide/topics/ui/layout/recyclerview#ViewHolder>"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "AndroidLintViewHolder",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Android Lint: Performance",
                      "index": 14,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "AndroidUnknownAttribute",
                "shortDescription": {
                  "text": "Unknown Android XML attribute"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "AndroidUnknownAttribute",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Android",
                      "index": 83,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "AndroidLintTrustAllX509TrustManager",
                "shortDescription": {
                  "text": "Insecure TLS/SSL trust manager"
                },
                "fullDescription": {
                  "text": "Insecure TLS/SSL trust manager This check looks for X509TrustManager implementations whose 'checkServerTrusted' or 'checkClientTrusted' methods do nothing (thus trusting any certificate chain) which could result in insecure network traffic caused by trusting arbitrary TLS/SSL certificates presented by peers. Issue id: TrustAllX509TrustManager https://goo.gle/TrustAllX509TrustManager",
                  "markdown": "Insecure TLS/SSL trust manager  \n\nThis check looks for X509TrustManager implementations whose `checkServerTrusted` or `checkClientTrusted` methods do nothing (thus trusting any certificate chain) which could result in insecure network traffic caused by trusting arbitrary TLS/SSL certificates presented by peers.  \n\nIssue id: TrustAllX509TrustManager  \n\n<https://goo.gle/TrustAllX509TrustManager>"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "AndroidLintTrustAllX509TrustManager",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Android Lint: Security",
                      "index": 44,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "AndroidLintParcelCreator",
                "shortDescription": {
                  "text": "Missing Parcelable CREATOR field"
                },
                "fullDescription": {
                  "text": "Missing Parcelable 'CREATOR' field According to the 'Parcelable' interface documentation, \"Classes implementing the Parcelable interface must also have a static field called 'CREATOR', which is an object implementing the 'Parcelable.Creator' interface.\" Issue id: ParcelCreator https://developer.android.com/reference/android/os/Parcelable.html",
                  "markdown": "Missing Parcelable `CREATOR` field  \n\nAccording to the `Parcelable` interface documentation, \"Classes implementing the Parcelable interface must also have a static field called `CREATOR`, which is an object implementing the `Parcelable.Creator` interface.\"  \n\nIssue id: ParcelCreator  \n\n<https://developer.android.com/reference/android/os/Parcelable.html>"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "error",
                  "parameters": {
                    "suppressToolId": "AndroidLintParcelCreator",
                    "ideaSeverity": "ERROR",
                    "qodanaSeverity": "Critical"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Android Lint: Correctness",
                      "index": 5,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "AndroidLintUnknownNullness",
                "shortDescription": {
                  "text": "Unknown nullness"
                },
                "fullDescription": {
                  "text": "Unknown nullness To improve referencing this code from Kotlin, consider adding explicit nullness information here with either '@NonNull' or '@Nullable'. Issue id: UnknownNullness Available options: ignore-deprecated (default is false): Whether to ignore classes and members that have been annotated with '@Deprecated'. Normally this lint check will flag all unannotated elements, but by setting this option to 'true' it will skip any deprecated elements. To configure this option, use a 'lint.xml' file with an <option> like this: <lint>\n    <issue id=\"UnknownNullness\">\n        <option name=\"ignore-deprecated\" value=\"false\" />\n    </issue>\n</lint>\n https://developer.android.com/kotlin/interop#nullability_annotations",
                  "markdown": "Unknown nullness  \n\nTo improve referencing this code from Kotlin, consider adding explicit nullness information here with either `@NonNull` or `@Nullable`.  \n\nIssue id: UnknownNullness  \n\nAvailable options:  \n\n**ignore-deprecated** (default is false):  \nWhether to ignore classes and members that have been annotated with `@Deprecated`.  \n\nNormally this lint check will flag all unannotated elements, but by setting this option to `true` it will skip any deprecated elements.  \n\nTo configure this option, use a `lint.xml` file with an \\<option\\> like this:  \n\n```\n<lint>\n    <issue id=\"UnknownNullness\">\n        <option name=\"ignore-deprecated\" value=\"false\" />\n    </issue>\n</lint>\n```\n\n<https://developer.android.com/kotlin/interop#nullability_annotations>"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "AndroidLintUnknownNullness",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Android Lint: Interoperability",
                      "index": 39,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "AndroidLintSelectedPhotoAccess",
                "shortDescription": {
                  "text": "Behavior change when requesting photo library access"
                },
                "fullDescription": {
                  "text": "Behavior change when requesting photo library access Selected Photo Access is a new ability for users to share partial access to their photo library when apps request access to their device storage on Android 14+. Instead of letting the system manage the selection lifecycle, we recommend you adapt your app to handle partial access to the photo library. Issue id: SelectedPhotoAccess https://developer.android.com/about/versions/14/changes/partial-photo-video-access",
                  "markdown": "Behavior change when requesting photo library access  \n\nSelected Photo Access is a new ability for users to share partial access to their photo library when apps request access to their device storage on Android 14+.  \n\nInstead of letting the system manage the selection lifecycle, we recommend you adapt your app to handle partial access to the photo library.  \n\nIssue id: SelectedPhotoAccess  \n\n<https://developer.android.com/about/versions/14/changes/partial-photo-video-access>"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "AndroidLintSelectedPhotoAccess",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Android Lint: Correctness",
                      "index": 5,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "AndroidLintMissingInflatedId",
                "shortDescription": {
                  "text": "ID not found in inflated resource"
                },
                "fullDescription": {
                  "text": "ID not found in inflated resource Checks calls to layout inflation and makes sure that the referenced ids are found in the corresponding layout (or at least one of them, if the layout has multiple configurations.) Issue id: MissingInflatedId",
                  "markdown": "ID not found in inflated resource  \n\nChecks calls to layout inflation and makes sure that the referenced ids are found in the corresponding layout (or at least one of them, if the layout has multiple configurations.)  \n\nIssue id: MissingInflatedId"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "error",
                  "parameters": {
                    "suppressToolId": "AndroidLintMissingInflatedId",
                    "ideaSeverity": "ERROR",
                    "qodanaSeverity": "Critical"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Android Lint: Correctness",
                      "index": 5,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "AndroidLintOpenForTesting",
                "shortDescription": {
                  "text": "Extending API only allowed from tests"
                },
                "fullDescription": {
                  "text": "Extending API only allowed from tests Classes or methods annotated with '@OpenForTesting' are only allowed to be subclassed or overridden from unit tests. Issue id: OpenForTesting",
                  "markdown": "Extending API only allowed from tests  \n\nClasses or methods annotated with `@OpenForTesting` are only allowed to be subclassed or overridden from unit tests.  \n\nIssue id: OpenForTesting"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "error",
                  "parameters": {
                    "suppressToolId": "AndroidLintOpenForTesting",
                    "ideaSeverity": "ERROR",
                    "qodanaSeverity": "Critical"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Android Lint: Correctness",
                      "index": 5,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "AndroidLintVectorDrawableCompat",
                "shortDescription": {
                  "text": "Using VectorDrawableCompat"
                },
                "fullDescription": {
                  "text": "Using VectorDrawableCompat To use VectorDrawableCompat, you need to make two modifications to your project. First, set 'android.defaultConfig.vectorDrawables.useSupportLibrary = true' in your 'build.gradle' file, and second, use 'app:srcCompat' instead of 'android:src' to refer to vector drawables. Issue id: VectorDrawableCompat https://developer.android.com/guide/topics/graphics/vector-drawable-resources https://medium.com/androiddevelopers/using-vector-assets-in-android-apps-4318fd662eb9",
                  "markdown": "Using VectorDrawableCompat  \n\nTo use VectorDrawableCompat, you need to make two modifications to your project. First, set `android.defaultConfig.vectorDrawables.useSupportLibrary = true` in your `build.gradle` file, and second, use `app:srcCompat` instead of `android:src` to refer to vector drawables.  \n\nIssue id: VectorDrawableCompat  \n\n<https://developer.android.com/guide/topics/graphics/vector-drawable-resources>  \n<https://medium.com/androiddevelopers/using-vector-assets-in-android-apps-4318fd662eb9>"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "error",
                  "parameters": {
                    "suppressToolId": "AndroidLintVectorDrawableCompat",
                    "ideaSeverity": "ERROR",
                    "qodanaSeverity": "Critical"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Android Lint: Correctness",
                      "index": 5,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "AndroidLintUseSdkSuppress",
                "shortDescription": {
                  "text": "Using @SdkSuppress instead of @RequiresApi"
                },
                "fullDescription": {
                  "text": "Using '@SdkSuppress' instead of '@RequiresApi' In tests, you should be using '@SdkSuppress' instead of '@RequiresApi'. The '@RequiresApi' annotation is used to propagate a version requirement out to the caller of the API -- but the testing framework is only looking for '@SdkSuppress', which it uses to skip tests that are intended for newer versions. Issue id: UseSdkSuppress",
                  "markdown": "Using `@SdkSuppress` instead of `@RequiresApi`  \n\nIn tests, you should be using `@SdkSuppress` instead of `@RequiresApi`. The `@RequiresApi` annotation is used to propagate a version requirement out to the caller of the API -- but the testing framework is only looking for `@SdkSuppress`, which it uses to skip tests that are intended for newer versions.  \n\nIssue id: UseSdkSuppress"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "error",
                  "parameters": {
                    "suppressToolId": "AndroidLintUseSdkSuppress",
                    "ideaSeverity": "ERROR",
                    "qodanaSeverity": "Critical"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Android Lint: Correctness",
                      "index": 5,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "AndroidLintInconsistentArrays",
                "shortDescription": {
                  "text": "Inconsistencies in array element counts"
                },
                "fullDescription": {
                  "text": "Inconsistencies in array element counts When an array is translated in a different locale, it should normally have the same number of elements as the original array. When adding or removing elements to an array, it is easy to forget to update all the locales, and this lint warning finds inconsistencies like these. Note however that there may be cases where you really want to declare a different number of array items in each configuration (for example where the array represents available options, and those options differ for different layout orientations and so on), so use your own judgment to decide if this is really an error. You can suppress this error type if it finds false errors in your project. Issue id: InconsistentArrays",
                  "markdown": "Inconsistencies in array element counts  \n\nWhen an array is translated in a different locale, it should normally have the same number of elements as the original array. When adding or removing elements to an array, it is easy to forget to update all the locales, and this lint warning finds inconsistencies like these.  \n\nNote however that there may be cases where you really want to declare a different number of array items in each configuration (for example where the array represents available options, and those options differ for different layout orientations and so on), so use your own judgment to decide if this is really an error.  \n\nYou can suppress this error type if it finds false errors in your project.  \n\nIssue id: InconsistentArrays"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "AndroidLintInconsistentArrays",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Android Lint: Correctness",
                      "index": 5,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "AndroidLintLogTagMismatch",
                "shortDescription": {
                  "text": "Mismatched Log Tags"
                },
                "fullDescription": {
                  "text": "Mismatched Log Tags When guarding a 'Log.v(tag, ...)' call with 'Log.isLoggable(tag)', the tag passed to both calls should be the same. Similarly, the level passed in to 'Log.isLoggable' should typically match the type of 'Log' call, e.g. if checking level 'Log.DEBUG', the corresponding 'Log' call should be 'Log.d', not 'Log.i'. Issue id: LogTagMismatch",
                  "markdown": "Mismatched Log Tags  \n\nWhen guarding a `Log.v(tag, ...)` call with `Log.isLoggable(tag)`, the tag passed to both calls should be the same. Similarly, the level passed in to `Log.isLoggable` should typically match the type of `Log` call, e.g. if checking level `Log.DEBUG`, the corresponding `Log` call should be `Log.d`, not `Log.i`.  \n\nIssue id: LogTagMismatch"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "error",
                  "parameters": {
                    "suppressToolId": "AndroidLintLogTagMismatch",
                    "ideaSeverity": "ERROR",
                    "qodanaSeverity": "Critical"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Android Lint: Correctness",
                      "index": 5,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "AndroidLintNonResizeableActivity",
                "shortDescription": {
                  "text": "Activity is set to be non resizeable"
                },
                "fullDescription": {
                  "text": "Activity is set to be non resizeable The '<activity>' element should be allowed to be resized to allow users to take advantage of the multi-window environments available on larger screen Android devices. To fix the issue, consider declaring the corresponding activity element with 'resizableActivity=\"true\"' attribute. Issue id: NonResizeableActivity https://developer.android.com/topic/arc/window-management",
                  "markdown": "Activity is set to be non resizeable  \n\nThe `<activity>` element should be allowed to be resized to allow users to take advantage of the multi-window environments available on larger screen Android devices.  \n\nTo fix the issue, consider declaring the corresponding activity element with `resizableActivity=\"true\"` attribute.  \n\nIssue id: NonResizeableActivity  \n\n<https://developer.android.com/topic/arc/window-management>"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "AndroidLintNonResizeableActivity",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Android Lint: Correctness",
                      "index": 5,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "AndroidLintWearRecents",
                "shortDescription": {
                  "text": "Wear OS: Recents and app resume"
                },
                "fullDescription": {
                  "text": "Wear OS: Recents and app resume In recents, correctly represent your app's activities, consistent with device implementation. Issue id: WearRecents https://developer.android.com/training/wearables/apps/launcher",
                  "markdown": "Wear OS: Recents and app resume  \n\nIn recents, correctly represent your app's activities, consistent with device implementation.  \n\nIssue id: WearRecents  \n\n<https://developer.android.com/training/wearables/apps/launcher>"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "AndroidLintWearRecents",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Android Lint: Usability",
                      "index": 42,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "AndroidLintGridLayout",
                "shortDescription": {
                  "text": "GridLayout validation"
                },
                "fullDescription": {
                  "text": "GridLayout validation Declaring a layout_row or layout_column that falls outside the declared size of a GridLayout's 'rowCount' or 'columnCount' is usually an unintentional error. Issue id: GridLayout",
                  "markdown": "GridLayout validation  \n\nDeclaring a layout_row or layout_column that falls outside the declared size of a GridLayout's `rowCount` or `columnCount` is usually an unintentional error.  \n\nIssue id: GridLayout"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "error",
                  "parameters": {
                    "suppressToolId": "AndroidLintGridLayout",
                    "ideaSeverity": "ERROR",
                    "qodanaSeverity": "Critical"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Android Lint: Correctness",
                      "index": 5,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "AndroidLintStringFormatCount",
                "shortDescription": {
                  "text": "Formatting argument types incomplete or inconsistent"
                },
                "fullDescription": {
                  "text": "Formatting argument types incomplete or inconsistent When a formatted string takes arguments, it usually needs to reference the same arguments in all translations (or all arguments if there are no translations. There are cases where this is not the case, so this issue is a warning rather than an error by default. However, this usually happens when a language is not translated or updated correctly. Issue id: StringFormatCount",
                  "markdown": "Formatting argument types incomplete or inconsistent  \n\nWhen a formatted string takes arguments, it usually needs to reference the same arguments in all translations (or all arguments if there are no translations.  \n\nThere are cases where this is not the case, so this issue is a warning rather than an error by default. However, this usually happens when a language is not translated or updated correctly.  \n\nIssue id: StringFormatCount"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "AndroidLintStringFormatCount",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Android Lint: Correctness",
                      "index": 5,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "AndroidLintExactAlarm",
                "shortDescription": {
                  "text": "Invalid Usage of Exact Alarms"
                },
                "fullDescription": {
                  "text": "Invalid Usage of Exact Alarms The 'USE_EXACT_ALARM' permission is only available when targeting API level 33 and above. Also, note that this permission is only permitted for apps whose core functionality requires precisely-timed actions for user facing features. Issue id: ExactAlarm https://developer.android.com/training/scheduling/alarms",
                  "markdown": "Invalid Usage of Exact Alarms  \n\nThe `USE_EXACT_ALARM` permission is only available when targeting API level 33 and above. Also, note that this permission is only permitted for apps whose core functionality requires precisely-timed actions for user facing features.  \n\nIssue id: ExactAlarm  \n\n<https://developer.android.com/training/scheduling/alarms>"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "error",
                  "parameters": {
                    "suppressToolId": "AndroidLintExactAlarm",
                    "ideaSeverity": "ERROR",
                    "qodanaSeverity": "Critical"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Android Lint: Correctness",
                      "index": 5,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "AndroidLintUnsupportedChromeOsHardware",
                "shortDescription": {
                  "text": "Unsupported Chrome OS Hardware Feature"
                },
                "fullDescription": {
                  "text": "Unsupported Chrome OS Hardware Feature The '<uses-feature>' element should not require this unsupported large screen hardware feature. Any <uses-feature> not explicitly marked with 'required=\"false\"' is necessary on the device to be installed on. Ensure that any features that might prevent it from being installed on a ChromeOS, large screen, or foldable device are reviewed and marked as not required in the manifest. Issue id: UnsupportedChromeOsHardware https://developer.android.com/topic/arc/manifest.html#incompat-entries",
                  "markdown": "Unsupported Chrome OS Hardware Feature  \n\nThe `<uses-feature>` element should not require this unsupported large screen hardware feature. Any \\<uses-feature\\> not explicitly marked with `required=\"false\"` is necessary on the device to be installed on. Ensure that any features that might prevent it from being installed on a ChromeOS, large screen, or foldable device are reviewed and marked as not required in the manifest.  \n\nIssue id: UnsupportedChromeOsHardware  \n\n<https://developer.android.com/topic/arc/manifest.html#incompat-entries>"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "error",
                  "parameters": {
                    "suppressToolId": "AndroidLintUnsupportedChromeOsHardware",
                    "ideaSeverity": "ERROR",
                    "qodanaSeverity": "Critical"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Android Lint: Correctness",
                      "index": 5,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "AndroidLintUnspecifiedRegisterReceiverFlag",
                "shortDescription": {
                  "text": "Missing registerReceiver() exported flag"
                },
                "fullDescription": {
                  "text": "Missing 'registerReceiver()' exported flag In Android U, all receivers registering for non-system broadcasts are required to include a flag indicating the receiver's exported state. Apps registering for non-system broadcasts should use the 'ContextCompat#registerReceiver' APIs with flags set to either 'RECEIVER_EXPORTED' or 'RECEIVER_NOT_EXPORTED'. If you are not expecting broadcasts from other apps on the device, register your receiver with 'RECEIVER_NOT_EXPORTED' to protect your receiver on all platform releases. Issue id: UnspecifiedRegisterReceiverFlag https://developer.android.com/reference/androidx/core/content/ContextCompat#registerReceiver(android.content.Context,android.content.BroadcastReceiver,android.content.IntentFilter,int)",
                  "markdown": "Missing `registerReceiver()` exported flag  \n\nIn Android U, all receivers registering for non-system broadcasts are required to include a flag indicating the receiver's exported state. Apps registering for non-system broadcasts should use the `ContextCompat#registerReceiver` APIs with flags set to either `RECEIVER_EXPORTED` or `RECEIVER_NOT_EXPORTED`.  \n\nIf you are not expecting broadcasts from other apps on the device, register your receiver with `RECEIVER_NOT_EXPORTED` to protect your receiver on all platform releases.  \n\nIssue id: UnspecifiedRegisterReceiverFlag  \n\n<https://developer.android.com/reference/androidx/core/content/ContextCompat#registerReceiver(android.content.Context,android.content.BroadcastReceiver,android.content.IntentFilter,int)>"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "AndroidLintUnspecifiedRegisterReceiverFlag",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Android Lint: Security",
                      "index": 44,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "AndroidLintCustomPermissionTypo",
                "shortDescription": {
                  "text": "Permission appears to be a custom permission with a typo"
                },
                "fullDescription": {
                  "text": "Permission appears to be a custom permission with a typo This check looks for required permissions that look like custom permissions defined in the same manifest, but aren't, and may be typos. Please double check the permission value you have supplied. Issue id: CustomPermissionTypo https://goo.gle/CustomPermissionTypo",
                  "markdown": "Permission appears to be a custom permission with a typo  \n\nThis check looks for required permissions that *look* like custom permissions defined in the same manifest, but aren't, and may be typos.  \n\nPlease double check the permission value you have supplied.  \n\nIssue id: CustomPermissionTypo  \n\n<https://goo.gle/CustomPermissionTypo>"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "AndroidLintCustomPermissionTypo",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Android Lint: Security",
                      "index": 44,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "AndroidLintGetLocales",
                "shortDescription": {
                  "text": "Locale crash"
                },
                "fullDescription": {
                  "text": "Locale crash This check looks for usage of Lollipop-style locale folders (e.g. 3 letter language codes, or BCP 47 qualifiers) combined with an 'AssetManager#getLocales()' call. This leads to crashes Issue id: GetLocales",
                  "markdown": "Locale crash  \n\nThis check looks for usage of Lollipop-style locale folders (e.g. 3 letter language codes, or BCP 47 qualifiers) combined with an `AssetManager#getLocales()` call. This leads to crashes  \n\nIssue id: GetLocales"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "error",
                  "parameters": {
                    "suppressToolId": "AndroidLintGetLocales",
                    "ideaSeverity": "ERROR",
                    "qodanaSeverity": "Critical"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Android Lint: Correctness",
                      "index": 5,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "AndroidLintContentDescription",
                "shortDescription": {
                  "text": "Image without contentDescription"
                },
                "fullDescription": {
                  "text": "Image without 'contentDescription' Non-textual widgets like ImageViews and ImageButtons should use the 'contentDescription' attribute to specify a textual description of the widget such that screen readers and other accessibility tools can adequately describe the user interface. Note that elements in application screens that are purely decorative and do not provide any content or enable a user action should not have accessibility content descriptions. In this case, set their descriptions to '@null'. If your app's minSdkVersion is 16 or higher, you can instead set these graphical elements' 'android:importantForAccessibility' attributes to 'no'. Note that for text fields, you should not set both the 'hint' and the 'contentDescription' attributes since the hint will never be shown. Just set the 'hint'. Issue id: ContentDescription https://developer.android.com/guide/topics/ui/accessibility/apps#special-cases",
                  "markdown": "Image without `contentDescription`  \n\nNon-textual widgets like ImageViews and ImageButtons should use the `contentDescription` attribute to specify a textual description of the widget such that screen readers and other accessibility tools can adequately describe the user interface.  \n\nNote that elements in application screens that are purely decorative and do not provide any content or enable a user action should not have accessibility content descriptions. In this case, set their descriptions to `@null`. If your app's minSdkVersion is 16 or higher, you can instead set these graphical elements' `android:importantForAccessibility` attributes to `no`.  \n\nNote that for text fields, you should not set both the `hint` and the `contentDescription` attributes since the hint will never be shown. Just set the `hint`.  \n\nIssue id: ContentDescription  \n\n<https://developer.android.com/guide/topics/ui/accessibility/apps#special-cases>"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "AndroidLintContentDescription",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Android Lint: Accessibility",
                      "index": 68,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "AndroidLintButtonCase",
                "shortDescription": {
                  "text": "Cancel/OK dialog button capitalization"
                },
                "fullDescription": {
                  "text": "Cancel/OK dialog button capitalization The standard capitalization for OK/Cancel dialogs is \"OK\" and \"Cancel\". To ensure that your dialogs use the standard strings, you can use the resource strings @android:string/ok and @android:string/cancel. Issue id: ButtonCase",
                  "markdown": "Cancel/OK dialog button capitalization  \n\nThe standard capitalization for OK/Cancel dialogs is \"OK\" and \"Cancel\". To ensure that your dialogs use the standard strings, you can use the resource strings @android:string/ok and @android:string/cancel.  \n\nIssue id: ButtonCase"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "AndroidLintButtonCase",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Android Lint: Usability",
                      "index": 42,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "AndroidLintSourceLockedOrientationActivity",
                "shortDescription": {
                  "text": "Incompatible setRequestedOrientation value"
                },
                "fullDescription": {
                  "text": "Incompatible setRequestedOrientation value The 'Activity' should not be locked to a portrait orientation so that users can take advantage of the multi-window environments and larger landscape-first screens that Android runs on such as ChromeOS, tablets, and foldables. To fix the issue, consider calling 'setRequestedOrientation' with the 'ActivityInfo.SCREEN_ORIENTATION_FULL_SENSOR' or 'ActivityInfo.SCREEN_ORIENTATION_UNSPECIFIED' options or removing the call all together. Issue id: SourceLockedOrientationActivity https://developer.android.com/guide/topics/large-screens/large-screen-cookbook#restricted_app_orientation",
                  "markdown": "Incompatible setRequestedOrientation value  \n\nThe `Activity` should not be locked to a portrait orientation so that users can take advantage of the multi-window environments and larger landscape-first screens that Android runs on such as ChromeOS, tablets, and foldables. To fix the issue, consider calling `setRequestedOrientation` with the `ActivityInfo.SCREEN_ORIENTATION_FULL_SENSOR` or `ActivityInfo.SCREEN_ORIENTATION_UNSPECIFIED` options or removing the call all together.  \n\nIssue id: SourceLockedOrientationActivity  \n\n<https://developer.android.com/guide/topics/large-screens/large-screen-cookbook#restricted_app_orientation>"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "AndroidLintSourceLockedOrientationActivity",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Android Lint: Correctness",
                      "index": 5,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "AndroidLintExpensiveAssertion",
                "shortDescription": {
                  "text": "Expensive Assertions"
                },
                "fullDescription": {
                  "text": "Expensive Assertions In Kotlin, assertions are not handled the same way as from the Java programming language. In particular, they're just implemented as a library call, and inside the library call the error is only thrown if assertions are enabled. This means that the arguments to the 'assert' call will always be evaluated. If you're doing any computation in the expression being asserted, that computation will unconditionally be performed whether or not assertions are turned on. This typically turns into wasted work in release builds. This check looks for cases where the assertion condition is nontrivial, e.g. it is performing method calls or doing more work than simple comparisons on local variables or fields. You can work around this by writing your own inline assert method instead: @Suppress(\"INVISIBLE_REFERENCE\", \"INVISIBLE_MEMBER\")\ninline fun assert(condition: () -> Boolean) {\n    if (_Assertions.ENABLED && !condition()) {\n        throw AssertionError()\n    }\n}\n In Android, because assertions are not enforced at runtime, instead use this: inline fun assert(condition: () -> Boolean) {\n    if (BuildConfig.DEBUG && !condition()) {\n        throw AssertionError()\n    }\n}\n Issue id: ExpensiveAssertion",
                  "markdown": "Expensive Assertions  \n\nIn Kotlin, assertions are not handled the same way as from the Java programming language. In particular, they're just implemented as a library call, and inside the library call the error is only thrown if assertions are enabled.  \n\nThis means that the arguments to the `assert` call will **always** be evaluated. If you're doing any computation in the expression being asserted, that computation will unconditionally be performed whether or not assertions are turned on. This typically turns into wasted work in release builds.  \n\nThis check looks for cases where the assertion condition is nontrivial, e.g. it is performing method calls or doing more work than simple comparisons on local variables or fields.  \n\nYou can work around this by writing your own inline assert method instead:  \n\n```\n@Suppress(\"INVISIBLE_REFERENCE\", \"INVISIBLE_MEMBER\")\ninline fun assert(condition: () -> Boolean) {\n    if (_Assertions.ENABLED && !condition()) {\n        throw AssertionError()\n    }\n}\n```\n\nIn Android, because assertions are not enforced at runtime, instead use this:  \n\n```\ninline fun assert(condition: () -> Boolean) {\n    if (BuildConfig.DEBUG && !condition()) {\n        throw AssertionError()\n    }\n}\n```\n\nIssue id: ExpensiveAssertion"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "AndroidLintExpensiveAssertion",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Android Lint: Performance",
                      "index": 14,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "AndroidLintWorldWriteableFiles",
                "shortDescription": {
                  "text": "openFileOutput() with MODE_WORLD_WRITEABLE"
                },
                "fullDescription": {
                  "text": "'openFileOutput()' with 'MODE_WORLD_WRITEABLE' There are cases where it is appropriate for an application to write world writeable files, but these should be reviewed carefully to ensure that they contain no private data, and that if the file is modified by a malicious application it does not trick or compromise your application. Issue id: WorldWriteableFiles https://goo.gle/WorldWriteableFiles",
                  "markdown": "`openFileOutput()` with `MODE_WORLD_WRITEABLE`  \n\nThere are cases where it is appropriate for an application to write world writeable files, but these should be reviewed carefully to ensure that they contain no private data, and that if the file is modified by a malicious application it does not trick or compromise your application.  \n\nIssue id: WorldWriteableFiles  \n\n<https://goo.gle/WorldWriteableFiles>"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "AndroidLintWorldWriteableFiles",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Android Lint: Security",
                      "index": 44,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "AndroidLintInvalidImeActionId",
                "shortDescription": {
                  "text": "Invalid imeActionId declaration"
                },
                "fullDescription": {
                  "text": "Invalid imeActionId declaration 'android:imeActionId' should not be a resource ID such as '@+id/resName'. It must be an integer constant, or an integer resource reference, as defined in 'EditorInfo'. Issue id: InvalidImeActionId https://developer.android.com/reference/android/view/inputmethod/EditorInfo.html",
                  "markdown": "Invalid imeActionId declaration  \n\n`android:imeActionId` should not be a resource ID such as `@+id/resName`. It must be an integer constant, or an integer resource reference, as defined in `EditorInfo`.  \n\nIssue id: InvalidImeActionId  \n\n<https://developer.android.com/reference/android/view/inputmethod/EditorInfo.html>"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "error",
                  "parameters": {
                    "suppressToolId": "AndroidLintInvalidImeActionId",
                    "ideaSeverity": "ERROR",
                    "qodanaSeverity": "Critical"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Android Lint: Correctness",
                      "index": 5,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "AndroidLintDeviceAdmin",
                "shortDescription": {
                  "text": "Malformed Device Admin"
                },
                "fullDescription": {
                  "text": "Malformed Device Admin If you register a broadcast receiver which acts as a device admin, you must also register an '<intent-filter>' for the action 'android.app.action.DEVICE_ADMIN_ENABLED', without any '<data>', such that the device admin can be activated/deactivated. To do this, add `<intent-filter>`\n    `<action android:name=\"android.app.action.DEVICE_ADMIN_ENABLED\" />`\n`</intent-filter>`\n to your '<receiver>'. Issue id: DeviceAdmin",
                  "markdown": "Malformed Device Admin  \n\nIf you register a broadcast receiver which acts as a device admin, you must also register an `<intent-filter>` for the action `android.app.action.DEVICE_ADMIN_ENABLED`, without any `<data>`, such that the device admin can be activated/deactivated.  \n\nTo do this, add\n\n```\n`<intent-filter>`\n    `<action android:name=\"android.app.action.DEVICE_ADMIN_ENABLED\" />`\n`</intent-filter>`\n```\n\nto your `<receiver>`.  \n\nIssue id: DeviceAdmin"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "AndroidLintDeviceAdmin",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Android Lint: Correctness",
                      "index": 5,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "AndroidLintKeyboardInaccessibleWidget",
                "shortDescription": {
                  "text": "Keyboard inaccessible widget"
                },
                "fullDescription": {
                  "text": "Keyboard inaccessible widget A widget that is declared to be clickable but not declared to be focusable is not accessible via the keyboard. Please add the 'focusable' attribute as well. Issue id: KeyboardInaccessibleWidget",
                  "markdown": "Keyboard inaccessible widget  \n\nA widget that is declared to be clickable but not declared to be focusable is not accessible via the keyboard. Please add the `focusable` attribute as well.  \n\nIssue id: KeyboardInaccessibleWidget"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "AndroidLintKeyboardInaccessibleWidget",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Android Lint: Accessibility",
                      "index": 68,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "AndroidLintUnprotectedSMSBroadcastReceiver",
                "shortDescription": {
                  "text": "Unprotected SMS BroadcastReceiver"
                },
                "fullDescription": {
                  "text": "Unprotected SMS 'BroadcastReceiver' BroadcastReceivers that declare an intent-filter for 'SMS_DELIVER' or 'SMS_RECEIVED' must ensure that the caller has the 'BROADCAST_SMS' permission, otherwise it is possible for malicious actors to spoof intents. Issue id: UnprotectedSMSBroadcastReceiver https://goo.gle/UnprotectedSMSBroadcastReceiver",
                  "markdown": "Unprotected SMS `BroadcastReceiver`  \n\nBroadcastReceivers that declare an intent-filter for `SMS_DELIVER` or `SMS_RECEIVED` must ensure that the caller has the `BROADCAST_SMS` permission, otherwise it is possible for malicious actors to spoof intents.  \n\nIssue id: UnprotectedSMSBroadcastReceiver  \n\n<https://goo.gle/UnprotectedSMSBroadcastReceiver>"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "AndroidLintUnprotectedSMSBroadcastReceiver",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Android Lint: Security",
                      "index": 44,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "AndroidLintValidActionsXml",
                "shortDescription": {
                  "text": "Invalid Action Descriptor"
                },
                "fullDescription": {
                  "text": "Invalid Action Descriptor Ensures that an actions XML file is properly formed Issue id: ValidActionsXml",
                  "markdown": "Invalid Action Descriptor  \n\nEnsures that an actions XML file is properly formed  \n\nIssue id: ValidActionsXml"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "error",
                  "parameters": {
                    "suppressToolId": "AndroidLintValidActionsXml",
                    "ideaSeverity": "ERROR",
                    "qodanaSeverity": "Critical"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Android Lint: Correctness",
                      "index": 5,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "AndroidLintDataBindingWithoutKapt",
                "shortDescription": {
                  "text": "Data Binding without Annotation Processing"
                },
                "fullDescription": {
                  "text": "Data Binding without Annotation Processing Apps that use Kotlin and data binding should also apply the kotlin-kapt plugin. Issue id: DataBindingWithoutKapt https://kotlinlang.org/docs/reference/kapt.html",
                  "markdown": "Data Binding without Annotation Processing  \n\nApps that use Kotlin and data binding should also apply the kotlin-kapt plugin.  \n\nIssue id: DataBindingWithoutKapt  \n\n<https://kotlinlang.org/docs/reference/kapt.html>"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "AndroidLintDataBindingWithoutKapt",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Android Lint: Correctness",
                      "index": 5,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "AndroidLintInstantApps",
                "shortDescription": {
                  "text": "Instant App Issues"
                },
                "fullDescription": {
                  "text": "Instant App Issues This issue flags code that will not work correctly in Instant Apps Issue id: InstantApps",
                  "markdown": "Instant App Issues  \n\nThis issue flags code that will not work correctly in Instant Apps  \n\nIssue id: InstantApps"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "AndroidLintInstantApps",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Android Lint: Correctness",
                      "index": 5,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "AndroidLintTypographyOther",
                "shortDescription": {
                  "text": "Other typographical problems"
                },
                "fullDescription": {
                  "text": "Other typographical problems This check looks for miscellaneous typographical problems and offers replacement sequences that will make the text easier to read and your application more polished. Issue id: TypographyOther",
                  "markdown": "Other typographical problems  \n\nThis check looks for miscellaneous typographical problems and offers replacement sequences that will make the text easier to read and your application more polished.  \n\nIssue id: TypographyOther"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "AndroidLintTypographyOther",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Android Lint: Usability",
                      "index": 42,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "AndroidLintNoOp",
                "shortDescription": {
                  "text": "NoOp Code"
                },
                "fullDescription": {
                  "text": "NoOp Code This check looks for code which looks like it's a no-op -- usually leftover expressions from interactive debugging, but in some cases bugs where you had intended to do something with the expression such as assign it to a field. Issue id: NoOp Available options: pure-getters (default is false): Whether to assume methods with getter-names have no side effects. Getter methods (where names start with 'get' or 'is', and have non-void return types, and no arguments) should not have side effects. With this option turned on, lint will assume that is the case and will list any getter calls whose results are ignored as suspicious code. To configure this option, use a 'lint.xml' file with an <option> like this: <lint>\n    <issue id=\"NoOp\">\n        <option name=\"pure-getters\" value=\"false\" />\n    </issue>\n</lint>",
                  "markdown": "NoOp Code  \n\nThis check looks for code which looks like it's a no-op -- usually leftover expressions from interactive debugging, but in some cases bugs where you had intended to do something with the expression such as assign it to a field.  \n\nIssue id: NoOp  \n\nAvailable options:  \n\n**pure-getters** (default is false):  \nWhether to assume methods with getter-names have no side effects.  \n\nGetter methods (where names start with `get` or `is`, and have non-void return types, and no arguments) should not have side effects. With this option turned on, lint will assume that is the case and will list any getter calls whose results are ignored as suspicious code.  \n\nTo configure this option, use a `lint.xml` file with an \\<option\\> like this:  \n\n```\n<lint>\n    <issue id=\"NoOp\">\n        <option name=\"pure-getters\" value=\"false\" />\n    </issue>\n</lint>\n```"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "AndroidLintNoOp",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Android Lint: Correctness",
                      "index": 5,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "AndroidLintViewBindingType",
                "shortDescription": {
                  "text": "tools:viewBindingType issues"
                },
                "fullDescription": {
                  "text": "'tools:viewBindingType' issues All issues related to using the View Binding 'tools:viewBindingType' attribute. Issue id: ViewBindingType",
                  "markdown": "`tools:viewBindingType` issues  \n\nAll issues related to using the View Binding `tools:viewBindingType` attribute.  \n\nIssue id: ViewBindingType"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "error",
                  "parameters": {
                    "suppressToolId": "AndroidLintViewBindingType",
                    "ideaSeverity": "ERROR",
                    "qodanaSeverity": "Critical"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Android Lint: Correctness",
                      "index": 5,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "AndroidLintEmptySuperCall",
                "shortDescription": {
                  "text": "Calling an empty super method"
                },
                "fullDescription": {
                  "text": "Calling an empty super method For methods annotated with '@EmptySuper', overriding methods should not also call the super implementation, either because it is empty, or perhaps it contains code not intended to be run when the method is overridden. Issue id: EmptySuperCall",
                  "markdown": "Calling an empty super method  \n\nFor methods annotated with `@EmptySuper`, overriding methods should not also call the super implementation, either because it is empty, or perhaps it contains code not intended to be run when the method is overridden.  \n\nIssue id: EmptySuperCall"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "AndroidLintEmptySuperCall",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Android Lint: Correctness",
                      "index": 5,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "AndroidLintDuplicatePlatformClasses",
                "shortDescription": {
                  "text": "Duplicate Platform Classes"
                },
                "fullDescription": {
                  "text": "Duplicate Platform Classes There are a number of libraries that duplicate not just functionality of the Android platform but using the exact same class names as the ones provided in Android -- for example the apache http classes. This can lead to unexpected crashes. To solve this, you need to either find a newer version of the library which no longer has this problem, or to repackage the library (and all of its dependencies) using something like the 'jarjar' tool, or finally, rewriting the code to use different APIs (for example, for http code, consider using 'HttpUrlConnection' or a library like 'okhttp'). Issue id: DuplicatePlatformClasses",
                  "markdown": "Duplicate Platform Classes  \n\nThere are a number of libraries that duplicate not just functionality of the Android platform but using the exact same class names as the ones provided in Android -- for example the apache http classes. This can lead to unexpected crashes.  \n\nTo solve this, you need to either find a newer version of the library which no longer has this problem, or to repackage the library (and all of its dependencies) using something like the `jarjar` tool, or finally, rewriting the code to use different APIs (for example, for http code, consider using `HttpUrlConnection` or a library like `okhttp`).  \n\nIssue id: DuplicatePlatformClasses"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "error",
                  "parameters": {
                    "suppressToolId": "AndroidLintDuplicatePlatformClasses",
                    "ideaSeverity": "ERROR",
                    "qodanaSeverity": "Critical"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Android Lint: Correctness",
                      "index": 5,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "AndroidLintPluralsCandidate",
                "shortDescription": {
                  "text": "Potential Plurals"
                },
                "fullDescription": {
                  "text": "Potential Plurals This lint check looks for potential errors in internationalization where you have translated a message which involves a quantity and it looks like other parts of the string may need grammatical changes. For example, rather than something like this:   <string name=\"try_again\">Try again in %d seconds.</string>\n you should be using a plural:    <plurals name=\"try_again\">\n        <item quantity=\"one\">Try again in %d second</item>\n        <item quantity=\"other\">Try again in %d seconds</item>\n    </plurals>\n This will ensure that in other languages the right set of translations are provided for the different quantity classes. (This check depends on some heuristics, so it may not accurately determine whether a string really should be a quantity. You can use tools:ignore to filter out false positives. Issue id: PluralsCandidate https://developer.android.com/guide/topics/resources/string-resource.html#Plurals",
                  "markdown": "Potential Plurals  \n\nThis lint check looks for potential errors in internationalization where you have translated a message which involves a quantity and it looks like other parts of the string may need grammatical changes.  \n\nFor example, rather than something like this:\n\n```\n  <string name=\"try_again\">Try again in %d seconds.</string>\n```\n\nyou should be using a plural:\n\n```\n   <plurals name=\"try_again\">\n        <item quantity=\"one\">Try again in %d second</item>\n        <item quantity=\"other\">Try again in %d seconds</item>\n    </plurals>\n```\n\nThis will ensure that in other languages the right set of translations are provided for the different quantity classes.  \n\n(This check depends on some heuristics, so it may not accurately determine whether a string really should be a quantity. You can use tools:ignore to filter out false positives.  \n\nIssue id: PluralsCandidate  \n\n<https://developer.android.com/guide/topics/resources/string-resource.html#Plurals>"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "AndroidLintPluralsCandidate",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Android Lint: Correctness",
                      "index": 5,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "AndroidLintUnknownIdInLayout",
                "shortDescription": {
                  "text": "Reference to an id that is not in the current layout"
                },
                "fullDescription": {
                  "text": "Reference to an id that is not in the current layout The '@+id/' syntax refers to an existing id, or creates a new one if it has not already been defined elsewhere. However, this means that if you have a typo in your reference, or if the referred view no longer exists, you do not get a warning since the id will be created on demand. This is sometimes intentional, for example where you are referring to a view which is provided in a different layout via an include. However, it is usually an accident where you have a typo or you have renamed a view without updating all the references to it. Issue id: UnknownIdInLayout",
                  "markdown": "Reference to an id that is not in the current layout  \n\nThe `@+id/` syntax refers to an existing id, or creates a new one if it has not already been defined elsewhere. However, this means that if you have a typo in your reference, or if the referred view no longer exists, you do not get a warning since the id will be created on demand.  \n\nThis is sometimes intentional, for example where you are referring to a view which is provided in a different layout via an include. However, it is usually an accident where you have a typo or you have renamed a view without updating all the references to it.  \n\nIssue id: UnknownIdInLayout"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "AndroidLintUnknownIdInLayout",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Android Lint: Correctness",
                      "index": 5,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "AndroidLintActivityIconColor",
                "shortDescription": {
                  "text": "Ongoing activity icon is not white"
                },
                "fullDescription": {
                  "text": "Ongoing activity icon is not white The resources passed to 'setAnimatedIcon' and 'setStaticIcon' should be white with a transparent background, preferably a VectorDrawable or AnimatedVectorDrawable. Issue id: ActivityIconColor https://developer.android.com/training/wearables/ongoing-activity#best-practices",
                  "markdown": "Ongoing activity icon is not white  \n\nThe resources passed to `setAnimatedIcon` and `setStaticIcon` should be white with a transparent background, preferably a VectorDrawable or AnimatedVectorDrawable.  \n\nIssue id: ActivityIconColor  \n\n<https://developer.android.com/training/wearables/ongoing-activity#best-practices>"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "AndroidLintActivityIconColor",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Android Lint: Usability",
                      "index": 42,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "AndroidLintWifiManagerPotentialLeak",
                "shortDescription": {
                  "text": "WifiManager Potential Leak"
                },
                "fullDescription": {
                  "text": "WifiManager Potential Leak On versions prior to Android N (24), initializing the 'WifiManager' via 'Context#getSystemService' can cause a memory leak if the context is not the application context. In many cases, it's not obvious from the code where the 'Context' is coming from (e.g. it might be a parameter to a method, or a field initialized from various method calls). It's possible that the context being passed in is the application context, but to be on the safe side, you should consider changing 'context.getSystemService(...)' to 'context.getApplicationContext().getSystemService(...)'. Issue id: WifiManagerPotentialLeak",
                  "markdown": "WifiManager Potential Leak  \n\nOn versions prior to Android N (24), initializing the `WifiManager` via `Context#getSystemService` can cause a memory leak if the context is not the application context.  \n\nIn many cases, it's not obvious from the code where the `Context` is coming from (e.g. it might be a parameter to a method, or a field initialized from various method calls). It's possible that the context being passed in is the application context, but to be on the safe side, you should consider changing `context.getSystemService(...)` to `context.getApplicationContext().getSystemService(...)`.  \n\nIssue id: WifiManagerPotentialLeak"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "AndroidLintWifiManagerPotentialLeak",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Android Lint: Correctness",
                      "index": 5,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "AndroidLintInvalidId",
                "shortDescription": {
                  "text": "Invalid ID declaration"
                },
                "fullDescription": {
                  "text": "Invalid ID declaration An id definition must be of the form '@+id/yourname'. The tools have not rejected strings of the form '@+foo/bar' in the past, but that was an error, and could lead to tricky errors because of the way the id integers are assigned. If you really want to have different \"scopes\" for your id's, use prefixes instead, such as 'login_button1' and 'login_button2'. Issue id: InvalidId",
                  "markdown": "Invalid ID declaration  \n\nAn id definition **must** be of the form `@+id/yourname`. The tools have not rejected strings of the form `@+foo/bar` in the past, but that was an error, and could lead to tricky errors because of the way the id integers are assigned.  \n\nIf you really want to have different \"scopes\" for your id's, use prefixes instead, such as `login_button1` and `login_button2`.  \n\nIssue id: InvalidId"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "error",
                  "parameters": {
                    "suppressToolId": "AndroidLintInvalidId",
                    "ideaSeverity": "ERROR",
                    "qodanaSeverity": "Critical"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Android Lint: Correctness",
                      "index": 5,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "AndroidLintDuplicateIds",
                "shortDescription": {
                  "text": "Duplicate ids within a single layout"
                },
                "fullDescription": {
                  "text": "Duplicate ids within a single layout Within a layout, id's should be unique since otherwise 'findViewById()' can return an unexpected view. Issue id: DuplicateIds",
                  "markdown": "Duplicate ids within a single layout  \n\nWithin a layout, id's should be unique since otherwise `findViewById()` can return an unexpected view.  \n\nIssue id: DuplicateIds"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "error",
                  "parameters": {
                    "suppressToolId": "AndroidLintDuplicateIds",
                    "ideaSeverity": "ERROR",
                    "qodanaSeverity": "Critical"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Android Lint: Correctness",
                      "index": 5,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "AndroidLintInefficientWeight",
                "shortDescription": {
                  "text": "Inefficient layout weight"
                },
                "fullDescription": {
                  "text": "Inefficient layout weight When only a single widget in a 'LinearLayout' defines a weight, it is more efficient to assign a width/height of '0dp' to it since it will absorb all the remaining space anyway. With a declared width/height of '0dp' it does not have to measure its own size first. Issue id: InefficientWeight",
                  "markdown": "Inefficient layout weight  \n\nWhen only a single widget in a `LinearLayout` defines a weight, it is more efficient to assign a width/height of `0dp` to it since it will absorb all the remaining space anyway. With a declared width/height of `0dp` it does not have to measure its own size first.  \n\nIssue id: InefficientWeight"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "AndroidLintInefficientWeight",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Android Lint: Performance",
                      "index": 14,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "AndroidLintRequiredSize",
                "shortDescription": {
                  "text": "Missing layout_width or layout_height attributes"
                },
                "fullDescription": {
                  "text": "Missing 'layout_width' or 'layout_height' attributes All views must specify an explicit 'layout_width' and 'layout_height' attribute. There is a runtime check for this, so if you fail to specify a size, an exception is thrown at runtime. It's possible to specify these widths via styles as well. GridLayout, as a special case, does not require you to specify a size. Issue id: RequiredSize",
                  "markdown": "Missing `layout_width` or `layout_height` attributes  \n\nAll views must specify an explicit `layout_width` and `layout_height` attribute. There is a runtime check for this, so if you fail to specify a size, an exception is thrown at runtime.  \n\nIt's possible to specify these widths via styles as well. GridLayout, as a special case, does not require you to specify a size.  \n\nIssue id: RequiredSize"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "error",
                  "parameters": {
                    "suppressToolId": "AndroidLintRequiredSize",
                    "ideaSeverity": "ERROR",
                    "qodanaSeverity": "Critical"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Android Lint: Correctness",
                      "index": 5,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "AndroidLintGestureBackNavigation",
                "shortDescription": {
                  "text": "Usage of KeyEvent.KEYCODE_BACK"
                },
                "fullDescription": {
                  "text": "Usage of KeyEvent.KEYCODE_BACK Starting in Android 13 (API 33+), the handling of back events is moving to an ahead-of-time callback model. Use 'OnBackInvokedDispatcher.registerOnBackInvokedCallback(...)' and 'onBackInvokedCallback' or AndroidX's 'OnBackPressedDispatcher' with an implemented 'onBackPressedCallback' to handle back gestures and key presses. Issue id: GestureBackNavigation https://developer.android.com/about/versions/13/features/predictive-back-gesture",
                  "markdown": "Usage of KeyEvent.KEYCODE_BACK  \n\nStarting in Android 13 (API 33+), the handling of back events is moving to an ahead-of-time callback model. Use `OnBackInvokedDispatcher.registerOnBackInvokedCallback(...)` and `onBackInvokedCallback` or AndroidX's `OnBackPressedDispatcher` with an implemented `onBackPressedCallback` to handle back gestures and key presses.  \n\nIssue id: GestureBackNavigation  \n\n<https://developer.android.com/about/versions/13/features/predictive-back-gesture>"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "AndroidLintGestureBackNavigation",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Android Lint: Correctness",
                      "index": 5,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "AndroidLintBadHostnameVerifier",
                "shortDescription": {
                  "text": "Insecure HostnameVerifier"
                },
                "fullDescription": {
                  "text": "Insecure HostnameVerifier This check looks for implementations of 'HostnameVerifier' whose 'verify' method always returns true (thus trusting any hostname) which could result in insecure network traffic caused by trusting arbitrary hostnames in TLS/SSL certificates presented by peers. Issue id: BadHostnameVerifier https://goo.gle/BadHostnameVerifier",
                  "markdown": "Insecure HostnameVerifier  \n\nThis check looks for implementations of `HostnameVerifier` whose `verify` method always returns true (thus trusting any hostname) which could result in insecure network traffic caused by trusting arbitrary hostnames in TLS/SSL certificates presented by peers.  \n\nIssue id: BadHostnameVerifier  \n\n<https://goo.gle/BadHostnameVerifier>"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "AndroidLintBadHostnameVerifier",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Android Lint: Security",
                      "index": 44,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "AndroidLintIncompatibleMediaBrowserServiceCompatVersion",
                "shortDescription": {
                  "text": "Obsolete version of MediaBrowserServiceCompat"
                },
                "fullDescription": {
                  "text": "Obsolete version of MediaBrowserServiceCompat 'MediaBrowserServiceCompat' from version 23.2.0 to 23.4.0 of the Support v4 Library used private APIs and will not be compatible with future versions of Android beyond Android N. Please upgrade to version 24.0.0 or higher of the Support Library. Issue id: IncompatibleMediaBrowserServiceCompatVersion",
                  "markdown": "Obsolete version of MediaBrowserServiceCompat  \n\n`MediaBrowserServiceCompat` from version 23.2.0 to 23.4.0 of the Support v4 Library used private APIs and will not be compatible with future versions of Android beyond Android N. Please upgrade to version 24.0.0 or higher of the Support Library.  \n\nIssue id: IncompatibleMediaBrowserServiceCompatVersion"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "AndroidLintIncompatibleMediaBrowserServiceCompatVersion",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Android Lint: Correctness",
                      "index": 5,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "AndroidLintDevModeObsolete",
                "shortDescription": {
                  "text": "Dev Mode Obsolete"
                },
                "fullDescription": {
                  "text": "Dev Mode Obsolete In the past, our documentation recommended creating a 'dev' product flavor with has a minSdkVersion of 21, in order to enable multidexing to speed up builds significantly during development. That workaround is no longer necessary, and it has some serious downsides, such as breaking API access checking (since the true 'minSdkVersion' is no longer known). In recent versions of the IDE and the Gradle plugin, the IDE automatically passes the API level of the connected device used for deployment, and if that device is at least API 21, then multidexing is automatically turned on, meaning that you get the same speed benefits as the 'dev' product flavor but without the downsides. Issue id: DevModeObsolete",
                  "markdown": "Dev Mode Obsolete  \n\nIn the past, our documentation recommended creating a `dev` product flavor with has a minSdkVersion of 21, in order to enable multidexing to speed up builds significantly during development.  \n\nThat workaround is no longer necessary, and it has some serious downsides, such as breaking API access checking (since the true `minSdkVersion` is no longer known).  \n\nIn recent versions of the IDE and the Gradle plugin, the IDE automatically passes the API level of the connected device used for deployment, and if that device is at least API 21, then multidexing is automatically turned on, meaning that you get the same speed benefits as the `dev` product flavor but without the downsides.  \n\nIssue id: DevModeObsolete"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "AndroidLintDevModeObsolete",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Android Lint: Performance",
                      "index": 14,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "AndroidLintMissingSuperCall",
                "shortDescription": {
                  "text": "Missing Super Call"
                },
                "fullDescription": {
                  "text": "Missing Super Call Some methods, such as 'View#onDetachedFromWindow', require that you also call the super implementation as part of your method. Issue id: MissingSuperCall",
                  "markdown": "Missing Super Call  \n\nSome methods, such as `View#onDetachedFromWindow`, require that you also call the super implementation as part of your method.  \n\nIssue id: MissingSuperCall"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "error",
                  "parameters": {
                    "suppressToolId": "AndroidLintMissingSuperCall",
                    "ideaSeverity": "ERROR",
                    "qodanaSeverity": "Critical"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Android Lint: Correctness",
                      "index": 5,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "AndroidLintIncludeLayoutParam",
                "shortDescription": {
                  "text": "Ignored layout params on include"
                },
                "fullDescription": {
                  "text": "Ignored layout params on include Layout parameters specified on an '<include>' tag will only be used if you also override 'layout_width' and 'layout_height' on the '<include>' tag; otherwise they will be ignored. Issue id: IncludeLayoutParam https://stackoverflow.com/questions/2631614/does-android-xml-layouts-include-tag-really-work",
                  "markdown": "Ignored layout params on include  \n\nLayout parameters specified on an `<include>` tag will only be used if you also override `layout_width` and `layout_height` on the `<include>` tag; otherwise they will be ignored.  \n\nIssue id: IncludeLayoutParam  \n\n<https://stackoverflow.com/questions/2631614/does-android-xml-layouts-include-tag-really-work>"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "error",
                  "parameters": {
                    "suppressToolId": "AndroidLintIncludeLayoutParam",
                    "ideaSeverity": "ERROR",
                    "qodanaSeverity": "Critical"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Android Lint: Correctness",
                      "index": 5,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "AndroidLintRiskyLibrary",
                "shortDescription": {
                  "text": "Libraries with Privacy or Security Risks"
                },
                "fullDescription": {
                  "text": "Libraries with Privacy or Security Risks Your app is using a version of a library that has been identified by the library developer as a potential source of privacy and/or security risks. This may be a violation of Google Play policies (see https://play.google.com/about/monetization-ads/ads/) and/or affect your app’s visibility on the Play Store. When available, the individual error messages from lint will include details about the reasons for this advisory. Please try updating your app with an updated version of this library, or remove it from your app. Issue id: RiskyLibrary https://developer.android.com/distribute/sdk-index https://goo.gle/RiskyLibrary",
                  "markdown": "Libraries with Privacy or Security Risks  \n\nYour app is using a version of a library that has been identified by the library developer as a potential source of privacy and/or security risks. This may be a violation of Google Play policies (see <https://play.google.com/about/monetization-ads/ads/>) and/or affect your app's visibility on the Play Store.  \n\nWhen available, the individual error messages from lint will include details about the reasons for this advisory.  \n\nPlease try updating your app with an updated version of this library, or remove it from your app.  \n\nIssue id: RiskyLibrary  \n\n<https://developer.android.com/distribute/sdk-index>  \n<https://goo.gle/RiskyLibrary>"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "AndroidLintRiskyLibrary",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Android Lint: Security",
                      "index": 44,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "AndroidLintGradlePath",
                "shortDescription": {
                  "text": "Gradle Path Issues"
                },
                "fullDescription": {
                  "text": "Gradle Path Issues Gradle build scripts are meant to be cross platform, so file paths use Unix-style path separators (a forward slash) rather than Windows path separators (a backslash). Similarly, to keep projects portable and repeatable, avoid using absolute paths on the system; keep files within the project instead. To share code between projects, consider creating an android-library and an AAR dependency Issue id: GradlePath",
                  "markdown": "Gradle Path Issues  \n\nGradle build scripts are meant to be cross platform, so file paths use Unix-style path separators (a forward slash) rather than Windows path separators (a backslash). Similarly, to keep projects portable and repeatable, avoid using absolute paths on the system; keep files within the project instead. To share code between projects, consider creating an android-library and an AAR dependency  \n\nIssue id: GradlePath"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "AndroidLintGradlePath",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Android Lint: Correctness",
                      "index": 5,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "AndroidLintGradleDeprecated",
                "shortDescription": {
                  "text": "Deprecated Gradle Construct"
                },
                "fullDescription": {
                  "text": "Deprecated Gradle Construct This detector looks for deprecated Gradle constructs which currently work but will likely stop working in a future update. Issue id: GradleDeprecated",
                  "markdown": "Deprecated Gradle Construct  \n\nThis detector looks for deprecated Gradle constructs which currently work but will likely stop working in a future update.  \n\nIssue id: GradleDeprecated"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "AndroidLintGradleDeprecated",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Android Lint: Correctness",
                      "index": 5,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "AndroidLintIconDuplicatesConfig",
                "shortDescription": {
                  "text": "Identical bitmaps across various configurations"
                },
                "fullDescription": {
                  "text": "Identical bitmaps across various configurations If an icon is provided under different configuration parameters such as 'drawable-hdpi' or '-v11', they should typically be different. This detector catches cases where the same icon is provided in different configuration folder which is usually not intentional. Issue id: IconDuplicatesConfig",
                  "markdown": "Identical bitmaps across various configurations  \n\nIf an icon is provided under different configuration parameters such as `drawable-hdpi` or `-v11`, they should typically be different. This detector catches cases where the same icon is provided in different configuration folder which is usually not intentional.  \n\nIssue id: IconDuplicatesConfig"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "AndroidLintIconDuplicatesConfig",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Android Lint: Usability",
                      "index": 42,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "AndroidLintLintBaseline",
                "shortDescription": {
                  "text": "Baseline Issues"
                },
                "fullDescription": {
                  "text": "Baseline Applied Lint can be configured with a \"baseline\"; a set of current issues found in a codebase, which future runs of lint will silently ignore. Only new issues not found in the baseline are reported. Note that while opening files in the IDE, baseline issues are not filtered out; the purpose of baselines is to allow you to get started using lint and break the build on all newly introduced errors, without having to go back and fix the entire codebase up front. However, when you open up existing files you still want to be aware of and fix issues as you come across them. This issue type is used to emit an informational-only warning if any issues were filtered out due to baseline matching. That way, you don't have a false sense of security if you forgot that you've checked in a baseline file. Issue id: LintBaseline",
                  "markdown": "Baseline Applied  \n\nLint can be configured with a \"baseline\"; a set of current issues found in a codebase, which future runs of lint will silently ignore. Only new issues not found in the baseline are reported.  \n\nNote that while opening files in the IDE, baseline issues are not filtered out; the purpose of baselines is to allow you to get started using lint and break the build on all newly introduced errors, without having to go back and fix the entire codebase up front. However, when you open up existing files you still want to be aware of and fix issues as you come across them.  \n\nThis issue type is used to emit an informational-only warning if any issues were filtered out due to baseline matching. That way, you don't have a false sense of security if you forgot that you've checked in a baseline file.  \n\nIssue id: LintBaseline"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "note",
                  "parameters": {
                    "suppressToolId": "AndroidLintLintBaseline",
                    "ideaSeverity": "INFO",
                    "qodanaSeverity": "Info"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Android Lint: Lint",
                      "index": 126,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "AndroidLintGrantAllUris",
                "shortDescription": {
                  "text": "Content provider shares everything"
                },
                "fullDescription": {
                  "text": "Content provider shares everything The '<grant-uri-permission>' element allows specific paths to be shared. This detector checks for a path URL of just '/' (everything), which is probably not what you want; you should limit access to a subset. Issue id: GrantAllUris https://goo.gle/GrantAllUris",
                  "markdown": "Content provider shares everything  \n\nThe `<grant-uri-permission>` element allows specific paths to be shared. This detector checks for a path URL of just '/' (everything), which is probably not what you want; you should limit access to a subset.  \n\nIssue id: GrantAllUris  \n\n<https://goo.gle/GrantAllUris>"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "AndroidLintGrantAllUris",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Android Lint: Security",
                      "index": 44,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "AndroidLintApplySharedPref",
                "shortDescription": {
                  "text": "Use apply() on SharedPreferences"
                },
                "fullDescription": {
                  "text": "Use 'apply()' on 'SharedPreferences' Consider using 'apply()' instead of 'commit' on shared preferences. Whereas 'commit' blocks and writes its data to persistent storage immediately, 'apply' will handle it in the background. Issue id: ApplySharedPref",
                  "markdown": "Use `apply()` on `SharedPreferences`  \n\nConsider using `apply()` instead of `commit` on shared preferences. Whereas `commit` blocks and writes its data to persistent storage immediately, `apply` will handle it in the background.  \n\nIssue id: ApplySharedPref"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "AndroidLintApplySharedPref",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Android Lint: Correctness",
                      "index": 5,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "AndroidLintUnsupportedChromeOsCameraSystemFeature",
                "shortDescription": {
                  "text": "Looking for Rear Camera only feature"
                },
                "fullDescription": {
                  "text": "Looking for Rear Camera only feature You should look for the 'FEATURE_CAMERA_ANY' features to include all possible cameras that may be on the device. Looking for 'FEATURE_CAMERA' only looks for a rear facing camera, which certain large screen devices don't have, as well as newer device configurations and modes may place the device in a state where the rear camera is not available. To fix the issue, look for 'FEATURE_CAMERA_ANY' instead. Issue id: UnsupportedChromeOsCameraSystemFeature https://developer.android.com/guide/topics/large-screens/large-screen-cookbook#chromebook_camera_support",
                  "markdown": "Looking for Rear Camera only feature  \n\nYou should look for the `FEATURE_CAMERA_ANY` features to include all possible cameras that may be on the device. Looking for `FEATURE_CAMERA` only looks for a rear facing camera, which certain large screen devices don't have, as well as newer device configurations and modes may place the device in a state where the rear camera is not available. To fix the issue, look for `FEATURE_CAMERA_ANY` instead.  \n\nIssue id: UnsupportedChromeOsCameraSystemFeature  \n\n<https://developer.android.com/guide/topics/large-screens/large-screen-cookbook#chromebook_camera_support>"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "AndroidLintUnsupportedChromeOsCameraSystemFeature",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Android Lint: Correctness",
                      "index": 5,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "AndroidLintAssertionSideEffect",
                "shortDescription": {
                  "text": "Assertions with Side Effects"
                },
                "fullDescription": {
                  "text": "Assertions with Side Effects Assertion conditions can have side effects. This is risky because the behavior depends on whether assertions are on or off. This is usually not intentional, and can lead to bugs where the production version differs from the version tested during development. Generally, you'll want to perform the operation with the side effect before the assertion, and then assert that the result was what you expected. Issue id: AssertionSideEffect",
                  "markdown": "Assertions with Side Effects  \n\nAssertion conditions can have side effects. This is risky because the behavior depends on whether assertions are on or off. This is usually not intentional, and can lead to bugs where the production version differs from the version tested during development.  \n\nGenerally, you'll want to perform the operation with the side effect before the assertion, and then assert that the result was what you expected.  \n\nIssue id: AssertionSideEffect"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "AndroidLintAssertionSideEffect",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Android Lint: Performance",
                      "index": 14,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "AndroidLintProviderReadPermissionOnly",
                "shortDescription": {
                  "text": "Provider with readPermission only and implemented write APIs"
                },
                "fullDescription": {
                  "text": "Provider with readPermission only and implemented write APIs This check looks for Content Providers that only have the 'readPermission' attribute but implement write APIs. If 'android:readPermission' is specified and both 'android:permission' and 'android:writePermission' are omitted, other apps can access any write operations that this provider exposes with no permission check. For a quick fix, changing the existing 'android:readPermission' to 'android:permission' will protect both read and write access with the same permission. Alternatively, declaring a separate 'android:writePermission' can protect write access with a different permission. Issue id: ProviderReadPermissionOnly",
                  "markdown": "Provider with readPermission only and implemented write APIs  \n\nThis check looks for Content Providers that only have the `readPermission` attribute but implement write APIs.  \n\nIf `android:readPermission` is specified and both `android:permission` and `android:writePermission` are omitted, other apps can access any write operations that this provider exposes with no permission check. For a quick fix, changing the existing `android:readPermission` to `android:permission` will protect both read and write access with the same permission. Alternatively, declaring a separate `android:writePermission` can protect write access with a different permission.  \n\nIssue id: ProviderReadPermissionOnly"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "AndroidLintProviderReadPermissionOnly",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Android Lint: Security",
                      "index": 44,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "AndroidLintWearStandaloneAppFlag",
                "shortDescription": {
                  "text": "Invalid or missing Wear standalone app flag"
                },
                "fullDescription": {
                  "text": "Invalid or missing Wear standalone app flag Wearable apps should specify whether they can work standalone, without a phone app. Add a valid meta-data entry for 'com.google.android.wearable.standalone' to your application element and set the value to 'true' or 'false'. <meta-data android:name=\"com.google.android.wearable.standalone\"\n           android:value=\"true\"/>`\n Issue id: WearStandaloneAppFlag https://developer.android.com/training/wearables/apps/packaging.html",
                  "markdown": "Invalid or missing Wear standalone app flag  \n\nWearable apps should specify whether they can work standalone, without a phone app. Add a valid meta-data entry for `com.google.android.wearable.standalone` to your application element and set the value to `true` or `false`.\n\n```\n<meta-data android:name=\"com.google.android.wearable.standalone\"\n           android:value=\"true\"/>`\n```\n\nIssue id: WearStandaloneAppFlag  \n\n<https://developer.android.com/training/wearables/apps/packaging.html>"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "AndroidLintWearStandaloneAppFlag",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Android Lint: Correctness",
                      "index": 5,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "AndroidLintDeletedProvider",
                "shortDescription": {
                  "text": "Using Deleted Provider"
                },
                "fullDescription": {
                  "text": "Using Deleted Provider The 'Crypto' provider has been completely removed in Android P (and was deprecated in an earlier release). This means that the code will throw a 'NoSuchProviderException' and the app will crash. Even if the code catches that exception at a higher level, this is not secure and should not be used. Issue id: DeletedProvider https://android-developers.googleblog.com/2018/03/cryptography-changes-in-android-p.html https://goo.gle/DeletedProvider",
                  "markdown": "Using Deleted Provider  \n\nThe `Crypto` provider has been completely removed in Android P (and was deprecated in an earlier release). This means that the code will throw a `NoSuchProviderException` and the app will crash. Even if the code catches that exception at a higher level, this is not secure and should not be used.  \n\nIssue id: DeletedProvider  \n\n<https://android-developers.googleblog.com/2018/03/cryptography-changes-in-android-p.html>  \n<https://goo.gle/DeletedProvider>"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "error",
                  "parameters": {
                    "suppressToolId": "AndroidLintDeletedProvider",
                    "ideaSeverity": "ERROR",
                    "qodanaSeverity": "Critical"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Android Lint: Security",
                      "index": 44,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "AndroidLintMissingPrefix",
                "shortDescription": {
                  "text": "Missing Android XML namespace"
                },
                "fullDescription": {
                  "text": "Missing Android XML namespace Most Android views have attributes in the Android namespace. When referencing these attributes you must include the namespace prefix, or your attribute will be interpreted by 'aapt' as just a custom attribute. Similarly, in manifest files, nearly all attributes should be in the 'android:' namespace. Issue id: MissingPrefix",
                  "markdown": "Missing Android XML namespace  \n\nMost Android views have attributes in the Android namespace. When referencing these attributes you **must** include the namespace prefix, or your attribute will be interpreted by `aapt` as just a custom attribute.  \n\nSimilarly, in manifest files, nearly all attributes should be in the `android:` namespace.  \n\nIssue id: MissingPrefix"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "error",
                  "parameters": {
                    "suppressToolId": "AndroidLintMissingPrefix",
                    "ideaSeverity": "ERROR",
                    "qodanaSeverity": "Critical"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Android Lint: Correctness",
                      "index": 5,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "AndroidLintDuplicateUsesFeature",
                "shortDescription": {
                  "text": "Feature declared more than once"
                },
                "fullDescription": {
                  "text": "Feature declared more than once A given feature should only be declared once in the manifest. Issue id: DuplicateUsesFeature",
                  "markdown": "Feature declared more than once  \n\nA given feature should only be declared once in the manifest.  \n\nIssue id: DuplicateUsesFeature"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "AndroidLintDuplicateUsesFeature",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Android Lint: Correctness",
                      "index": 5,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "AndroidLintValidRestrictions",
                "shortDescription": {
                  "text": "Invalid Restrictions Descriptor"
                },
                "fullDescription": {
                  "text": "Invalid Restrictions Descriptor Ensures that an applications restrictions XML file is properly formed Issue id: ValidRestrictions https://developer.android.com/reference/android/content/RestrictionsManager.html",
                  "markdown": "Invalid Restrictions Descriptor  \n\nEnsures that an applications restrictions XML file is properly formed  \n\nIssue id: ValidRestrictions  \n\n<https://developer.android.com/reference/android/content/RestrictionsManager.html>"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "error",
                  "parameters": {
                    "suppressToolId": "AndroidLintValidRestrictions",
                    "ideaSeverity": "ERROR",
                    "qodanaSeverity": "Critical"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Android Lint: Correctness",
                      "index": 5,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "AndroidLintUnlocalizedSms",
                "shortDescription": {
                  "text": "SMS phone number missing country code"
                },
                "fullDescription": {
                  "text": "SMS phone number missing country code SMS destination numbers must start with a country code or the application code must ensure that the SMS is only sent when the user is in the same country as the receiver. Issue id: UnlocalizedSms",
                  "markdown": "SMS phone number missing country code  \n\nSMS destination numbers must start with a country code or the application code must ensure that the SMS is only sent when the user is in the same country as the receiver.  \n\nIssue id: UnlocalizedSms"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "AndroidLintUnlocalizedSms",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Android Lint: Correctness",
                      "index": 5,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "AndroidLintWrongCommentType",
                "shortDescription": {
                  "text": "Wrong Comment Type"
                },
                "fullDescription": {
                  "text": "Wrong Comment Type This check flags any block comments which look like they had been intended to be KDoc or javadoc comments instead. If you really want to use Javadoc-like constructs in a block comment, there's a convention you can use: include '(non-Javadoc)' somewhere in the comment, e.g.   /* (non-Javadoc)\n   * @see org.xml.sax.helpers.DefaultHandler#setDocumentLocator(org.xml.sax.Locator)\n   */\n  @Override\n  public void setDocumentLocator(Locator locator) {\n (see https://stackoverflow.com/questions/5172841/non-javadoc-meaning) Issue id: WrongCommentType",
                  "markdown": "Wrong Comment Type  \n\nThis check flags any block comments which look like they had been intended to be KDoc or javadoc comments instead.  \n\nIf you really want to use Javadoc-like constructs in a block comment, there's a convention you can use: include `(non-Javadoc)` somewhere in the comment, e.g.\n\n```\n  /* (non-Javadoc)\n   * @see org.xml.sax.helpers.DefaultHandler#setDocumentLocator(org.xml.sax.Locator)\n   */\n  @Override\n  public void setDocumentLocator(Locator locator) {\n```\n\n(see <https://stackoverflow.com/questions/5172841/non-javadoc-meaning>)  \n\nIssue id: WrongCommentType"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "AndroidLintWrongCommentType",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Android Lint: Correctness",
                      "index": 5,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "AndroidLintMissingQuantity",
                "shortDescription": {
                  "text": "Missing quantity translation"
                },
                "fullDescription": {
                  "text": "Missing quantity translation Different languages have different rules for grammatical agreement with quantity. In English, for example, the quantity 1 is a special case. We write \"1 book\", but for any other quantity we'd write \"n books\". This distinction between singular and plural is very common, but other languages make finer distinctions. This lint check looks at each translation of a '<plural>' and makes sure that all the quantity strings considered by the given language are provided by this translation. For example, an English translation must provide a string for 'quantity=\"one\"'. Similarly, a Czech translation must provide a string for 'quantity=\"few\"'. Issue id: MissingQuantity https://developer.android.com/guide/topics/resources/string-resource.html#Plurals",
                  "markdown": "Missing quantity translation  \n\nDifferent languages have different rules for grammatical agreement with quantity. In English, for example, the quantity 1 is a special case. We write \"1 book\", but for any other quantity we'd write \"n books\". This distinction between singular and plural is very common, but other languages make finer distinctions.  \n\nThis lint check looks at each translation of a `<plural>` and makes sure that all the quantity strings considered by the given language are provided by this translation.  \n\nFor example, an English translation must provide a string for `quantity=\"one\"`. Similarly, a Czech translation must provide a string for `quantity=\"few\"`.  \n\nIssue id: MissingQuantity  \n\n<https://developer.android.com/guide/topics/resources/string-resource.html#Plurals>"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "error",
                  "parameters": {
                    "suppressToolId": "AndroidLintMissingQuantity",
                    "ideaSeverity": "ERROR",
                    "qodanaSeverity": "Critical"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Android Lint: Correctness",
                      "index": 5,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "AndroidLintIgnoreWithoutReason",
                "shortDescription": {
                  "text": "@Ignore without Reason"
                },
                "fullDescription": {
                  "text": "@Ignore without Reason Ignoring a test without a reason makes it difficult to figure out the problem later. Please define an explicit reason why it is ignored, and when it can be resolved. Issue id: IgnoreWithoutReason Available options: allow-comments (default is true): Whether to allow a comment next to the @Ignore tag to be considered providing a reason. Normally you have to specify an annotation argument to the '@Ignore' annotation, but with this option you can configure whether it should also allow ignore reasons to specified by a comment adjacent to the ignore tag. To configure this option, use a 'lint.xml' file with an <option> like this: <lint>\n    <issue id=\"IgnoreWithoutReason\">\n        <option name=\"allow-comments\" value=\"true\" />\n    </issue>\n</lint>",
                  "markdown": "@Ignore without Reason  \n\nIgnoring a test without a reason makes it difficult to figure out the problem later. Please define an explicit reason why it is ignored, and when it can be resolved.  \n\nIssue id: IgnoreWithoutReason  \n\nAvailable options:  \n\n**allow-comments** (default is true):  \nWhether to allow a comment next to the @Ignore tag to be considered providing a reason.  \n\nNormally you have to specify an annotation argument to the `@Ignore` annotation, but with this option you can configure whether it should also allow ignore reasons to specified by a comment adjacent to the ignore tag.  \n\nTo configure this option, use a `lint.xml` file with an \\<option\\> like this:  \n\n```\n<lint>\n    <issue id=\"IgnoreWithoutReason\">\n        <option name=\"allow-comments\" value=\"true\" />\n    </issue>\n</lint>\n```"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "AndroidLintIgnoreWithoutReason",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Android Lint: Testing",
                      "index": 128,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "AndroidLintUnsafeImplicitIntentLaunch",
                "shortDescription": {
                  "text": "Implicit intent matches an internal non-exported component"
                },
                "fullDescription": {
                  "text": "Implicit intent matches an internal non-exported component This intent matches a non-exported component within the same app. In many cases, the app developer could instead use an explicit Intent to send messages to their internal components, ensuring that the messages are safely delivered without exposure to malicious apps on the device. Using such implicit intents will result in a crash in an upcoming version of Android. Issue id: UnsafeImplicitIntentLaunch",
                  "markdown": "Implicit intent matches an internal non-exported component  \n\nThis intent matches a non-exported component within the same app. In many cases, the app developer could instead use an explicit Intent to send messages to their internal components, ensuring that the messages are safely delivered without exposure to malicious apps on the device. Using such implicit intents will result in a crash in an upcoming version of Android.  \n\nIssue id: UnsafeImplicitIntentLaunch"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "error",
                  "parameters": {
                    "suppressToolId": "AndroidLintUnsafeImplicitIntentLaunch",
                    "ideaSeverity": "ERROR",
                    "qodanaSeverity": "Critical"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Android Lint: Security",
                      "index": 44,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "AndroidLintNotInterpolated",
                "shortDescription": {
                  "text": "Incorrect Interpolation"
                },
                "fullDescription": {
                  "text": "Incorrect Interpolation To insert the value of a variable, you can use '${variable}' inside a string literal, but only if you are using double quotes! Issue id: NotInterpolated https://www.groovy-lang.org/syntax.html#_string_interpolation",
                  "markdown": "Incorrect Interpolation  \n\nTo insert the value of a variable, you can use `${variable}` inside a string literal, but **only** if you are using double quotes!  \n\nIssue id: NotInterpolated  \n\n<https://www.groovy-lang.org/syntax.html#_string_interpolation>"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "error",
                  "parameters": {
                    "suppressToolId": "AndroidLintNotInterpolated",
                    "ideaSeverity": "ERROR",
                    "qodanaSeverity": "Critical"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Android Lint: Correctness",
                      "index": 5,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "AndroidLintDeprecatedProvider",
                "shortDescription": {
                  "text": "Using BC Provider"
                },
                "fullDescription": {
                  "text": "Using BC Provider The 'BC' provider has been deprecated and will not be provided when 'targetSdkVersion' is P or higher. Issue id: DeprecatedProvider https://android-developers.googleblog.com/2018/03/cryptography-changes-in-android-p.html https://goo.gle/DeprecatedProvider",
                  "markdown": "Using BC Provider  \n\nThe `BC` provider has been deprecated and will not be provided when `targetSdkVersion` is P or higher.  \n\nIssue id: DeprecatedProvider  \n\n<https://android-developers.googleblog.com/2018/03/cryptography-changes-in-android-p.html>  \n<https://goo.gle/DeprecatedProvider>"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "AndroidLintDeprecatedProvider",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Android Lint: Security",
                      "index": 44,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "AndroidLintBackButton",
                "shortDescription": {
                  "text": "Back button"
                },
                "fullDescription": {
                  "text": "Back button According to the Android Design Guide, \"Other platforms use an explicit back button with label to allow the user to navigate up the application's hierarchy. Instead, Android uses the main action bar's app icon for hierarchical navigation and the navigation bar's back button for temporal navigation.\" This check is not very sophisticated (it just looks for buttons with the label \"Back\"), so it is disabled by default to not trigger on common scenarios like pairs of Back/Next buttons to paginate through screens. Issue id: BackButton https://d.android.com/r/studio-ui/designer/material/design",
                  "markdown": "Back button  \n\nAccording to the Android Design Guide,  \n\n\"Other platforms use an explicit back button with label to allow the user to navigate up the application's hierarchy. Instead, Android uses the main action bar's app icon for hierarchical navigation and the navigation bar's back button for temporal navigation.\"  \n\nThis check is not very sophisticated (it just looks for buttons with the label \"Back\"), so it is disabled by default to not trigger on common scenarios like pairs of Back/Next buttons to paginate through screens.  \n\nIssue id: BackButton  \n\n<https://d.android.com/r/studio-ui/designer/material/design>"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "AndroidLintBackButton",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Android Lint: Usability",
                      "index": 42,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "AndroidLintWorldReadableFiles",
                "shortDescription": {
                  "text": "openFileOutput() with MODE_WORLD_READABLE"
                },
                "fullDescription": {
                  "text": "'openFileOutput()' with 'MODE_WORLD_READABLE' There are cases where it is appropriate for an application to write world readable files, but these should be reviewed carefully to ensure that they contain no private data that is leaked to other applications. Issue id: WorldReadableFiles https://goo.gle/WorldReadableFiles",
                  "markdown": "`openFileOutput()` with `MODE_WORLD_READABLE`  \n\nThere are cases where it is appropriate for an application to write world readable files, but these should be reviewed carefully to ensure that they contain no private data that is leaked to other applications.  \n\nIssue id: WorldReadableFiles  \n\n<https://goo.gle/WorldReadableFiles>"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "AndroidLintWorldReadableFiles",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Android Lint: Security",
                      "index": 44,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "AndroidLintUseValueOf",
                "shortDescription": {
                  "text": "Should use valueOf instead of new"
                },
                "fullDescription": {
                  "text": "Should use 'valueOf' instead of 'new' You should not call the constructor for wrapper classes directly, such as`new Integer(42)`. Instead, call the 'valueOf' factory method, such as 'Integer.valueOf(42)'. This will typically use less memory because common integers such as 0 and 1 will share a single instance. Issue id: UseValueOf",
                  "markdown": "Should use `valueOf` instead of `new`  \n\nYou should not call the constructor for wrapper classes directly, such as\\`new Integer(42)\\`. Instead, call the `valueOf` factory method, such as `Integer.valueOf(42)`. This will typically use less memory because common integers such as 0 and 1 will share a single instance.  \n\nIssue id: UseValueOf"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "AndroidLintUseValueOf",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Android Lint: Performance",
                      "index": 14,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "AndroidLintSetTextI18n",
                "shortDescription": {
                  "text": "TextView Internationalization"
                },
                "fullDescription": {
                  "text": "TextView Internationalization When calling 'TextView#setText' * Never call 'Number#toString()' to format numbers; it will not handle fraction separators and locale-specific digits properly. Consider using 'String#format' with proper format specifications ('%d' or '%f') instead. * Do not pass a string literal (e.g. \"Hello\") to display text. Hardcoded text can not be properly translated to other languages. Consider using Android resource strings instead. * Do not build messages by concatenating text chunks. Such messages can not be properly translated. Issue id: SetTextI18n https://developer.android.com/guide/topics/resources/localization.html",
                  "markdown": "TextView Internationalization  \n\nWhen calling `TextView#setText`  \n\\* Never call `Number#toString()` to format numbers; it will not handle fraction separators and locale-specific digits properly. Consider using `String#format` with proper format specifications (`%d` or `%f`) instead.  \n\\* Do not pass a string literal (e.g. \"Hello\") to display text. Hardcoded text can not be properly translated to other languages. Consider using Android resource strings instead.  \n\\* Do not build messages by concatenating text chunks. Such messages can not be properly translated.  \n\nIssue id: SetTextI18n  \n\n<https://developer.android.com/guide/topics/resources/localization.html>"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "AndroidLintSetTextI18n",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Android Lint: Internationalization",
                      "index": 63,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "AndroidLintCheckResult",
                "shortDescription": {
                  "text": "Ignoring results"
                },
                "fullDescription": {
                  "text": "Ignoring results Some methods have no side effects, and calling them without doing something with the result is suspicious. Issue id: CheckResult",
                  "markdown": "Ignoring results  \n\nSome methods have no side effects, and calling them without doing something with the result is suspicious.  \n\nIssue id: CheckResult"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "AndroidLintCheckResult",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Android Lint: Correctness",
                      "index": 5,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "AndroidLintBlockedPrivateApi",
                "shortDescription": {
                  "text": "Using Blocked Private API"
                },
                "fullDescription": {
                  "text": "Using Blocked Private API Usage of restricted non-SDK interface is forbidden for this targetSDK. Accessing non-SDK methods or fields through reflection has a high likelihood to break your app between versions, and is being restricted to facilitate future app compatibility. Issue id: BlockedPrivateApi https://developer.android.com/preview/restrictions-non-sdk-interfaces",
                  "markdown": "Using Blocked Private API  \n\nUsage of restricted non-SDK interface is forbidden for this targetSDK. Accessing non-SDK methods or fields through reflection has a high likelihood to break your app between versions, and is being restricted to facilitate future app compatibility.  \n\nIssue id: BlockedPrivateApi  \n\n<https://developer.android.com/preview/restrictions-non-sdk-interfaces>"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "error",
                  "parameters": {
                    "suppressToolId": "AndroidLintBlockedPrivateApi",
                    "ideaSeverity": "ERROR",
                    "qodanaSeverity": "Critical"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Android Lint: Correctness",
                      "index": 5,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "AndroidLintDuplicateIncludedIds",
                "shortDescription": {
                  "text": "Duplicate ids across layouts combined with include tags"
                },
                "fullDescription": {
                  "text": "Duplicate ids across layouts combined with include tags It's okay for two independent layouts to use the same ids. However, if layouts are combined with include tags, then the id's need to be unique within any chain of included layouts, or 'Activity#findViewById()' can return an unexpected view. Issue id: DuplicateIncludedIds",
                  "markdown": "Duplicate ids across layouts combined with include tags  \n\nIt's okay for two independent layouts to use the same ids. However, if layouts are combined with include tags, then the id's need to be unique within any chain of included layouts, or `Activity#findViewById()` can return an unexpected view.  \n\nIssue id: DuplicateIncludedIds"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "AndroidLintDuplicateIncludedIds",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Android Lint: Correctness",
                      "index": 5,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "AndroidLintNonConstantResourceId",
                "shortDescription": {
                  "text": "Checks use of resource IDs in places requiring constants"
                },
                "fullDescription": {
                  "text": "Checks use of resource IDs in places requiring constants Avoid the usage of resource IDs where constant expressions are required. A future version of the Android Gradle Plugin will generate R classes with non-constant IDs in order to improve the performance of incremental compilation. Issue id: NonConstantResourceId",
                  "markdown": "Checks use of resource IDs in places requiring constants  \n\nAvoid the usage of resource IDs where constant expressions are required.  \n\nA future version of the Android Gradle Plugin will generate R classes with non-constant IDs in order to improve the performance of incremental compilation.  \n\nIssue id: NonConstantResourceId"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "AndroidLintNonConstantResourceId",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Android Lint: Correctness",
                      "index": 5,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "AndroidLintUseSparseArrays",
                "shortDescription": {
                  "text": "HashMap can be replaced with SparseArray"
                },
                "fullDescription": {
                  "text": "HashMap can be replaced with SparseArray For maps where the keys are of type integer, it's typically more efficient to use the Android 'SparseArray' API. This check identifies scenarios where you might want to consider using 'SparseArray' instead of 'HashMap' for better performance. This is particularly useful when the value types are primitives like ints, where you can use 'SparseIntArray' and avoid auto-boxing the values from 'int' to 'Integer'. If you need to construct a 'HashMap' because you need to call an API outside of your control which requires a 'Map', you can suppress this warning using for example the '@SuppressLint' annotation. Issue id: UseSparseArrays",
                  "markdown": "HashMap can be replaced with SparseArray  \n\nFor maps where the keys are of type integer, it's typically more efficient to use the Android `SparseArray` API. This check identifies scenarios where you might want to consider using `SparseArray` instead of `HashMap` for better performance.  \n\nThis is **particularly** useful when the value types are primitives like ints, where you can use `SparseIntArray` and avoid auto-boxing the values from `int` to `Integer`.  \n\nIf you need to construct a `HashMap` because you need to call an API outside of your control which requires a `Map`, you can suppress this warning using for example the `@SuppressLint` annotation.  \n\nIssue id: UseSparseArrays"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "AndroidLintUseSparseArrays",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Android Lint: Performance",
                      "index": 14,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "AndroidLintInvalidVectorPath",
                "shortDescription": {
                  "text": "Invalid vector paths"
                },
                "fullDescription": {
                  "text": "Invalid vector paths This check ensures that vector paths are valid. For example, it makes sure that the numbers are not using scientific notation (such as 1.0e3) which can lead to runtime crashes on older devices. As another example, it flags numbers like '.5' which should be written as '0.5' instead to avoid crashes on some pre-Marshmallow devices. Issue id: InvalidVectorPath https://issuetracker.google.com/37008268",
                  "markdown": "Invalid vector paths  \n\nThis check ensures that vector paths are valid. For example, it makes sure that the numbers are not using scientific notation (such as 1.0e3) which can lead to runtime crashes on older devices. As another example, it flags numbers like `.5` which should be written as `0.5` instead to avoid crashes on some pre-Marshmallow devices.  \n\nIssue id: InvalidVectorPath  \n\n<https://issuetracker.google.com/37008268>"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "error",
                  "parameters": {
                    "suppressToolId": "AndroidLintInvalidVectorPath",
                    "ideaSeverity": "ERROR",
                    "qodanaSeverity": "Critical"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Android Lint: Correctness",
                      "index": 5,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "AndroidLintMutableImplicitPendingIntent",
                "shortDescription": {
                  "text": "Mutable Implicit PendingIntent is disallowed"
                },
                "fullDescription": {
                  "text": "Mutable Implicit PendingIntent is disallowed Apps targeting Android 14 and above are not allowed to create 'PendingIntents' with 'FLAG_MUTABLE' and an implicit intent within for security reasons. To retrieve an existing PendingIntent, use 'FLAG_NO_CREATE'. To create a new 'PendingIntent', either make the intent explicit, or make it immutable with 'FLAG_IMMUTABLE'. Issue id: MutableImplicitPendingIntent",
                  "markdown": "Mutable Implicit PendingIntent is disallowed  \n\nApps targeting Android 14 and above are not allowed to create `PendingIntents` with `FLAG_MUTABLE` and an implicit intent within for security reasons.  \n\nTo retrieve an existing PendingIntent, use `FLAG_NO_CREATE`. To create a new `PendingIntent`, either make the intent explicit, or make it immutable with `FLAG_IMMUTABLE`.  \n\nIssue id: MutableImplicitPendingIntent"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "error",
                  "parameters": {
                    "suppressToolId": "AndroidLintMutableImplicitPendingIntent",
                    "ideaSeverity": "ERROR",
                    "qodanaSeverity": "Critical"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Android Lint: Security",
                      "index": 44,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "AndroidLintStringFormatTrivial",
                "shortDescription": {
                  "text": "String.format string only contains trivial conversions"
                },
                "fullDescription": {
                  "text": "'String.format' string only contains trivial conversions Every call to 'String.format' creates a new 'Formatter' instance, which will decrease the performance of your app. 'String.format' should only be used when necessary--if the formatted string contains only trivial conversions (e.g. 'b', 's', 'c') and there are no translation concerns, it will be more efficient to replace them and concatenate with '+'. Issue id: StringFormatTrivial",
                  "markdown": "`String.format` string only contains trivial conversions  \n\nEvery call to `String.format` creates a new `Formatter` instance, which will decrease the performance of your app. `String.format` should only be used when necessary--if the formatted string contains only trivial conversions (e.g. `b`, `s`, `c`) and there are no translation concerns, it will be more efficient to replace them and concatenate with `+`.  \n\nIssue id: StringFormatTrivial"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "AndroidLintStringFormatTrivial",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Android Lint: Performance",
                      "index": 14,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "AndroidLintWrongFolder",
                "shortDescription": {
                  "text": "Resource file in the wrong res folder"
                },
                "fullDescription": {
                  "text": "Resource file in the wrong 'res' folder Resource files are sometimes placed in the wrong folder, and it can lead to subtle bugs that are hard to understand. This check looks for problems in this area, such as attempting to place a layout \"alias\" file in a 'layout/' folder rather than the 'values/' folder where it belongs. Issue id: WrongFolder",
                  "markdown": "Resource file in the wrong `res` folder  \n\nResource files are sometimes placed in the wrong folder, and it can lead to subtle bugs that are hard to understand. This check looks for problems in this area, such as attempting to place a layout \"alias\" file in a `layout/` folder rather than the `values/` folder where it belongs.  \n\nIssue id: WrongFolder"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "error",
                  "parameters": {
                    "suppressToolId": "AndroidLintWrongFolder",
                    "ideaSeverity": "ERROR",
                    "qodanaSeverity": "Critical"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Android Lint: Correctness",
                      "index": 5,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "AndroidLintUseCompoundDrawables",
                "shortDescription": {
                  "text": "Node can be replaced by a TextView with compound drawables"
                },
                "fullDescription": {
                  "text": "Node can be replaced by a 'TextView' with compound drawables A 'LinearLayout' which contains an 'ImageView' and a 'TextView' can be more efficiently handled as a compound drawable (a single TextView, using the 'drawableTop', 'drawableLeft', 'drawableRight' and/or 'drawableBottom' attributes to draw one or more images adjacent to the text). If the two widgets are offset from each other with margins, this can be replaced with a 'drawablePadding' attribute. There's a lint quickfix to perform this conversion in the Eclipse plugin. Issue id: UseCompoundDrawables",
                  "markdown": "Node can be replaced by a `TextView` with compound drawables  \n\nA `LinearLayout` which contains an `ImageView` and a `TextView` can be more efficiently handled as a compound drawable (a single TextView, using the `drawableTop`, `drawableLeft`, `drawableRight` and/or `drawableBottom` attributes to draw one or more images adjacent to the text).  \n\nIf the two widgets are offset from each other with margins, this can be replaced with a `drawablePadding` attribute.  \n\nThere's a lint quickfix to perform this conversion in the Eclipse plugin.  \n\nIssue id: UseCompoundDrawables"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "AndroidLintUseCompoundDrawables",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Android Lint: Performance",
                      "index": 14,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "AndroidLintIntentReset",
                "shortDescription": {
                  "text": "Suspicious mix of setType and setData"
                },
                "fullDescription": {
                  "text": "Suspicious mix of 'setType' and 'setData' Intent provides the following APIs: 'setData(Uri)' and 'setType(String)'. Unfortunately, setting one clears the other. If you want to set both, you should call 'setDataAndType(Uri, String)' instead. Issue id: IntentReset",
                  "markdown": "Suspicious mix of `setType` and `setData`  \n\nIntent provides the following APIs: `setData(Uri)` and `setType(String)`. Unfortunately, setting one clears the other. If you want to set both, you should call `setDataAndType(Uri, String)` instead.  \n\nIssue id: IntentReset"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "AndroidLintIntentReset",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Android Lint: Correctness",
                      "index": 5,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "AndroidLintSSLCertificateSocketFactoryGetInsecure",
                "shortDescription": {
                  "text": "Call to SSLCertificateSocketFactory.getInsecure()"
                },
                "fullDescription": {
                  "text": "Call to 'SSLCertificateSocketFactory.getInsecure()' The 'SSLCertificateSocketFactory.getInsecure()' method returns an SSLSocketFactory with all TLS/SSL security checks disabled, which could result in insecure network traffic caused by trusting arbitrary TLS/SSL certificates presented by peers. This method should be avoided unless needed for a special circumstance such as debugging. Instead, 'SSLCertificateSocketFactory.getDefault()' should be used. Issue id: SSLCertificateSocketFactoryGetInsecure https://goo.gle/SSLCertificateSocketFactoryGetInsecure",
                  "markdown": "Call to `SSLCertificateSocketFactory.getInsecure()`  \n\nThe `SSLCertificateSocketFactory.getInsecure()` method returns an SSLSocketFactory with all TLS/SSL security checks disabled, which could result in insecure network traffic caused by trusting arbitrary TLS/SSL certificates presented by peers. This method should be avoided unless needed for a special circumstance such as debugging. Instead, `SSLCertificateSocketFactory.getDefault()` should be used.  \n\nIssue id: SSLCertificateSocketFactoryGetInsecure  \n\n<https://goo.gle/SSLCertificateSocketFactoryGetInsecure>"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "AndroidLintSSLCertificateSocketFactoryGetInsecure",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Android Lint: Security",
                      "index": 44,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "AndroidLintWrongThreadInterprocedural",
                "shortDescription": {
                  "text": "Wrong Thread (Interprocedural)"
                },
                "fullDescription": {
                  "text": "Wrong Thread (Interprocedural) Searches for interprocedural call paths that violate thread annotations in the program. Tracks the flow of instantiated types and lambda expressions to increase accuracy across method boundaries. Issue id: WrongThreadInterprocedural https://developer.android.com/guide/components/processes-and-threads.html#Threads",
                  "markdown": "Wrong Thread (Interprocedural)  \n\nSearches for interprocedural call paths that violate thread annotations in the program. Tracks the flow of instantiated types and lambda expressions to increase accuracy across method boundaries.  \n\nIssue id: WrongThreadInterprocedural  \n\n<https://developer.android.com/guide/components/processes-and-threads.html#Threads>"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "error",
                  "parameters": {
                    "suppressToolId": "AndroidLintWrongThreadInterprocedural",
                    "ideaSeverity": "ERROR",
                    "qodanaSeverity": "Critical"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Android Lint: Correctness",
                      "index": 5,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "AndroidLintKotlinPropertyAccess",
                "shortDescription": {
                  "text": "Kotlin Property Access"
                },
                "fullDescription": {
                  "text": "Kotlin Property Access For a method to be represented as a property in Kotlin, strict “bean”-style prefixing must be used. Accessor methods require a 'get' prefix or for boolean-returning methods an 'is' prefix can be used. Issue id: KotlinPropertyAccess https://android.github.io/kotlin-guides/interop.html#property-prefixes",
                  "markdown": "Kotlin Property Access  \n\nFor a method to be represented as a property in Kotlin, strict \"bean\"-style prefixing must be used.  \n\nAccessor methods require a `get` prefix or for boolean-returning methods an `is` prefix can be used.  \n\nIssue id: KotlinPropertyAccess  \n\n<https://android.github.io/kotlin-guides/interop.html#property-prefixes>"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "AndroidLintKotlinPropertyAccess",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Android Lint: Interoperability",
                      "index": 39,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "AndroidLintWakelock",
                "shortDescription": {
                  "text": "Incorrect WakeLock usage"
                },
                "fullDescription": {
                  "text": "Incorrect 'WakeLock' usage Failing to release a wakelock properly can keep the Android device in a high power mode, which reduces battery life. There are several causes of this, such as releasing the wake lock in 'onDestroy()' instead of in 'onPause()', failing to call 'release()' in all possible code paths after an 'acquire()', and so on. NOTE: If you are using the lock just to keep the screen on, you should strongly consider using 'FLAG_KEEP_SCREEN_ON' instead. This window flag will be correctly managed by the platform as the user moves between applications and doesn't require a special permission. See https://developer.android.com/reference/android/view/WindowManager.LayoutParams.html#FLAG_KEEP_SCREEN_ON. Issue id: Wakelock",
                  "markdown": "Incorrect `WakeLock` usage  \n\nFailing to release a wakelock properly can keep the Android device in a high power mode, which reduces battery life. There are several causes of this, such as releasing the wake lock in `onDestroy()` instead of in `onPause()`, failing to call `release()` in all possible code paths after an `acquire()`, and so on.  \n\nNOTE: If you are using the lock just to keep the screen on, you should strongly consider using `FLAG_KEEP_SCREEN_ON` instead. This window flag will be correctly managed by the platform as the user moves between applications and doesn't require a special permission. See <https://developer.android.com/reference/android/view/WindowManager.LayoutParams.html#FLAG_KEEP_SCREEN_ON>.  \n\nIssue id: Wakelock"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "AndroidLintWakelock",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Android Lint: Performance",
                      "index": 14,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "AndroidLintIconExtension",
                "shortDescription": {
                  "text": "Icon format does not match the file extension"
                },
                "fullDescription": {
                  "text": "Icon format does not match the file extension Ensures that icons have the correct file extension (e.g. a '.png' file is really in the PNG format and not for example a GIF file named '.png'). Issue id: IconExtension",
                  "markdown": "Icon format does not match the file extension  \n\nEnsures that icons have the correct file extension (e.g. a `.png` file is really in the PNG format and not for example a GIF file named `.png`).  \n\nIssue id: IconExtension"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "AndroidLintIconExtension",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Android Lint: Usability",
                      "index": 42,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "AndroidLintWeekBasedYear",
                "shortDescription": {
                  "text": "Week Based Year"
                },
                "fullDescription": {
                  "text": "Week Based Year The 'DateTimeFormatter' pattern 'YYYY' returns the week based year, not the era-based year. This means that 12/29/2019 will format to 2019, but 12/30/2019 will format to 2020! If you expected this to format as 2019, you should use the pattern 'yyyy' instead. Issue id: WeekBasedYear https://stackoverflow.com/questions/46847245/using-datetimeformatter-on-january-first-cause-an-invalid-year-value",
                  "markdown": "Week Based Year  \n\nThe `DateTimeFormatter` pattern `YYYY` returns the *week* based year, not the era-based year. This means that 12/29/2019 will format to 2019, but 12/30/2019 will format to 2020!  \n\nIf you expected this to format as 2019, you should use the pattern `yyyy` instead.  \n\nIssue id: WeekBasedYear  \n\n<https://stackoverflow.com/questions/46847245/using-datetimeformatter-on-january-first-cause-an-invalid-year-value>"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "AndroidLintWeekBasedYear",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Android Lint: Internationalization",
                      "index": 63,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "AndroidLintServiceCast",
                "shortDescription": {
                  "text": "Wrong system service casts"
                },
                "fullDescription": {
                  "text": "Wrong system service casts When you call 'Context#getSystemService()', the result is typically cast to a specific interface. This lint check ensures that the cast is compatible with the expected type of the return value. Issue id: ServiceCast",
                  "markdown": "Wrong system service casts  \n\nWhen you call `Context#getSystemService()`, the result is typically cast to a specific interface. This lint check ensures that the cast is compatible with the expected type of the return value.  \n\nIssue id: ServiceCast"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "error",
                  "parameters": {
                    "suppressToolId": "AndroidLintServiceCast",
                    "ideaSeverity": "ERROR",
                    "qodanaSeverity": "Critical"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Android Lint: Correctness",
                      "index": 5,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "AndroidLintJobSchedulerService",
                "shortDescription": {
                  "text": "JobScheduler problems"
                },
                "fullDescription": {
                  "text": "JobScheduler problems This check looks for various common mistakes in using the JobScheduler API: the service class must extend 'JobService', the service must be registered in the manifest and the registration must require the permission 'android.permission.BIND_JOB_SERVICE'. Issue id: JobSchedulerService https://developer.android.com/topic/performance/scheduling.html",
                  "markdown": "JobScheduler problems  \n\nThis check looks for various common mistakes in using the JobScheduler API: the service class must extend `JobService`, the service must be registered in the manifest and the registration must require the permission `android.permission.BIND_JOB_SERVICE`.  \n\nIssue id: JobSchedulerService  \n\n<https://developer.android.com/topic/performance/scheduling.html>"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "AndroidLintJobSchedulerService",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Android Lint: Correctness",
                      "index": 5,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "AndroidLintSoonBlockedPrivateApi",
                "shortDescription": {
                  "text": "Using Soon-to-Be Blocked Private API"
                },
                "fullDescription": {
                  "text": "Using Soon-to-Be Blocked Private API Usage of restricted non-SDK interface will throw an exception at runtime. Accessing non-SDK methods or fields through reflection has a high likelihood to break your app between versions, and is being restricted to facilitate future app compatibility. Issue id: SoonBlockedPrivateApi https://developer.android.com/preview/restrictions-non-sdk-interfaces",
                  "markdown": "Using Soon-to-Be Blocked Private API  \n\nUsage of restricted non-SDK interface will throw an exception at runtime. Accessing non-SDK methods or fields through reflection has a high likelihood to break your app between versions, and is being restricted to facilitate future app compatibility.  \n\nIssue id: SoonBlockedPrivateApi  \n\n<https://developer.android.com/preview/restrictions-non-sdk-interfaces>"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "error",
                  "parameters": {
                    "suppressToolId": "AndroidLintSoonBlockedPrivateApi",
                    "ideaSeverity": "ERROR",
                    "qodanaSeverity": "Critical"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Android Lint: Correctness",
                      "index": 5,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "AndroidLintMissingLeanbackLauncher",
                "shortDescription": {
                  "text": "Missing Leanback Launcher Intent Filter"
                },
                "fullDescription": {
                  "text": "Missing Leanback Launcher Intent Filter An application intended to run on TV devices must declare a launcher activity for TV in its manifest using a 'android.intent.category.LEANBACK_LAUNCHER' intent filter. Issue id: MissingLeanbackLauncher https://developer.android.com/training/tv/start/start.html#tv-activity",
                  "markdown": "Missing Leanback Launcher Intent Filter  \n\nAn application intended to run on TV devices must declare a launcher activity for TV in its manifest using a `android.intent.category.LEANBACK_LAUNCHER` intent filter.  \n\nIssue id: MissingLeanbackLauncher  \n\n<https://developer.android.com/training/tv/start/start.html#tv-activity>"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "error",
                  "parameters": {
                    "suppressToolId": "AndroidLintMissingLeanbackLauncher",
                    "ideaSeverity": "ERROR",
                    "qodanaSeverity": "Critical"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Android Lint: Correctness",
                      "index": 5,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "IllegalIdentifier",
                "shortDescription": {
                  "text": "Illegal Android Identifier"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "error",
                  "parameters": {
                    "suppressToolId": "IllegalIdentifier",
                    "ideaSeverity": "ERROR",
                    "qodanaSeverity": "Critical"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Kotlin Android",
                      "index": 132,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "AndroidLintDeprecatedSinceApi",
                "shortDescription": {
                  "text": "Using a method deprecated in earlier SDK"
                },
                "fullDescription": {
                  "text": "Using a method deprecated in earlier SDK Some backport methods are only necessary until a specific version of Android. These have been annotated with '@DeprecatedSinceApi', specifying the relevant API level and replacement suggestions. Calling these methods when the 'minSdkVersion' is already at the deprecated API level or above is unnecessary. Issue id: DeprecatedSinceApi",
                  "markdown": "Using a method deprecated in earlier SDK  \n\nSome backport methods are only necessary until a specific version of Android. These have been annotated with `@DeprecatedSinceApi`, specifying the relevant API level and replacement suggestions. Calling these methods when the `minSdkVersion` is already at the deprecated API level or above is unnecessary.  \n\nIssue id: DeprecatedSinceApi"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "AndroidLintDeprecatedSinceApi",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Android Lint: Correctness",
                      "index": 5,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "AndroidLintUnusedResources",
                "shortDescription": {
                  "text": "Unused resources"
                },
                "fullDescription": {
                  "text": "Unused resources Unused resources make applications larger and slow down builds. The unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead. You can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests =true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests =true. , Issue id: UnusedResources",
                  "markdown": "Unused resources  \n\nUnused resources make applications larger and slow down builds.  \n\nThe unused resource check can ignore tests. If you want to include resources that are only referenced from tests, consider packaging them in a test source set instead.  \n\nYou can include test sources in the unused resource check by setting the system property lint.unused-resources.include-tests =true, and to exclude them (usually for performance reasons), use lint.unused-resources.exclude-tests =true.  \n,  \n\nIssue id: UnusedResources"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "AndroidLintUnusedResources",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Android Lint: Performance",
                      "index": 14,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "AndroidLintXmlEscapeNeeded",
                "shortDescription": {
                  "text": "Missing XML Escape"
                },
                "fullDescription": {
                  "text": "Missing XML Escape When a string contains characters that have special usage in XML, you must escape the characters. Issue id: XmlEscapeNeeded",
                  "markdown": "Missing XML Escape  \n\nWhen a string contains characters that have special usage in XML, you must escape the characters.  \n\nIssue id: XmlEscapeNeeded"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "error",
                  "parameters": {
                    "suppressToolId": "AndroidLintXmlEscapeNeeded",
                    "ideaSeverity": "ERROR",
                    "qodanaSeverity": "Critical"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Android Lint: Correctness",
                      "index": 5,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "AndroidLintResourceType",
                "shortDescription": {
                  "text": "Wrong Resource Type"
                },
                "fullDescription": {
                  "text": "Wrong Resource Type Ensures that resource id's passed to APIs are of the right type; for example, calling 'Resources.getColor(R.string.name)' is wrong. Issue id: ResourceType",
                  "markdown": "Wrong Resource Type  \n\nEnsures that resource id's passed to APIs are of the right type; for example, calling `Resources.getColor(R.string.name)` is wrong.  \n\nIssue id: ResourceType"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "error",
                  "parameters": {
                    "suppressToolId": "AndroidLintResourceType",
                    "ideaSeverity": "ERROR",
                    "qodanaSeverity": "Critical"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Android Lint: Correctness",
                      "index": 5,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "AndroidLintUsingHttp",
                "shortDescription": {
                  "text": "Using HTTP instead of HTTPS"
                },
                "fullDescription": {
                  "text": "Using HTTP instead of HTTPS The Gradle Wrapper is available both via HTTP and HTTPS. HTTPS is more secure since it protects against man-in-the-middle attacks etc. Older projects created in Android Studio used HTTP but we now default to HTTPS and recommend upgrading existing projects. Issue id: UsingHttp https://goo.gle/UsingHttp",
                  "markdown": "Using HTTP instead of HTTPS  \n\nThe Gradle Wrapper is available both via HTTP and HTTPS. HTTPS is more secure since it protects against man-in-the-middle attacks etc. Older projects created in Android Studio used HTTP but we now default to HTTPS and recommend upgrading existing projects.  \n\nIssue id: UsingHttp  \n\n<https://goo.gle/UsingHttp>"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "AndroidLintUsingHttp",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Android Lint: Security",
                      "index": 44,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "AndroidLintMissingBackupPin",
                "shortDescription": {
                  "text": "Missing Backup Pin"
                },
                "fullDescription": {
                  "text": "Missing Backup Pin It is highly recommended to declare a backup '<pin>' element. Not having a second pin defined can cause connection failures when the particular site certificate is rotated and the app has not yet been updated. Issue id: MissingBackupPin https://developer.android.com/preview/features/security-config.html",
                  "markdown": "Missing Backup Pin  \n\nIt is highly recommended to declare a backup `<pin>` element. Not having a second pin defined can cause connection failures when the particular site certificate is rotated and the app has not yet been updated.  \n\nIssue id: MissingBackupPin  \n\n<https://developer.android.com/preview/features/security-config.html>"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "AndroidLintMissingBackupPin",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Android Lint: Correctness",
                      "index": 5,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "AndroidUnresolvableTag",
                "shortDescription": {
                  "text": "Unresolvable tag"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "error",
                  "parameters": {
                    "suppressToolId": "AndroidUnresolvableTag",
                    "ideaSeverity": "ERROR",
                    "qodanaSeverity": "Critical"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Android",
                      "index": 83,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "AndroidLintAppCompatResource",
                "shortDescription": {
                  "text": "Menu namespace"
                },
                "fullDescription": {
                  "text": "Menu namespace When using the appcompat library, menu resources should refer to the 'showAsAction' (or 'actionViewClass', or 'actionProviderClass') in the 'app:' namespace, not the 'android:' namespace. Similarly, when not using the appcompat library, you should be using the 'android:showAsAction' (or 'actionViewClass', or 'actionProviderClass') attribute. Issue id: AppCompatResource",
                  "markdown": "Menu namespace  \n\nWhen using the appcompat library, menu resources should refer to the `showAsAction` (or `actionViewClass`, or `actionProviderClass`) in the `app:` namespace, not the `android:` namespace.  \n\nSimilarly, when **not** using the appcompat library, you should be using the `android:showAsAction` (or `actionViewClass`, or `actionProviderClass`) attribute.  \n\nIssue id: AppCompatResource"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "error",
                  "parameters": {
                    "suppressToolId": "AndroidLintAppCompatResource",
                    "ideaSeverity": "ERROR",
                    "qodanaSeverity": "Critical"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Android Lint: Correctness",
                      "index": 5,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "AndroidLintHighAppVersionCode",
                "shortDescription": {
                  "text": "VersionCode too high"
                },
                "fullDescription": {
                  "text": "VersionCode too high The declared 'versionCode' is an Integer. Ensure that the version number is not close to the limit. It is recommended to monotonically increase this number each minor or major release of the app. Note that updating an app with a versionCode over 'Integer.MAX_VALUE' is not possible. Issue id: HighAppVersionCode https://developer.android.com/studio/publish/versioning.html",
                  "markdown": "VersionCode too high  \n\nThe declared `versionCode` is an Integer. Ensure that the version number is not close to the limit. It is recommended to monotonically increase this number each minor or major release of the app. Note that updating an app with a versionCode over `Integer.MAX_VALUE` is not possible.  \n\nIssue id: HighAppVersionCode  \n\n<https://developer.android.com/studio/publish/versioning.html>"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "error",
                  "parameters": {
                    "suppressToolId": "AndroidLintHighAppVersionCode",
                    "ideaSeverity": "ERROR",
                    "qodanaSeverity": "Critical"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Android Lint: Correctness",
                      "index": 5,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "AndroidLintWatchFaceEditor",
                "shortDescription": {
                  "text": "Watch face editor must use launchMode=\"standard\""
                },
                "fullDescription": {
                  "text": "Watch face editor must use launchMode=\"standard\" Watch face editor activities must be able to launch in the Wear OS companion app activity task in order to work correctly. Thus only 'launchMode=\"standard\"' is allowed. The watch face will not be shown on the watch if it does not satisfy this requirement. Issue id: WatchFaceEditor",
                  "markdown": "Watch face editor must use launchMode=\"standard\"  \n\nWatch face editor activities must be able to launch in the Wear OS companion app activity task in order to work correctly. Thus only `launchMode=\"standard\"` is allowed. The watch face will not be shown on the watch if it does not satisfy this requirement.  \n\nIssue id: WatchFaceEditor"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "AndroidLintWatchFaceEditor",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Android Lint: Correctness",
                      "index": 5,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "AndroidLintNoHardKeywords",
                "shortDescription": {
                  "text": "No Hard Kotlin Keywords"
                },
                "fullDescription": {
                  "text": "No Hard Kotlin Keywords Do not use Kotlin’s hard keywords as the name of methods or fields. These require the use of backticks to escape when calling from Kotlin. Soft keywords, modifier keywords, and special identifiers are allowed. For example, ActionEvent's 'getWhen()' method requires backticks when used from Kotlin: val timestamp = event.`when`\n Issue id: NoHardKeywords https://android.github.io/kotlin-guides/interop.html#no-hard-keywords",
                  "markdown": "No Hard Kotlin Keywords  \n\nDo not use Kotlin's hard keywords as the name of methods or fields. These require the use of backticks to escape when calling from Kotlin. Soft keywords, modifier keywords, and special identifiers are allowed.  \n\nFor example, ActionEvent's `getWhen()` method requires backticks when used from Kotlin:\n\n```\nval timestamp = event.`when`\n```\n\nIssue id: NoHardKeywords  \n\n<https://android.github.io/kotlin-guides/interop.html#no-hard-keywords>"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "AndroidLintNoHardKeywords",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Android Lint: Interoperability",
                      "index": 39,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "AndroidLintIconLocation",
                "shortDescription": {
                  "text": "Image defined in density-independent drawable folder"
                },
                "fullDescription": {
                  "text": "Image defined in density-independent drawable folder The res/drawable folder is intended for density-independent graphics such as shapes defined in XML. For bitmaps, move it to 'drawable-mdpi' and consider providing higher and lower resolution versions in 'drawable-ldpi', 'drawable-hdpi' and 'drawable-xhdpi'. If the icon really is density independent (for example a solid color) you can place it in 'drawable-nodpi'. Issue id: IconLocation https://developer.android.com/guide/practices/screens_support.html",
                  "markdown": "Image defined in density-independent drawable folder  \n\nThe res/drawable folder is intended for density-independent graphics such as shapes defined in XML. For bitmaps, move it to `drawable-mdpi` and consider providing higher and lower resolution versions in `drawable-ldpi`, `drawable-hdpi` and `drawable-xhdpi`. If the icon **really** is density independent (for example a solid color) you can place it in `drawable-nodpi`.  \n\nIssue id: IconLocation  \n\n<https://developer.android.com/guide/practices/screens_support.html>"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "AndroidLintIconLocation",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Android Lint: Usability",
                      "index": 42,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "AndroidLintWrongRegion",
                "shortDescription": {
                  "text": "Suspicious Language/Region Combination"
                },
                "fullDescription": {
                  "text": "Suspicious Language/Region Combination Android uses the letter codes ISO 639-1 for languages, and the letter codes ISO 3166-1 for the region codes. In many cases, the language code and the country where the language is spoken is the same, but it is also often not the case. For example, while 'se' refers to Sweden, where Swedish is spoken, the language code for Swedish is not 'se' (which refers to the Northern Sami language), the language code is 'sv'. And similarly the region code for 'sv' is El Salvador. This lint check looks for suspicious language and region combinations, to help catch cases where you've accidentally used the wrong language or region code. Lint knows about the most common regions where a language is spoken, and if a folder combination is not one of these, it is flagged as suspicious. Note however that it may not be an error: you can theoretically have speakers of any language in any region and want to target that with your resources, so this check is aimed at tracking down likely mistakes, not to enforce a specific set of region and language combinations. Issue id: WrongRegion",
                  "markdown": "Suspicious Language/Region Combination  \n\nAndroid uses the letter codes ISO 639-1 for languages, and the letter codes ISO 3166-1 for the region codes. In many cases, the language code and the country where the language is spoken is the same, but it is also often not the case. For example, while 'se' refers to Sweden, where Swedish is spoken, the language code for Swedish is **not** `se` (which refers to the Northern Sami language), the language code is `sv`. And similarly the region code for `sv` is El Salvador.  \n\nThis lint check looks for suspicious language and region combinations, to help catch cases where you've accidentally used the wrong language or region code. Lint knows about the most common regions where a language is spoken, and if a folder combination is not one of these, it is flagged as suspicious.  \n\nNote however that it may not be an error: you can theoretically have speakers of any language in any region and want to target that with your resources, so this check is aimed at tracking down likely mistakes, not to enforce a specific set of region and language combinations.  \n\nIssue id: WrongRegion"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "AndroidLintWrongRegion",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Android Lint: Correctness",
                      "index": 5,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "AndroidLintLintBaselineFixed",
                "shortDescription": {
                  "text": "Baselined Issues Fixed"
                },
                "fullDescription": {
                  "text": "Baselined Issues Fixed If a lint baseline describes a problem which is no longer reported, then the problem has either been fixed, or perhaps the issue type has been disabled. In any case, the entry can be removed from the baseline (such that if the issue is reintroduced at some point, lint will complain rather than just silently starting to match the old baseline entry again.) Issue id: LintBaselineFixed",
                  "markdown": "Baselined Issues Fixed  \n\nIf a lint baseline describes a problem which is no longer reported, then the problem has either been fixed, or perhaps the issue type has been disabled. In any case, the entry can be removed from the baseline (such that if the issue is reintroduced at some point, lint will complain rather than just silently starting to match the old baseline entry again.)  \n\nIssue id: LintBaselineFixed"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "note",
                  "parameters": {
                    "suppressToolId": "AndroidLintLintBaselineFixed",
                    "ideaSeverity": "INFO",
                    "qodanaSeverity": "Info"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Android Lint: Lint",
                      "index": 126,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "AndroidLintExpiringTargetSdkVersion",
                "shortDescription": {
                  "text": "TargetSdkVersion Soon Expiring"
                },
                "fullDescription": {
                  "text": "TargetSdkVersion Soon Expiring Configuring your app to target a recent API level ensures that users benefit from significant security and performance improvements, while still allowing your app to run on older Android versions (down to the 'minSdkVersion'). To update your 'targetSdkVersion', follow the steps from \"Meeting Google Play requirements for target API level\", https://developer.android.com/distribute/best-practices/develop/target-sdk.html Issue id: ExpiringTargetSdkVersion https://support.google.com/googleplay/android-developer/answer/113469#targetsdk",
                  "markdown": "TargetSdkVersion Soon Expiring  \n\nConfiguring your app to target a recent API level ensures that users benefit from significant security and performance improvements, while still allowing your app to run on older Android versions (down to the `minSdkVersion`).  \n\nTo update your `targetSdkVersion`, follow the steps from \"Meeting Google Play requirements for target API level\", <https://developer.android.com/distribute/best-practices/develop/target-sdk.html>  \n\nIssue id: ExpiringTargetSdkVersion  \n\n<https://support.google.com/googleplay/android-developer/answer/113469#targetsdk>"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "error",
                  "parameters": {
                    "suppressToolId": "AndroidLintExpiringTargetSdkVersion",
                    "ideaSeverity": "ERROR",
                    "qodanaSeverity": "Critical"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Android Lint: Compliance",
                      "index": 134,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "AndroidLintPrivateResource",
                "shortDescription": {
                  "text": "Using private resources"
                },
                "fullDescription": {
                  "text": "Using private resources Private resources should not be referenced; the may not be present everywhere, and even where they are they may disappear without notice. To fix this, copy the resource into your own project instead. Issue id: PrivateResource",
                  "markdown": "Using private resources  \n\nPrivate resources should not be referenced; the may not be present everywhere, and even where they are they may disappear without notice.  \n\nTo fix this, copy the resource into your own project instead.  \n\nIssue id: PrivateResource"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "AndroidLintPrivateResource",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Android Lint: Correctness",
                      "index": 5,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "AndroidLintExportedReceiver",
                "shortDescription": {
                  "text": "Receiver does not require permission"
                },
                "fullDescription": {
                  "text": "Receiver does not require permission Exported receivers (receivers which either set 'exported=true' or contain an intent-filter and do not specify 'exported=false') should define a permission that an entity must have in order to launch the receiver or bind to it. Without this, any application can use this receiver. Issue id: ExportedReceiver https://goo.gle/ExportedReceiver",
                  "markdown": "Receiver does not require permission  \n\nExported receivers (receivers which either set `exported=true` or contain an intent-filter and do not specify `exported=false`) should define a permission that an entity must have in order to launch the receiver or bind to it. Without this, any application can use this receiver.  \n\nIssue id: ExportedReceiver  \n\n<https://goo.gle/ExportedReceiver>"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "AndroidLintExportedReceiver",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Android Lint: Security",
                      "index": 44,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "AndroidLintRestrictedApi",
                "shortDescription": {
                  "text": "Restricted API"
                },
                "fullDescription": {
                  "text": "Restricted API This API has been flagged with a restriction that has not been met. Examples of API restrictions: * Method can only be invoked by a subclass * Method can only be accessed from within the same library (defined by the Gradle library group id) * Method can only be accessed from tests. You can add your own API restrictions with the '@RestrictTo' annotation. Issue id: RestrictedApi",
                  "markdown": "Restricted API  \n\nThis API has been flagged with a restriction that has not been met.  \n\nExamples of API restrictions:  \n\\* Method can only be invoked by a subclass  \n\\* Method can only be accessed from within the same library (defined by the Gradle library group id)  \n\\* Method can only be accessed from tests.  \n\nYou can add your own API restrictions with the `@RestrictTo` annotation.  \n\nIssue id: RestrictedApi"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "error",
                  "parameters": {
                    "suppressToolId": "AndroidLintRestrictedApi",
                    "ideaSeverity": "ERROR",
                    "qodanaSeverity": "Critical"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Android Lint: Correctness",
                      "index": 5,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "AndroidLintHardcodedDebugMode",
                "shortDescription": {
                  "text": "Hardcoded value of android:debuggable in the manifest"
                },
                "fullDescription": {
                  "text": "Hardcoded value of 'android:debuggable' in the manifest It's best to leave out the 'android:debuggable' attribute from the manifest. If you do, then the tools will automatically insert 'android:debuggable=true' when building an APK to debug on an emulator or device. And when you perform a release build, such as Exporting APK, it will automatically set it to 'false'. If on the other hand you specify a specific value in the manifest file, then the tools will always use it. This can lead to accidentally publishing your app with debug information. Issue id: HardcodedDebugMode https://goo.gle/HardcodedDebugMode",
                  "markdown": "Hardcoded value of `android:debuggable` in the manifest  \n\nIt's best to leave out the `android:debuggable` attribute from the manifest. If you do, then the tools will automatically insert `android:debuggable=true` when building an APK to debug on an emulator or device. And when you perform a release build, such as Exporting APK, it will automatically set it to `false`.  \n\nIf on the other hand you specify a specific value in the manifest file, then the tools will always use it. This can lead to accidentally publishing your app with debug information.  \n\nIssue id: HardcodedDebugMode  \n\n<https://goo.gle/HardcodedDebugMode>"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "error",
                  "parameters": {
                    "suppressToolId": "AndroidLintHardcodedDebugMode",
                    "ideaSeverity": "ERROR",
                    "qodanaSeverity": "Critical"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Android Lint: Security",
                      "index": 44,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "AndroidLintOrientation",
                "shortDescription": {
                  "text": "Missing explicit orientation"
                },
                "fullDescription": {
                  "text": "Missing explicit orientation The default orientation of a 'LinearLayout' is horizontal. It's pretty easy to believe that the layout is vertical, add multiple children to it, and wonder why only the first child is visible (when the subsequent children are off screen to the right). This lint rule helps pinpoint this issue by warning whenever a 'LinearLayout' is used with an implicit orientation and multiple children. It also checks for empty LinearLayouts without an 'orientation' attribute that also defines an 'id' attribute. This catches the scenarios where children will be added to the 'LinearLayout' dynamically. Issue id: Orientation",
                  "markdown": "Missing explicit orientation  \n\nThe default orientation of a `LinearLayout` is horizontal. It's pretty easy to believe that the layout is vertical, add multiple children to it, and wonder why only the first child is visible (when the subsequent children are off screen to the right). This lint rule helps pinpoint this issue by warning whenever a `LinearLayout` is used with an implicit orientation and multiple children.  \n\nIt also checks for empty LinearLayouts without an `orientation` attribute that also defines an `id` attribute. This catches the scenarios where children will be added to the `LinearLayout` dynamically.   \n\nIssue id: Orientation"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "error",
                  "parameters": {
                    "suppressToolId": "AndroidLintOrientation",
                    "ideaSeverity": "ERROR",
                    "qodanaSeverity": "Critical"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Android Lint: Correctness",
                      "index": 5,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "AndroidLintInternalInsetResource",
                "shortDescription": {
                  "text": "Using internal inset dimension resource"
                },
                "fullDescription": {
                  "text": "Using internal inset dimension resource The internal inset dimension resources are not a supported way to retrieve the relevant insets for your application. The insets are dynamic values that can change while your app is visible, and your app's window may not intersect with the system UI. To get the relevant value for your app and listen to updates, use 'androidx.core.view.WindowInsetsCompat' and related APIs. Issue id: InternalInsetResource",
                  "markdown": "Using internal inset dimension resource  \n\nThe internal inset dimension resources are not a supported way to retrieve the relevant insets for your application. The insets are dynamic values that can change while your app is visible, and your app's window may not intersect with the system UI. To get the relevant value for your app and listen to updates, use `androidx.core.view.WindowInsetsCompat` and related APIs.  \n\nIssue id: InternalInsetResource"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "AndroidLintInternalInsetResource",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Android Lint: Correctness",
                      "index": 5,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "AndroidLintAccidentalOctal",
                "shortDescription": {
                  "text": "Accidental Octal"
                },
                "fullDescription": {
                  "text": "Accidental Octal In Groovy, an integer literal that starts with a leading 0 will be interpreted as an octal number. That is usually (always?) an accident and can lead to subtle bugs, for example when used in the 'versionCode' of an app. Issue id: AccidentalOctal",
                  "markdown": "Accidental Octal  \n\nIn Groovy, an integer literal that starts with a leading 0 will be interpreted as an octal number. That is usually (always?) an accident and can lead to subtle bugs, for example when used in the `versionCode` of an app.  \n\nIssue id: AccidentalOctal"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "error",
                  "parameters": {
                    "suppressToolId": "AndroidLintAccidentalOctal",
                    "ideaSeverity": "ERROR",
                    "qodanaSeverity": "Critical"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Android Lint: Correctness",
                      "index": 5,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "AndroidLintCredentialDependency",
                "shortDescription": {
                  "text": "credentials-play-services-auth is Required"
                },
                "fullDescription": {
                  "text": "'credentials-play-services-auth' is Required The dependency 'androidx.credentials:credentials-play-services-auth' is required for Android 13 and below to get support from Play services for the Credential Manager API ('androidx.credentials:credentials') to work. For Android 14 and above, this is optional. Please check release notes for the latest version. Issue id: CredentialDependency https://developer.android.com/jetpack/androidx/releases/credentials",
                  "markdown": "`credentials-play-services-auth` is Required  \n\nThe dependency `androidx.credentials:credentials-play-services-auth` is required for Android 13 and below to get support from Play services for the Credential Manager API (`androidx.credentials:credentials`) to work. For Android 14 and above, this is optional. Please check release notes for the latest version.  \n\nIssue id: CredentialDependency  \n\n<https://developer.android.com/jetpack/androidx/releases/credentials>"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "AndroidLintCredentialDependency",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Android Lint: Correctness",
                      "index": 5,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "AndroidLintFileEndsWithExt",
                "shortDescription": {
                  "text": "File endsWith on file extensions"
                },
                "fullDescription": {
                  "text": "File endsWith on file extensions The Kotlin extension method 'File.endsWith(suffix)' checks whole path components, not just string suffixes. This means that 'File(\"foo.txt\").endsWith(\".txt\")' will return false. Instead you might have intended 'file.path.endsWith' or 'file.extension.equals'. Issue id: FileEndsWithExt",
                  "markdown": "File endsWith on file extensions  \n\nThe Kotlin extension method `File.endsWith(suffix)` checks whole path components, not just string suffixes. This means that `File(\"foo.txt\").endsWith(\".txt\")` will return false. Instead you might have intended `file.path.endsWith` or `file.extension.equals`.  \n\nIssue id: FileEndsWithExt"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "AndroidLintFileEndsWithExt",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Android Lint: Correctness",
                      "index": 5,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "AndroidLintTypographyFractions",
                "shortDescription": {
                  "text": "Fraction string can be replaced with fraction character"
                },
                "fullDescription": {
                  "text": "Fraction string can be replaced with fraction character You can replace certain strings, such as 1/2, and 1/4, with dedicated characters for these, such as ½ (&#189;) and ¼ (&#188;). This can help make the text more readable. Issue id: TypographyFractions https://en.wikipedia.org/wiki/Number_Forms",
                  "markdown": "Fraction string can be replaced with fraction character  \n\nYou can replace certain strings, such as 1/2, and 1/4, with dedicated characters for these, such as ½ (\\&#189;) and ¼ (\\&#188;). This can help make the text more readable.  \n\nIssue id: TypographyFractions  \n\n<https://en.wikipedia.org/wiki/Number_Forms>"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "AndroidLintTypographyFractions",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Android Lint: Usability",
                      "index": 42,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "AndroidLintRedundantNamespace",
                "shortDescription": {
                  "text": "Redundant namespace"
                },
                "fullDescription": {
                  "text": "Redundant namespace In Android XML documents, only specify the namespace on the root/document element. Namespace declarations elsewhere in the document are typically accidental leftovers from copy/pasting XML from other files or documentation. Issue id: RedundantNamespace",
                  "markdown": "Redundant namespace  \n\nIn Android XML documents, only specify the namespace on the root/document element. Namespace declarations elsewhere in the document are typically accidental leftovers from copy/pasting XML from other files or documentation.  \n\nIssue id: RedundantNamespace"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "AndroidLintRedundantNamespace",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Android Lint: Performance",
                      "index": 14,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "AndroidLintPictureInPictureIssue",
                "shortDescription": {
                  "text": "Picture In Picture best practices not followed"
                },
                "fullDescription": {
                  "text": "Picture In Picture best practices not followed Starting in Android 12, the recommended approach for enabling picture-in-picture (PiP) has changed. If your app does not use the new approach, your app's transition animations will be of poor quality compared to other apps. The new approach requires calling 'setAutoEnterEnabled(true)' and 'setSourceRectHint(...)'. Issue id: PictureInPictureIssue https://developer.android.com/develop/ui/views/picture-in-picture#smoother-transition",
                  "markdown": "Picture In Picture best practices not followed  \n\nStarting in Android 12, the recommended approach for enabling picture-in-picture (PiP) has changed. If your app does not use the new approach, your app's transition animations will be of poor quality compared to other apps. The new approach requires calling `setAutoEnterEnabled(true)` and `setSourceRectHint(...)`.  \n\nIssue id: PictureInPictureIssue  \n\n<https://developer.android.com/develop/ui/views/picture-in-picture#smoother-transition>"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "AndroidLintPictureInPictureIssue",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Android Lint: Correctness",
                      "index": 5,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "AndroidLintLongLogTag",
                "shortDescription": {
                  "text": "Too Long Log Tags"
                },
                "fullDescription": {
                  "text": "Too Long Log Tags Log tags are only allowed to be at most 23 tag characters long. Issue id: LongLogTag",
                  "markdown": "Too Long Log Tags  \n\nLog tags are only allowed to be at most 23 tag characters long.  \n\nIssue id: LongLogTag"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "error",
                  "parameters": {
                    "suppressToolId": "AndroidLintLongLogTag",
                    "ideaSeverity": "ERROR",
                    "qodanaSeverity": "Critical"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Android Lint: Correctness",
                      "index": 5,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "AndroidLintMonochromeLauncherIcon",
                "shortDescription": {
                  "text": "Monochrome icon is not defined"
                },
                "fullDescription": {
                  "text": "Monochrome icon is not defined If 'android:roundIcon' and 'android:icon' are both in your manifest, you must either remove the reference to 'android:roundIcon' if it is not needed; or, supply the monochrome icon in the drawable defined by the 'android:roundIcon' and 'android:icon' attribute. For example, if 'android:roundIcon' and 'android:icon' are both in the manifest, a launcher might choose to use 'android:roundIcon' over 'android:icon' to display the adaptive app icon. Therefore, your themed application iconwill not show if your monochrome attribute is not also specified in 'android:roundIcon'. Issue id: MonochromeLauncherIcon",
                  "markdown": "Monochrome icon is not defined  \n\nIf `android:roundIcon` and `android:icon` are both in your manifest, you must either remove the reference to `android:roundIcon` if it is not needed; or, supply the monochrome icon in the drawable defined by the `android:roundIcon` and `android:icon` attribute.  \n\nFor example, if `android:roundIcon` and `android:icon` are both in the manifest, a launcher might choose to use `android:roundIcon` over `android:icon` to display the adaptive app icon. Therefore, your themed application iconwill not show if your monochrome attribute is not also specified in `android:roundIcon`.  \n\nIssue id: MonochromeLauncherIcon"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "AndroidLintMonochromeLauncherIcon",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Android Lint: Usability",
                      "index": 42,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "AndroidLintTypographyEllipsis",
                "shortDescription": {
                  "text": "Ellipsis string can be replaced with ellipsis character"
                },
                "fullDescription": {
                  "text": "Ellipsis string can be replaced with ellipsis character You can replace the string \"...\" with a dedicated ellipsis character, ellipsis character (u2026, &#8230;). This can help make the text more readable. Issue id: TypographyEllipsis https://en.wikipedia.org/wiki/Ellipsis",
                  "markdown": "Ellipsis string can be replaced with ellipsis character  \n\nYou can replace the string \"...\" with a dedicated ellipsis character, ellipsis character (u2026, \\&#8230;). This can help make the text more readable.  \n\nIssue id: TypographyEllipsis  \n\n<https://en.wikipedia.org/wiki/Ellipsis>"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "AndroidLintTypographyEllipsis",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Android Lint: Usability",
                      "index": 42,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "AndroidLintBidiSpoofing",
                "shortDescription": {
                  "text": "Bidirectional text spoofing"
                },
                "fullDescription": {
                  "text": "Bidirectional text spoofing Unicode bidirectional text characters can alter the order in which the compiler processes tokens. However, this can also be used to hide malicious code, and can be difficult to spot. This lint check audits the source code and looks for cases where it looks like bidirectional text has the potential to be misleading. Issue id: BidiSpoofing https://krebsonsecurity.com/2021/11/trojan-source-bug-threatens-the-security-of-all-code/ https://goo.gle/BidiSpoofing",
                  "markdown": "Bidirectional text spoofing  \n\nUnicode bidirectional text characters can alter the order in which the compiler processes tokens. However, this can also be used to hide malicious code, and can be difficult to spot. This lint check audits the source code and looks for cases where it looks like bidirectional text has the potential to be misleading.  \n\nIssue id: BidiSpoofing  \n\n<https://krebsonsecurity.com/2021/11/trojan-source-bug-threatens-the-security-of-all-code/>  \n<https://goo.gle/BidiSpoofing>"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "error",
                  "parameters": {
                    "suppressToolId": "AndroidLintBidiSpoofing",
                    "ideaSeverity": "ERROR",
                    "qodanaSeverity": "Critical"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Android Lint: Security",
                      "index": 44,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "AndroidLintExpiredTargetSdkVersion",
                "shortDescription": {
                  "text": "TargetSdkVersion No Longer Supported"
                },
                "fullDescription": {
                  "text": "TargetSdkVersion No Longer Supported Configuring your app to target a recent API level ensures that users benefit from significant security and performance improvements, while still allowing your app to run on older Android versions (down to the 'minSdkVersion'). To update your 'targetSdkVersion', follow the steps from \"Meeting Google Play requirements for target API level\", https://developer.android.com/distribute/best-practices/develop/target-sdk.html Issue id: ExpiredTargetSdkVersion https://support.google.com/googleplay/android-developer/answer/113469#targetsdk",
                  "markdown": "TargetSdkVersion No Longer Supported  \n\nConfiguring your app to target a recent API level ensures that users benefit from significant security and performance improvements, while still allowing your app to run on older Android versions (down to the `minSdkVersion`).  \n\nTo update your `targetSdkVersion`, follow the steps from \"Meeting Google Play requirements for target API level\", <https://developer.android.com/distribute/best-practices/develop/target-sdk.html>  \n\nIssue id: ExpiredTargetSdkVersion  \n\n<https://support.google.com/googleplay/android-developer/answer/113469#targetsdk>"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "error",
                  "parameters": {
                    "suppressToolId": "AndroidLintExpiredTargetSdkVersion",
                    "ideaSeverity": "ERROR",
                    "qodanaSeverity": "Critical"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Android Lint: Compliance",
                      "index": 134,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "AndroidLintSetJavaScriptEnabled",
                "shortDescription": {
                  "text": "Using setJavaScriptEnabled"
                },
                "fullDescription": {
                  "text": "Using 'setJavaScriptEnabled' Your code should not invoke 'setJavaScriptEnabled' if you are not sure that your app really requires JavaScript support. Issue id: SetJavaScriptEnabled https://goo.gle/SetJavaScriptEnabled https://developer.android.com/training/articles/security-tips",
                  "markdown": "Using `setJavaScriptEnabled`  \n\nYour code should not invoke `setJavaScriptEnabled` if you are not sure that your app really requires JavaScript support.  \n\nIssue id: SetJavaScriptEnabled  \n\n<https://goo.gle/SetJavaScriptEnabled>  \n<https://developer.android.com/training/articles/security-tips>"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "AndroidLintSetJavaScriptEnabled",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Android Lint: Security",
                      "index": 44,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "AndroidLintByteOrderMark",
                "shortDescription": {
                  "text": "Byte order mark inside files"
                },
                "fullDescription": {
                  "text": "Byte order mark inside files Lint will flag any byte-order-mark (BOM) characters it finds in the middle of a file. Since we expect files to be encoded with UTF-8 (see the EnforceUTF8 issue), the BOM characters are not necessary, and they are not handled correctly by all tools. For example, if you have a BOM as part of a resource name in one particular translation, that name will not be considered identical to the base resource's name and the translation will not be used. Issue id: ByteOrderMark https://en.wikipedia.org/wiki/Byte_order_mark",
                  "markdown": "Byte order mark inside files  \n\nLint will flag any byte-order-mark (BOM) characters it finds in the middle of a file. Since we expect files to be encoded with UTF-8 (see the EnforceUTF8 issue), the BOM characters are not necessary, and they are not handled correctly by all tools. For example, if you have a BOM as part of a resource name in one particular translation, that name will not be considered identical to the base resource's name and the translation will not be used.  \n\nIssue id: ByteOrderMark  \n\n<https://en.wikipedia.org/wiki/Byte_order_mark>"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "error",
                  "parameters": {
                    "suppressToolId": "AndroidLintByteOrderMark",
                    "ideaSeverity": "ERROR",
                    "qodanaSeverity": "Critical"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Android Lint: Internationalization",
                      "index": 63,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "AndroidLintShortAlarm",
                "shortDescription": {
                  "text": "Short or Frequent Alarm"
                },
                "fullDescription": {
                  "text": "Short or Frequent Alarm Frequent alarms are bad for battery life. As of API 22, the 'AlarmManager' will override near-future and high-frequency alarm requests, delaying the alarm at least 5 seconds into the future and ensuring that the repeat interval is at least 60 seconds. If you really need to do work sooner than 5 seconds, post a delayed message or runnable to a Handler. Issue id: ShortAlarm",
                  "markdown": "Short or Frequent Alarm  \n\nFrequent alarms are bad for battery life. As of API 22, the `AlarmManager` will override near-future and high-frequency alarm requests, delaying the alarm at least 5 seconds into the future and ensuring that the repeat interval is at least 60 seconds.  \n\nIf you really need to do work sooner than 5 seconds, post a delayed message or runnable to a Handler.  \n\nIssue id: ShortAlarm"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "AndroidLintShortAlarm",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Android Lint: Correctness",
                      "index": 5,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "K1TypeParameterFindViewById",
                "shortDescription": {
                  "text": "Cast can be converted to findViewById with type parameter"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "note",
                  "parameters": {
                    "suppressToolId": "K1TypeParameterFindViewById",
                    "ideaSeverity": "WEAK WARNING",
                    "qodanaSeverity": "Moderate"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Kotlin Android",
                      "index": 132,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "AndroidLintRegistered",
                "shortDescription": {
                  "text": "Class is not registered in the manifest"
                },
                "fullDescription": {
                  "text": "Class is not registered in the manifest Activities, services and content providers should be registered in the 'AndroidManifest.xml' file using '<activity>', '<service>' and '<provider>' tags. If your activity is simply a parent class intended to be subclassed by other \"real\" activities, make it an abstract class. Issue id: Registered https://developer.android.com/guide/topics/manifest/manifest-intro.html",
                  "markdown": "Class is not registered in the manifest  \n\nActivities, services and content providers should be registered in the `AndroidManifest.xml` file using `<activity>`, `<service>` and `<provider>` tags.  \n\nIf your activity is simply a parent class intended to be subclassed by other \"real\" activities, make it an abstract class.  \n\nIssue id: Registered  \n\n<https://developer.android.com/guide/topics/manifest/manifest-intro.html>"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "AndroidLintRegistered",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Android Lint: Correctness",
                      "index": 5,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "AndroidLintChromeOsAbiSupport",
                "shortDescription": {
                  "text": "Missing ABI Support for ChromeOS"
                },
                "fullDescription": {
                  "text": "Missing ABI Support for ChromeOS To properly support ChromeOS, your Android application should have an x86 and/or x86_64 binary as part of the build configuration. To fix the issue, ensure your files are properly optimized for ARM; the binary translator will then ensure compatibility with x86. Alternatively, add an 'abiSplit' for x86 within your 'build.gradle' file and create the required x86 dependencies. Issue id: ChromeOsAbiSupport https://developer.android.com/ndk/guides/abis",
                  "markdown": "Missing ABI Support for ChromeOS  \n\nTo properly support ChromeOS, your Android application should have an x86 and/or x86_64 binary as part of the build configuration. To fix the issue, ensure your files are properly optimized for ARM; the binary translator will then ensure compatibility with x86. Alternatively, add an `abiSplit` for x86 within your `build.gradle` file and create the required x86 dependencies.  \n\nIssue id: ChromeOsAbiSupport  \n\n<https://developer.android.com/ndk/guides/abis>"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "AndroidLintChromeOsAbiSupport",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Android Lint: Correctness",
                      "index": 5,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "AndroidLintProguard",
                "shortDescription": {
                  "text": "Using obsolete ProGuard configuration"
                },
                "fullDescription": {
                  "text": "Using obsolete ProGuard configuration Using '-keepclasseswithmembernames' in a proguard config file is not correct; it can cause some symbols to be renamed which should not be. Earlier versions of ADT used to create proguard.cfg files with the wrong format. Instead of '-keepclasseswithmembernames' use '-keepclasseswithmembers', since the old flags also implies \"allow shrinking\" which means symbols only referred to from XML and not Java (such as possibly CustomViews) can get deleted. Issue id: Proguard https://issuetracker.google.com/36928077",
                  "markdown": "Using obsolete ProGuard configuration  \n\nUsing `-keepclasseswithmembernames` in a proguard config file is not correct; it can cause some symbols to be renamed which should not be.  \n\nEarlier versions of ADT used to create proguard.cfg files with the wrong format. Instead of `-keepclasseswithmembernames` use `-keepclasseswithmembers`, since the old flags also implies \"allow shrinking\" which means symbols only referred to from XML and not Java (such as possibly CustomViews) can get deleted.  \n\nIssue id: Proguard  \n\n<https://issuetracker.google.com/36928077>"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "error",
                  "parameters": {
                    "suppressToolId": "AndroidLintProguard",
                    "ideaSeverity": "ERROR",
                    "qodanaSeverity": "Critical"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Android Lint: Correctness",
                      "index": 5,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "AndroidLintRtlSymmetry",
                "shortDescription": {
                  "text": "Padding and margin symmetry"
                },
                "fullDescription": {
                  "text": "Padding and margin symmetry If you specify padding or margin on the left side of a layout, you should probably also specify padding on the right side (and vice versa) for right-to-left layout symmetry. Issue id: RtlSymmetry",
                  "markdown": "Padding and margin symmetry  \n\nIf you specify padding or margin on the left side of a layout, you should probably also specify padding on the right side (and vice versa) for right-to-left layout symmetry.  \n\nIssue id: RtlSymmetry"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "AndroidLintRtlSymmetry",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Android Lint: Internationalization",
                      "index": 63,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "AndroidLintMissingClass",
                "shortDescription": {
                  "text": "Missing registered class"
                },
                "fullDescription": {
                  "text": "Missing registered class If a class is referenced in the manifest or in a layout file, it must also exist in the project (or in one of the libraries included by the project. This check helps uncover typos in registration names, or attempts to rename or move classes without updating the XML references properly. Issue id: MissingClass https://developer.android.com/guide/topics/manifest/manifest-intro.html",
                  "markdown": "Missing registered class  \n\nIf a class is referenced in the manifest or in a layout file, it must also exist in the project (or in one of the libraries included by the project. This check helps uncover typos in registration names, or attempts to rename or move classes without updating the XML references properly.  \n\nIssue id: MissingClass  \n\n<https://developer.android.com/guide/topics/manifest/manifest-intro.html>"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "error",
                  "parameters": {
                    "suppressToolId": "AndroidLintMissingClass",
                    "ideaSeverity": "ERROR",
                    "qodanaSeverity": "Critical"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Android Lint: Correctness",
                      "index": 5,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "AndroidLintSetAndClearCommunicationDevice",
                "shortDescription": {
                  "text": "Clearing communication device"
                },
                "fullDescription": {
                  "text": "Clearing communication device After selecting the audio device for communication use cases using 'setCommunicationDevice(AudioDeviceInfo device)', the selection is active as long as the requesting application process lives, until 'clearCommunicationDevice()' is called or until the device is disconnected. It is therefore important to clear the request when a call ends or the requesting activity or service is stopped or destroyed. Issue id: SetAndClearCommunicationDevice",
                  "markdown": "Clearing communication device  \n\nAfter selecting the audio device for communication use cases using `setCommunicationDevice(AudioDeviceInfo device)`, the selection is active as long as the requesting application process lives, until `clearCommunicationDevice()` is called or until the device is disconnected. It is therefore important to clear the request when a call ends or the requesting activity or service is stopped or destroyed.  \n\nIssue id: SetAndClearCommunicationDevice"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "AndroidLintSetAndClearCommunicationDevice",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Android Lint: Correctness",
                      "index": 5,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "AndroidLintDuplicateDefinition",
                "shortDescription": {
                  "text": "Duplicate definitions of resources"
                },
                "fullDescription": {
                  "text": "Duplicate definitions of resources You can define a resource multiple times in different resource folders; that's how string translations are done, for example. However, defining the same resource more than once in the same resource folder is likely an error, for example attempting to add a new resource without realizing that the name is already used, and so on. Issue id: DuplicateDefinition",
                  "markdown": "Duplicate definitions of resources  \n\nYou can define a resource multiple times in different resource folders; that's how string translations are done, for example. However, defining the same resource more than once in the same resource folder is likely an error, for example attempting to add a new resource without realizing that the name is already used, and so on.  \n\nIssue id: DuplicateDefinition"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "error",
                  "parameters": {
                    "suppressToolId": "AndroidLintDuplicateDefinition",
                    "ideaSeverity": "ERROR",
                    "qodanaSeverity": "Critical"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Android Lint: Correctness",
                      "index": 5,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "AndroidLintSyntheticAccessor",
                "shortDescription": {
                  "text": "Synthetic Accessor"
                },
                "fullDescription": {
                  "text": "Synthetic Accessor A private inner class which is accessed from the outer class will force the compiler to insert a synthetic accessor; this means that you are causing extra overhead. This is not important in small projects, but is important for large apps running up against the 64K method handle limit, and especially for libraries where you want to make sure your library is as small as possible for the cases where your library is used in an app running up against the 64K limit. Issue id: SyntheticAccessor",
                  "markdown": "Synthetic Accessor  \n\nA private inner class which is accessed from the outer class will force the compiler to insert a synthetic accessor; this means that you are causing extra overhead. This is not important in small projects, but is important for large apps running up against the 64K method handle limit, and especially for **libraries** where you want to make sure your library is as small as possible for the cases where your library is used in an app running up against the 64K limit.  \n\nIssue id: SyntheticAccessor"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "AndroidLintSyntheticAccessor",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Android Lint: Performance",
                      "index": 14,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "AndroidLintMissingTvBanner",
                "shortDescription": {
                  "text": "TV Missing Banner"
                },
                "fullDescription": {
                  "text": "TV Missing Banner A TV application must provide a home screen banner for each localization if it includes a Leanback launcher intent filter. The banner is the app launch point that appears on the home screen in the apps and games rows. Issue id: MissingTvBanner https://developer.android.com/training/tv/start/start.html#banner",
                  "markdown": "TV Missing Banner  \n\nA TV application must provide a home screen banner for each localization if it includes a Leanback launcher intent filter. The banner is the app launch point that appears on the home screen in the apps and games rows.  \n\nIssue id: MissingTvBanner  \n\n<https://developer.android.com/training/tv/start/start.html#banner>"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "error",
                  "parameters": {
                    "suppressToolId": "AndroidLintMissingTvBanner",
                    "ideaSeverity": "ERROR",
                    "qodanaSeverity": "Critical"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Android Lint: Correctness",
                      "index": 5,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "AndroidLintNetworkSecurityConfig",
                "shortDescription": {
                  "text": "Valid Network Security Config File"
                },
                "fullDescription": {
                  "text": "Valid Network Security Config File Ensures that a '<network-security-config>' file, which is pointed to by an 'android:networkSecurityConfig' attribute in the manifest file, is valid Issue id: NetworkSecurityConfig https://developer.android.com/preview/features/security-config.html",
                  "markdown": "Valid Network Security Config File  \n\nEnsures that a `<network-security-config>` file, which is pointed to by an `android:networkSecurityConfig` attribute in the manifest file, is valid  \n\nIssue id: NetworkSecurityConfig  \n\n<https://developer.android.com/preview/features/security-config.html>"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "error",
                  "parameters": {
                    "suppressToolId": "AndroidLintNetworkSecurityConfig",
                    "ideaSeverity": "ERROR",
                    "qodanaSeverity": "Critical"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Android Lint: Correctness",
                      "index": 5,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "AndroidLintDisableBaselineAlignment",
                "shortDescription": {
                  "text": "Missing baselineAligned attribute"
                },
                "fullDescription": {
                  "text": "Missing 'baselineAligned' attribute When a 'LinearLayout' is used to distribute the space proportionally between nested layouts, the baseline alignment property should be turned off to make the layout computation faster. Issue id: DisableBaselineAlignment",
                  "markdown": "Missing `baselineAligned` attribute  \n\nWhen a `LinearLayout` is used to distribute the space proportionally between nested layouts, the baseline alignment property should be turned off to make the layout computation faster.  \n\nIssue id: DisableBaselineAlignment"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "AndroidLintDisableBaselineAlignment",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Android Lint: Performance",
                      "index": 14,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "AndroidLintHardcodedText",
                "shortDescription": {
                  "text": "Hardcoded text"
                },
                "fullDescription": {
                  "text": "Hardcoded text Hardcoding text attributes directly in layout files is bad for several reasons: * When creating configuration variations (for example for landscape or portrait) you have to repeat the actual text (and keep it up to date when making changes) * The application cannot be translated to other languages by just adding new translations for existing string resources. There are quickfixes to automatically extract this hardcoded string into a resource lookup. Issue id: HardcodedText",
                  "markdown": "Hardcoded text  \n\nHardcoding text attributes directly in layout files is bad for several reasons:  \n\n\\* When creating configuration variations (for example for landscape or portrait) you have to repeat the actual text (and keep it up to date when making changes)  \n\n\\* The application cannot be translated to other languages by just adding new translations for existing string resources.  \n\nThere are quickfixes to automatically extract this hardcoded string into a resource lookup.  \n\nIssue id: HardcodedText"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "AndroidLintHardcodedText",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Android Lint: Internationalization",
                      "index": 63,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "AndroidLintNestedScrolling",
                "shortDescription": {
                  "text": "Nested scrolling widgets"
                },
                "fullDescription": {
                  "text": "Nested scrolling widgets A scrolling widget such as a 'ScrollView' should not contain any nested scrolling widgets since this has various usability issues Issue id: NestedScrolling",
                  "markdown": "Nested scrolling widgets  \n\nA scrolling widget such as a `ScrollView` should not contain any nested scrolling widgets since this has various usability issues  \n\nIssue id: NestedScrolling"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "AndroidLintNestedScrolling",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Android Lint: Correctness",
                      "index": 5,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "AndroidLintInvalidAnalyticsName",
                "shortDescription": {
                  "text": "Invalid Analytics Name"
                },
                "fullDescription": {
                  "text": "Invalid Analytics Name Event names and parameters must follow the naming conventions defined in the`FirebaseAnalytics#logEvent()` documentation. Issue id: InvalidAnalyticsName https://firebase.google.com/docs/reference/android/com/google/firebase/analytics/FirebaseAnalytics#logEvent(java.lang.String,%20android.os.Bundle)",
                  "markdown": "Invalid Analytics Name  \n\nEvent names and parameters must follow the naming conventions defined in the\\`FirebaseAnalytics#logEvent()\\` documentation.  \n\nIssue id: InvalidAnalyticsName  \n\n<https://firebase.google.com/docs/reference/android/com/google/firebase/analytics/FirebaseAnalytics#logEvent(java.lang.String,%20android.os.Bundle)>"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "error",
                  "parameters": {
                    "suppressToolId": "AndroidLintInvalidAnalyticsName",
                    "ideaSeverity": "ERROR",
                    "qodanaSeverity": "Critical"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Android Lint: Correctness",
                      "index": 5,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "AndroidLintRtlEnabled",
                "shortDescription": {
                  "text": "Using RTL attributes without enabling RTL support"
                },
                "fullDescription": {
                  "text": "Using RTL attributes without enabling RTL support To enable right-to-left support, when running on API 17 and higher, you must set the 'android:supportsRtl' attribute in the manifest '<application>' element. If you have started adding RTL attributes, but have not yet finished the migration, you can set the attribute to false to satisfy this lint check. Issue id: RtlEnabled",
                  "markdown": "Using RTL attributes without enabling RTL support  \n\nTo enable right-to-left support, when running on API 17 and higher, you must set the `android:supportsRtl` attribute in the manifest `<application>` element.  \n\nIf you have started adding RTL attributes, but have not yet finished the migration, you can set the attribute to false to satisfy this lint check.  \n\nIssue id: RtlEnabled"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "AndroidLintRtlEnabled",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Android Lint: Internationalization",
                      "index": 63,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "AndroidLintStartActivityAndCollapseDeprecated",
                "shortDescription": {
                  "text": "TileService.startActivityAndCollapse(Intent) is deprecated"
                },
                "fullDescription": {
                  "text": "TileService.startActivityAndCollapse(Intent) is deprecated 'TileService#startActivityAndCollapse(Intent)' has been deprecated, and will throw an 'UnsupportedOperationException' if used in apps targeting Android versions UpsideDownCake and higher. Convert the Intent to a PendingIntent. Issue id: StartActivityAndCollapseDeprecated",
                  "markdown": "TileService.startActivityAndCollapse(Intent) is deprecated  \n\n`TileService#startActivityAndCollapse(Intent)` has been deprecated, and will throw an `UnsupportedOperationException` if used in apps targeting Android versions UpsideDownCake and higher. Convert the Intent to a PendingIntent.  \n\nIssue id: StartActivityAndCollapseDeprecated"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "error",
                  "parameters": {
                    "suppressToolId": "AndroidLintStartActivityAndCollapseDeprecated",
                    "ideaSeverity": "ERROR",
                    "qodanaSeverity": "Critical"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Android Lint: Correctness",
                      "index": 5,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "AndroidLintHandlerLeak",
                "shortDescription": {
                  "text": "Handler reference leaks"
                },
                "fullDescription": {
                  "text": "Handler reference leaks Since this Handler is declared as an inner class, it may prevent the outer class from being garbage collected. If the Handler is using a 'Looper' or 'MessageQueue' for a thread other than the main thread, then there is no issue. If the 'Handler' is using the 'Looper' or 'MessageQueue' of the main thread, you need to fix your 'Handler' declaration, as follows: Declare the 'Handler' as a static class; In the outer class, instantiate a 'WeakReference' to the outer class and pass this object to your 'Handler' when you instantiate the 'Handler'; Make all references to members of the outer class using the 'WeakReference' object. Issue id: HandlerLeak",
                  "markdown": "Handler reference leaks  \n\nSince this Handler is declared as an inner class, it may prevent the outer class from being garbage collected. If the Handler is using a `Looper` or `MessageQueue` for a thread other than the main thread, then there is no issue. If the `Handler` is using the `Looper` or `MessageQueue` of the main thread, you need to fix your `Handler` declaration, as follows: Declare the `Handler` as a static class; In the outer class, instantiate a `WeakReference` to the outer class and pass this object to your `Handler` when you instantiate the `Handler`; Make all references to members of the outer class using the `WeakReference` object.  \n\nIssue id: HandlerLeak"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "AndroidLintHandlerLeak",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Android Lint: Performance",
                      "index": 14,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "AndroidLintMenuTitle",
                "shortDescription": {
                  "text": "Missing menu title"
                },
                "fullDescription": {
                  "text": "Missing menu title From the action bar documentation: \"It's important that you always define android:title for each menu item — even if you don't declare that the title appear with the action item — for three reasons: * If there's not enough room in the action bar for the action item, the menu item appears in the overflow menu and only the title appears. * Screen readers for sight-impaired users read the menu item's title. * If the action item appears with only the icon, a user can long-press the item to reveal a tool-tip that displays the action item's title. The android:icon is always optional, but recommended. Issue id: MenuTitle https://developer.android.com/training/appbar",
                  "markdown": "Missing menu title  \n\nFrom the action bar documentation:  \n\"It's important that you always define android:title for each menu item --- even if you don't declare that the title appear with the action item --- for three reasons:  \n\n\\* If there's not enough room in the action bar for the action item, the menu item appears in the overflow menu and only the title appears.  \n\\* Screen readers for sight-impaired users read the menu item's title.  \n\\* If the action item appears with only the icon, a user can long-press the item to reveal a tool-tip that displays the action item's title.  \n\nThe android:icon is always optional, but recommended.  \n\nIssue id: MenuTitle  \n\n<https://developer.android.com/training/appbar>"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "error",
                  "parameters": {
                    "suppressToolId": "AndroidLintMenuTitle",
                    "ideaSeverity": "ERROR",
                    "qodanaSeverity": "Critical"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Android Lint: Usability",
                      "index": 42,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "AndroidLintMissingMediaBrowserServiceIntentFilter",
                "shortDescription": {
                  "text": "Missing MediaBrowserService intent-filter"
                },
                "fullDescription": {
                  "text": "Missing MediaBrowserService intent-filter An Automotive Media App requires an exported service that extends 'android.service.media.MediaBrowserService' with an 'intent-filter' for the action 'android.media.browse.MediaBrowserService' to be able to browse and play media. To do this, add `<intent-filter>`\n    `<action android:name=\"android.media.browse.MediaBrowserService\" />`\n`</intent-filter>`\n to the service that extends 'android.service.media.MediaBrowserService' Issue id: MissingMediaBrowserServiceIntentFilter https://developer.android.com/training/auto/audio/index.html#config_manifest",
                  "markdown": "Missing MediaBrowserService intent-filter  \n\nAn Automotive Media App requires an exported service that extends `android.service.media.MediaBrowserService` with an `intent-filter` for the action `android.media.browse.MediaBrowserService` to be able to browse and play media.  \n\nTo do this, add\n\n```\n`<intent-filter>`\n    `<action android:name=\"android.media.browse.MediaBrowserService\" />`\n`</intent-filter>`\n```\n\nto the service that extends `android.service.media.MediaBrowserService`  \n\nIssue id: MissingMediaBrowserServiceIntentFilter  \n\n<https://developer.android.com/training/auto/audio/index.html#config_manifest>"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "error",
                  "parameters": {
                    "suppressToolId": "AndroidLintMissingMediaBrowserServiceIntentFilter",
                    "ideaSeverity": "ERROR",
                    "qodanaSeverity": "Critical"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Android Lint: Correctness",
                      "index": 5,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "AndroidRoomQuestionMarkBindParameter",
                "shortDescription": {
                  "text": "'?' used as parameter in a Room query."
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "error",
                  "parameters": {
                    "suppressToolId": "AndroidRoomQuestionMarkBindParameter",
                    "ideaSeverity": "ERROR",
                    "qodanaSeverity": "Critical"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Android/Room",
                      "index": 91,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "AndroidLintMutatingSharedPrefs",
                "shortDescription": {
                  "text": "Mutating an Immutable SharedPrefs Set"
                },
                "fullDescription": {
                  "text": "Mutating an Immutable SharedPrefs Set As stated in the docs for 'SharedPreferences.getStringSet', you must not modify the set returned by 'getStringSet': \"Note that you <em>must not</em> modify the set instance returned by this call. The consistency of the stored data is not guaranteed if you do, nor is your ability to modify the instance at all.\" Issue id: MutatingSharedPrefs",
                  "markdown": "Mutating an Immutable SharedPrefs Set  \n\nAs stated in the docs for `SharedPreferences.getStringSet`, you must not modify the set returned by `getStringSet`:  \n\n\"Note that you \\<em\\>must not\\</em\\> modify the set instance returned by this call. The consistency of the stored data is not guaranteed if you do, nor is your ability to modify the instance at all.\"  \n\nIssue id: MutatingSharedPrefs"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "AndroidLintMutatingSharedPrefs",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Android Lint: Correctness",
                      "index": 5,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "AndroidLintMissingFirebaseInstanceTokenRefresh",
                "shortDescription": {
                  "text": "Missing Firebase Messaging Callback"
                },
                "fullDescription": {
                  "text": "Missing Firebase Messaging Callback Apps that use Firebase Cloud Messaging should implement the 'FirebaseMessagingService#onNewToken()' callback in order to observe token changes. Issue id: MissingFirebaseInstanceTokenRefresh https://firebase.google.com/docs/cloud-messaging/android/client#monitor-token-generation",
                  "markdown": "Missing Firebase Messaging Callback  \n\nApps that use Firebase Cloud Messaging should implement the `FirebaseMessagingService#onNewToken()` callback in order to observe token changes.  \n\nIssue id: MissingFirebaseInstanceTokenRefresh  \n\n<https://firebase.google.com/docs/cloud-messaging/android/client#monitor-token-generation>"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "AndroidLintMissingFirebaseInstanceTokenRefresh",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Android Lint: Correctness",
                      "index": 5,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "AndroidLintReservedSystemPermission",
                "shortDescription": {
                  "text": "Permission name is a reserved Android permission"
                },
                "fullDescription": {
                  "text": "Permission name is a reserved Android permission This check looks for custom permission declarations whose names are reserved values for system or Android SDK permissions, or begin with the reserved string 'android.' Please double check the permission name you have supplied. Attempting to redeclare a system or Android SDK permission will be ignored. Using the prefix 'android.' is a violation of the Android Compatibility Definition Document. Issue id: ReservedSystemPermission",
                  "markdown": "Permission name is a reserved Android permission  \n\nThis check looks for custom permission declarations whose names are reserved values for system or Android SDK permissions, or begin with the reserved string `android.`  \n\nPlease double check the permission name you have supplied. Attempting to redeclare a system or Android SDK permission will be ignored. Using the prefix `android.` is a violation of the Android Compatibility Definition Document.  \n\nIssue id: ReservedSystemPermission"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "error",
                  "parameters": {
                    "suppressToolId": "AndroidLintReservedSystemPermission",
                    "ideaSeverity": "ERROR",
                    "qodanaSeverity": "Critical"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Android Lint: Security",
                      "index": 44,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "AndroidLintConstantLocale",
                "shortDescription": {
                  "text": "Constant Locale"
                },
                "fullDescription": {
                  "text": "Constant Locale Assigning 'Locale.getDefault()' to a constant is suspicious, because the locale can change while the app is running. Issue id: ConstantLocale",
                  "markdown": "Constant Locale  \n\nAssigning `Locale.getDefault()` to a constant is suspicious, because the locale can change while the app is running.  \n\nIssue id: ConstantLocale"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "AndroidLintConstantLocale",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Android Lint: Internationalization",
                      "index": 63,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "XmlWrongFileType",
                "shortDescription": {
                  "text": "Android XML root tag validation"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "XmlWrongFileType",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Android",
                      "index": 83,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "AndroidLintIconColors",
                "shortDescription": {
                  "text": "Icon colors do not follow the recommended visual style"
                },
                "fullDescription": {
                  "text": "Icon colors do not follow the recommended visual style Notification icons and Action Bar icons should only white and shades of gray. See the Android Design Guide for more details. Note that the way Lint decides whether an icon is an action bar icon or a notification icon is based on the filename prefix: 'ic_menu_' for action bar icons, 'ic_stat_' for notification icons etc. These correspond to the naming conventions documented in https://d.android.com/r/studio-ui/designer/material/iconography Issue id: IconColors",
                  "markdown": "Icon colors do not follow the recommended visual style  \n\nNotification icons and Action Bar icons should only white and shades of gray. See the Android Design Guide for more details. Note that the way Lint decides whether an icon is an action bar icon or a notification icon is based on the filename prefix: `ic_menu_` for action bar icons, `ic_stat_` for notification icons etc. These correspond to the naming conventions documented in <https://d.android.com/r/studio-ui/designer/material/iconography>  \n\nIssue id: IconColors"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "AndroidLintIconColors",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Android Lint: Usability",
                      "index": 42,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "AndroidLintLibraryCustomView",
                "shortDescription": {
                  "text": "Custom views in libraries should use res-auto-namespace"
                },
                "fullDescription": {
                  "text": "Custom views in libraries should use res-auto-namespace When using a custom view with custom attributes in a library project, the layout must use the special namespace http://schemas.android.com/apk/res-auto instead of a URI which includes the library project's own package. This will be used to automatically adjust the namespace of the attributes when the library resources are merged into the application project. Issue id: LibraryCustomView",
                  "markdown": "Custom views in libraries should use res-auto-namespace  \n\nWhen using a custom view with custom attributes in a library project, the layout must use the special namespace <http://schemas.android.com/apk/res-auto> instead of a URI which includes the library project's own package. This will be used to automatically adjust the namespace of the attributes when the library resources are merged into the application project.  \n\nIssue id: LibraryCustomView"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "error",
                  "parameters": {
                    "suppressToolId": "AndroidLintLibraryCustomView",
                    "ideaSeverity": "ERROR",
                    "qodanaSeverity": "Critical"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Android Lint: Correctness",
                      "index": 5,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "AndroidLintSelectableText",
                "shortDescription": {
                  "text": "Dynamic text should probably be selectable"
                },
                "fullDescription": {
                  "text": "Dynamic text should probably be selectable If a '<TextView>' is used to display data, the user might want to copy that data and paste it elsewhere. To allow this, the '<TextView>' should specify 'android:textIsSelectable=\"true\"'. This lint check looks for TextViews which are likely to be displaying data: views whose text is set dynamically. Issue id: SelectableText",
                  "markdown": "Dynamic text should probably be selectable  \n\nIf a `<TextView>` is used to display data, the user might want to copy that data and paste it elsewhere. To allow this, the `<TextView>` should specify `android:textIsSelectable=\"true\"`.  \n\nThis lint check looks for TextViews which are likely to be displaying data: views whose text is set dynamically.  \n\nIssue id: SelectableText"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "AndroidLintSelectableText",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Android Lint: Usability",
                      "index": 42,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "AndroidLintCustomX509TrustManager",
                "shortDescription": {
                  "text": "Implements custom TLS trust manager"
                },
                "fullDescription": {
                  "text": "Implements custom TLS trust manager This check looks for custom 'X509TrustManager' implementations. Issue id: CustomX509TrustManager https://goo.gle/CustomX509TrustManager",
                  "markdown": "Implements custom TLS trust manager  \n\nThis check looks for custom `X509TrustManager` implementations.  \n\nIssue id: CustomX509TrustManager  \n\n<https://goo.gle/CustomX509TrustManager>"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "AndroidLintCustomX509TrustManager",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Android Lint: Security",
                      "index": 44,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "AndroidLintVectorPath",
                "shortDescription": {
                  "text": "Long vector paths"
                },
                "fullDescription": {
                  "text": "Long vector paths Using long vector paths is bad for performance. There are several ways to make the 'pathData' shorter: * Using less precision * Removing some minor details * Using the Android Studio vector conversion tool * Rasterizing the image (converting to PNG) Issue id: VectorPath",
                  "markdown": "Long vector paths  \n\nUsing long vector paths is bad for performance. There are several ways to make the `pathData` shorter:  \n\\* Using less precision  \n\\* Removing some minor details  \n\\* Using the Android Studio vector conversion tool  \n\\* Rasterizing the image (converting to PNG)  \n\nIssue id: VectorPath"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "AndroidLintVectorPath",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Android Lint: Performance",
                      "index": 14,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "AndroidLintReportShortcutUsage",
                "shortDescription": {
                  "text": "Report shortcut usage"
                },
                "fullDescription": {
                  "text": "Report shortcut usage Reporting shortcut usage is important to improving the ranking of shortcuts Issue id: ReportShortcutUsage https://developer.android.com/develop/ui/views/launch/shortcuts/managing-shortcuts",
                  "markdown": "Report shortcut usage  \n\nReporting shortcut usage is important to improving the ranking of shortcuts  \n\nIssue id: ReportShortcutUsage  \n\n<https://developer.android.com/develop/ui/views/launch/shortcuts/managing-shortcuts>"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "note",
                  "parameters": {
                    "suppressToolId": "AndroidLintReportShortcutUsage",
                    "ideaSeverity": "INFO",
                    "qodanaSeverity": "Info"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Android Lint: Usability",
                      "index": 42,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "AndroidLintLaunchActivityFromNotification",
                "shortDescription": {
                  "text": "Notification Launches Services or BroadcastReceivers"
                },
                "fullDescription": {
                  "text": "Notification Launches Services or BroadcastReceivers Notifications should only launch activities -- that's what users expect (and has been the guidance in both the Android SDK and Material Design documentation for a while). A 'Service' or a 'BroadcastReceiver' should not be used as an intermediate, because this can lead to significant performance problems, and as a result, this will not be allowed in Android 12. Issue id: LaunchActivityFromNotification https://developer.android.com/guide/topics/ui/notifiers/notifications?hl=en#Actions https://d.android.com/r/studio-ui/designer/material/notifications-behavior https://developer.android.com/guide/topics/ui/notifiers/notifications?hl=en",
                  "markdown": "Notification Launches Services or BroadcastReceivers  \n\nNotifications should only launch activities -- that's what users expect (and has been the guidance in both the Android SDK and Material Design documentation for a while).  \n\nA `Service` or a `BroadcastReceiver` should not be used as an intermediate, because this can lead to significant performance problems, and as a result, this will not be allowed in Android 12.  \n\nIssue id: LaunchActivityFromNotification  \n\n<https://developer.android.com/guide/topics/ui/notifiers/notifications?hl=en#Actions>  \n<https://d.android.com/r/studio-ui/designer/material/notifications-behavior>  \n<https://developer.android.com/guide/topics/ui/notifiers/notifications?hl=en>"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "AndroidLintLaunchActivityFromNotification",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Android Lint: Performance",
                      "index": 14,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "AndroidLintWebViewApiAvailability",
                "shortDescription": {
                  "text": "WebView API Availability"
                },
                "fullDescription": {
                  "text": "WebView API Availability The 'androidx.webkit' library is a static library you can add to your Android application allowing you to use new APIs on older platform versions, targeting more devices. Issue id: WebViewApiAvailability https://developer.android.com/reference/androidx/webkit/package-summary",
                  "markdown": "WebView API Availability  \n\nThe `androidx.webkit` library is a static library you can add to your Android application allowing you to use new APIs on older platform versions, targeting more devices.  \n\nIssue id: WebViewApiAvailability  \n\n<https://developer.android.com/reference/androidx/webkit/package-summary>"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "AndroidLintWebViewApiAvailability",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Android Lint: Correctness",
                      "index": 5,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "AndroidLintAnimatorKeep",
                "shortDescription": {
                  "text": "Missing @Keep for Animated Properties"
                },
                "fullDescription": {
                  "text": "Missing @Keep for Animated Properties When you use property animators, properties can be accessed via reflection. Those methods should be annotated with @Keep to ensure that during release builds, the methods are not potentially treated as unused and removed, or treated as internal only and get renamed to something shorter. This check will also flag other potential reflection problems it encounters, such as a missing property, wrong argument types, etc. Issue id: AnimatorKeep",
                  "markdown": "Missing @Keep for Animated Properties  \n\nWhen you use property animators, properties can be accessed via reflection. Those methods should be annotated with @Keep to ensure that during release builds, the methods are not potentially treated as unused and removed, or treated as internal only and get renamed to something shorter.  \n\nThis check will also flag other potential reflection problems it encounters, such as a missing property, wrong argument types, etc.  \n\nIssue id: AnimatorKeep"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "AndroidLintAnimatorKeep",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Android Lint: Performance",
                      "index": 14,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "AndroidLintHighSamplingRate",
                "shortDescription": {
                  "text": "High sensor sampling rate"
                },
                "fullDescription": {
                  "text": "High sensor sampling rate Most apps don't need access to high sensor sampling rate. Double check your use case to ensure your app absolutely needs access to sensor sampling rate > 200Hz. Be prepared for your app to be rejected from listing on Play Store until your use case for high sensor sampling rate has been reviewed and validated by the policy team. Issue id: HighSamplingRate",
                  "markdown": "High sensor sampling rate  \n\nMost apps don't need access to high sensor sampling rate. Double check your use case to ensure your app absolutely needs access to sensor sampling rate \\> 200Hz. Be prepared for your app to be rejected from listing on Play Store until your use case for high sensor sampling rate has been reviewed and validated by the policy team.  \n\nIssue id: HighSamplingRate"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "AndroidLintHighSamplingRate",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Android Lint: Correctness",
                      "index": 5,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "AndroidLintSimpleDateFormat",
                "shortDescription": {
                  "text": "Implied locale in date format"
                },
                "fullDescription": {
                  "text": "Implied locale in date format Almost all callers should use 'getDateInstance()', 'getDateTimeInstance()', or 'getTimeInstance()' to get a ready-made instance of SimpleDateFormat suitable for the user's locale. The main reason you'd create an instance this class directly is because you need to format/parse a specific machine-readable format, in which case you almost certainly want to explicitly ask for US to ensure that you get ASCII digits (rather than, say, Arabic digits). Therefore, you should either use the form of the SimpleDateFormat constructor where you pass in an explicit locale, such as Locale.US, or use one of the get instance methods, or suppress this error if really know what you are doing. Issue id: SimpleDateFormat https://developer.android.com/reference/java/text/SimpleDateFormat.html",
                  "markdown": "Implied locale in date format  \n\nAlmost all callers should use `getDateInstance()`, `getDateTimeInstance()`, or `getTimeInstance()` to get a ready-made instance of SimpleDateFormat suitable for the user's locale. The main reason you'd create an instance this class directly is because you need to format/parse a specific machine-readable format, in which case you almost certainly want to explicitly ask for US to ensure that you get ASCII digits (rather than, say, Arabic digits).  \n\nTherefore, you should either use the form of the SimpleDateFormat constructor where you pass in an explicit locale, such as Locale.US, or use one of the get instance methods, or suppress this error if really know what you are doing.  \n\nIssue id: SimpleDateFormat  \n\n<https://developer.android.com/reference/java/text/SimpleDateFormat.html>"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "AndroidLintSimpleDateFormat",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Android Lint: Correctness",
                      "index": 5,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "AndroidLintAppIndexingService",
                "shortDescription": {
                  "text": "App Indexing Background Services"
                },
                "fullDescription": {
                  "text": "App Indexing Background Services Apps targeting Android 8.0 or higher can no longer rely on background services while listening for updates to the on-device index. Use a 'BroadcastReceiver' for the 'UPDATE_INDEX' intent to continue supporting indexing in your app. Issue id: AppIndexingService https://firebase.google.com/docs/app-indexing/android/personal-content#add-a-broadcast-receiver-to-your-app",
                  "markdown": "App Indexing Background Services  \n\nApps targeting Android 8.0 or higher can no longer rely on background services while listening for updates to the on-device index. Use a `BroadcastReceiver` for the `UPDATE_INDEX` intent to continue supporting indexing in your app.  \n\nIssue id: AppIndexingService  \n\n<https://firebase.google.com/docs/app-indexing/android/personal-content#add-a-broadcast-receiver-to-your-app>"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "AndroidLintAppIndexingService",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Android Lint: Correctness",
                      "index": 5,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "AndroidLintIllegalResourceRef",
                "shortDescription": {
                  "text": "Name and version must be integer or string, not resource"
                },
                "fullDescription": {
                  "text": "Name and version must be integer or string, not resource For the 'versionCode' attribute, you have to specify an actual integer literal; you cannot use an indirection with a '@dimen/name' resource. Similarly, the 'versionName' attribute should be an actual string, not a string resource url. Issue id: IllegalResourceRef",
                  "markdown": "Name and version must be integer or string, not resource  \n\nFor the `versionCode` attribute, you have to specify an actual integer literal; you cannot use an indirection with a `@dimen/name` resource. Similarly, the `versionName` attribute should be an actual string, not a string resource url.  \n\nIssue id: IllegalResourceRef"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "AndroidLintIllegalResourceRef",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Android Lint: Correctness",
                      "index": 5,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "AndroidLintWebViewClientOnReceivedSslError",
                "shortDescription": {
                  "text": "Proceeds with the HTTPS connection despite SSL errors"
                },
                "fullDescription": {
                  "text": "Proceeds with the HTTPS connection despite SSL errors This check looks for 'onReceivedSslError' implementations that invoke 'SslErrorHandler#proceed'. Issue id: WebViewClientOnReceivedSslError https://goo.gle/WebViewClientOnReceivedSslError",
                  "markdown": "Proceeds with the HTTPS connection despite SSL errors  \n\nThis check looks for `onReceivedSslError` implementations that invoke `SslErrorHandler#proceed`.  \n\nIssue id: WebViewClientOnReceivedSslError  \n\n<https://goo.gle/WebViewClientOnReceivedSslError>"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "AndroidLintWebViewClientOnReceivedSslError",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Android Lint: Security",
                      "index": 44,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "AndroidLintUnspecifiedImmutableFlag",
                "shortDescription": {
                  "text": "Missing PendingIntent mutability flag"
                },
                "fullDescription": {
                  "text": "Missing 'PendingIntent' mutability flag Apps targeting Android 12 and higher must specify either 'FLAG_IMMUTABLE' or 'FLAG_MUTABLE' when constructing a 'PendingIntent'. 'FLAG_IMMUTABLE' is available since target SDK 23, and is almost always the best choice. See https://developer.android.com/guide/components/intents-filters#CreateImmutablePendingIntents for a list of common exceptions to this rule. Issue id: UnspecifiedImmutableFlag https://developer.android.com/about/versions/12/behavior-changes-12#pending-intent-mutability https://goo.gle/UnspecifiedImmutableFlag",
                  "markdown": "Missing `PendingIntent` mutability flag  \n\nApps targeting Android 12 and higher must specify either `FLAG_IMMUTABLE` or `FLAG_MUTABLE` when constructing a `PendingIntent`.  \n\n`FLAG_IMMUTABLE` is available since target SDK 23, and is almost always the best choice. See <https://developer.android.com/guide/components/intents-filters#CreateImmutablePendingIntents> for a list of common exceptions to this rule.  \n\nIssue id: UnspecifiedImmutableFlag  \n\n<https://developer.android.com/about/versions/12/behavior-changes-12#pending-intent-mutability>  \n<https://goo.gle/UnspecifiedImmutableFlag>"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "error",
                  "parameters": {
                    "suppressToolId": "AndroidLintUnspecifiedImmutableFlag",
                    "ideaSeverity": "ERROR",
                    "qodanaSeverity": "Critical"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Android Lint: Security",
                      "index": 44,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "AndroidLintInflateParams",
                "shortDescription": {
                  "text": "Layout Inflation without a Parent"
                },
                "fullDescription": {
                  "text": "Layout Inflation without a Parent When inflating a layout, avoid passing in null as the parent view, since otherwise any layout parameters on the root of the inflated layout will be ignored. Issue id: InflateParams https://www.bignerdranch.com/blog/understanding-androids-layoutinflater-inflate/",
                  "markdown": "Layout Inflation without a Parent  \n\nWhen inflating a layout, avoid passing in null as the parent view, since otherwise any layout parameters on the root of the inflated layout will be ignored.  \n\nIssue id: InflateParams  \n\n<https://www.bignerdranch.com/blog/understanding-androids-layoutinflater-inflate/>"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "AndroidLintInflateParams",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Android Lint: Correctness",
                      "index": 5,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "AndroidLintInvalidWearFeatureAttribute",
                "shortDescription": {
                  "text": "Invalid attribute for Wear uses-feature"
                },
                "fullDescription": {
                  "text": "Invalid attribute for Wear uses-feature For the 'android.hardware.type.watch' uses-feature, android:required=\"false\" is disallowed. A single APK for Wear and non-Wear devices is not supported. Issue id: InvalidWearFeatureAttribute https://developer.android.com/training/wearables/apps/packaging.html",
                  "markdown": "Invalid attribute for Wear uses-feature  \n\nFor the `android.hardware.type.watch` uses-feature, android:required=\"false\" is disallowed. A single APK for Wear and non-Wear devices is not supported.  \n\nIssue id: InvalidWearFeatureAttribute  \n\n<https://developer.android.com/training/wearables/apps/packaging.html>"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "error",
                  "parameters": {
                    "suppressToolId": "AndroidLintInvalidWearFeatureAttribute",
                    "ideaSeverity": "ERROR",
                    "qodanaSeverity": "Critical"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Android Lint: Correctness",
                      "index": 5,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "AndroidLintBottomAppBar",
                "shortDescription": {
                  "text": "BottomAppBar Problems"
                },
                "fullDescription": {
                  "text": "BottomAppBar Problems The 'BottomAppBar' widget must be placed within a 'CoordinatorLayout'. Issue id: BottomAppBar",
                  "markdown": "BottomAppBar Problems  \n\nThe `BottomAppBar` widget must be placed within a `CoordinatorLayout`.  \n\nIssue id: BottomAppBar"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "error",
                  "parameters": {
                    "suppressToolId": "AndroidLintBottomAppBar",
                    "ideaSeverity": "ERROR",
                    "qodanaSeverity": "Critical"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Android Lint: Correctness",
                      "index": 5,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "AndroidLintNegativeMargin",
                "shortDescription": {
                  "text": "Negative Margins"
                },
                "fullDescription": {
                  "text": "Negative Margins Margin values should be positive. Negative values are generally a sign that you are making assumptions about views surrounding the current one, or may be tempted to turn off child clipping to allow a view to escape its parent. Turning off child clipping to do this not only leads to poor graphical performance, it also results in wrong touch event handling since touch events are based strictly on a chain of parent-rect hit tests. Finally, making assumptions about the size of strings can lead to localization problems. Issue id: NegativeMargin",
                  "markdown": "Negative Margins  \n\nMargin values should be positive. Negative values are generally a sign that you are making assumptions about views surrounding the current one, or may be tempted to turn off child clipping to allow a view to escape its parent. Turning off child clipping to do this not only leads to poor graphical performance, it also results in wrong touch event handling since touch events are based strictly on a chain of parent-rect hit tests. Finally, making assumptions about the size of strings can lead to localization problems.  \n\nIssue id: NegativeMargin"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "AndroidLintNegativeMargin",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Android Lint: Usability",
                      "index": 42,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "AndroidLintBinderGetCallingInMainThread",
                "shortDescription": {
                  "text": "Incorrect usage of getCallingUid() or getCallingPid()"
                },
                "fullDescription": {
                  "text": "Incorrect usage of getCallingUid() or getCallingPid() 'Binder.getCallingUid()' and 'Binder.getCallingPid()' will return information about the current process if called inside a thread that is not handling a binder transaction. This can cause security issues. If you still want to use your own uid/pid, use 'Process.myUid()' or 'Process.myPid()'. Issue id: BinderGetCallingInMainThread",
                  "markdown": "Incorrect usage of getCallingUid() or getCallingPid()  \n\n`Binder.getCallingUid()` and `Binder.getCallingPid()` will return information about the current process if called inside a thread that is not handling a binder transaction. This can cause security issues. If you still want to use your own uid/pid, use `Process.myUid()` or `Process.myPid()`.  \n\nIssue id: BinderGetCallingInMainThread"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "error",
                  "parameters": {
                    "suppressToolId": "AndroidLintBinderGetCallingInMainThread",
                    "ideaSeverity": "ERROR",
                    "qodanaSeverity": "Critical"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Android Lint: Security",
                      "index": 44,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "AndroidLintPendingBindings",
                "shortDescription": {
                  "text": "Missing Pending Bindings"
                },
                "fullDescription": {
                  "text": "Missing Pending Bindings When using a 'ViewDataBinding' in a 'onBindViewHolder' method, you must call 'executePendingBindings()' before the method exits; otherwise the data binding runtime will update the UI in the next animation frame causing a delayed update and potential jumps if the item resizes. Issue id: PendingBindings",
                  "markdown": "Missing Pending Bindings  \n\nWhen using a `ViewDataBinding` in a `onBindViewHolder` method, you **must** call `executePendingBindings()` before the method exits; otherwise the data binding runtime will update the UI in the next animation frame causing a delayed update and potential jumps if the item resizes.  \n\nIssue id: PendingBindings"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "error",
                  "parameters": {
                    "suppressToolId": "AndroidLintPendingBindings",
                    "ideaSeverity": "ERROR",
                    "qodanaSeverity": "Critical"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Android Lint: Correctness",
                      "index": 5,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "AndroidLintJavascriptInterface",
                "shortDescription": {
                  "text": "Missing @JavascriptInterface on methods"
                },
                "fullDescription": {
                  "text": "Missing @JavascriptInterface on methods As of API 17, you must annotate methods in objects registered with the 'addJavascriptInterface' method with a '@JavascriptInterface' annotation. Issue id: JavascriptInterface https://developer.android.com/reference/android/webkit/WebView.html#addJavascriptInterface(java.lang.Object, java.lang.String) https://goo.gle/JavascriptInterface",
                  "markdown": "Missing @JavascriptInterface on methods  \n\nAs of API 17, you must annotate methods in objects registered with the `addJavascriptInterface` method with a `@JavascriptInterface` annotation.  \n\nIssue id: JavascriptInterface  \n\n<https://developer.android.com/reference/android/webkit/WebView.html#addJavascriptInterface(java.lang.Object, java.lang.String)>  \n<https://goo.gle/JavascriptInterface>"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "error",
                  "parameters": {
                    "suppressToolId": "AndroidLintJavascriptInterface",
                    "ideaSeverity": "ERROR",
                    "qodanaSeverity": "Critical"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Android Lint: Security",
                      "index": 44,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "AndroidLintScopedStorage",
                "shortDescription": {
                  "text": "Affected by scoped storage"
                },
                "fullDescription": {
                  "text": "Affected by scoped storage Scoped storage is enforced on Android 10+ (or Android 11+ if using 'requestLegacyExternalStorage'). In particular, 'WRITE_EXTERNAL_STORAGE' will no longer provide write access to all files; it will provide the equivalent of 'READ_EXTERNAL_STORAGE' instead. As of Android 13, if you need to query or interact with MediaStore or media files on the shared storage, you should be using instead one or more new storage permissions: * 'android.permission.READ_MEDIA_IMAGES' * 'android.permission.READ_MEDIA_VIDEO' * 'android.permission.READ_MEDIA_AUDIO' and then add 'maxSdkVersion=\"33\"' to the older permission. See the developer guide for how to do this: https://developer.android.com/about/versions/13/behavior-changes-13#granular-media-permissions The 'MANAGE_EXTERNAL_STORAGE' permission can be used to manage all files, but it is rarely necessary and most apps on Google Play are not allowed to use it. Most apps should instead migrate to use scoped storage. To modify or delete files, apps should request write access from the user as described at https://goo.gle/android-mediastore-createwriterequest. To learn more, read these resources: Play policy: https://goo.gle/policy-storage-help Allowable use cases: https://goo.gle/policy-storage-usecases Issue id: ScopedStorage https://goo.gle/android-storage-usecases",
                  "markdown": "Affected by scoped storage  \n\nScoped storage is enforced on Android 10+ (or Android 11+ if using `requestLegacyExternalStorage`). In particular, `WRITE_EXTERNAL_STORAGE` will no longer provide write access to all files; it will provide the equivalent of `READ_EXTERNAL_STORAGE` instead.  \n\nAs of Android 13, if you need to query or interact with MediaStore or media files on the shared storage, you should be using instead one or more new storage permissions:  \n\\* `android.permission.READ_MEDIA_IMAGES`  \n\\* `android.permission.READ_MEDIA_VIDEO`  \n\\* `android.permission.READ_MEDIA_AUDIO`  \n\nand then add `maxSdkVersion=\"33\"` to the older permission. See the developer guide for how to do this: <https://developer.android.com/about/versions/13/behavior-changes-13#granular-media-permissions>  \n\nThe `MANAGE_EXTERNAL_STORAGE` permission can be used to manage all files, but it is rarely necessary and most apps on Google Play are not allowed to use it. Most apps should instead migrate to use scoped storage. To modify or delete files, apps should request write access from the user as described at <https://goo.gle/android-mediastore-createwriterequest>.  \n\nTo learn more, read these resources: Play policy: <https://goo.gle/policy-storage-help> Allowable use cases: <https://goo.gle/policy-storage-usecases>  \n\nIssue id: ScopedStorage  \n\n<https://goo.gle/android-storage-usecases>"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "AndroidLintScopedStorage",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Android Lint: Correctness",
                      "index": 5,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "AndroidLintWearMaterialTheme",
                "shortDescription": {
                  "text": "Usage of MaterialTheme instead of WearMaterialTheme on Wear app"
                },
                "fullDescription": {
                  "text": "Using not non-Wear 'MaterialTheme' in a Wear OS project Wear projects should use 'androidx.wear.compose.material.MaterialTheme' instead of 'androidx.compose.material.MaterialTheme' Issue id: WearMaterialTheme",
                  "markdown": "Using not non-Wear `MaterialTheme` in a Wear OS project  \n\nWear projects should use `androidx.wear.compose.material.MaterialTheme` instead of `androidx.compose.material.MaterialTheme`  \n\nIssue id: WearMaterialTheme"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "error",
                  "parameters": {
                    "suppressToolId": "AndroidLintWearMaterialTheme",
                    "ideaSeverity": "ERROR",
                    "qodanaSeverity": "Critical"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Android Lint: Correctness",
                      "index": 5,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "AndroidLintStringFormatMatches",
                "shortDescription": {
                  "text": "String.format string doesn't match the XML format string"
                },
                "fullDescription": {
                  "text": "'String.format' string doesn't match the XML format string This lint check ensures the following: (1) If there are multiple translations of the format string, then all translations use the same type for the same numbered arguments (2) The usage of the format string in Java is consistent with the format string, meaning that the parameter types passed to String.format matches those in the format string. Issue id: StringFormatMatches",
                  "markdown": "`String.format` string doesn't match the XML format string  \n\nThis lint check ensures the following:  \n(1) If there are multiple translations of the format string, then all translations use the same type for the same numbered arguments  \n(2) The usage of the format string in Java is consistent with the format string, meaning that the parameter types passed to String.format matches those in the format string.  \n\nIssue id: StringFormatMatches"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "error",
                  "parameters": {
                    "suppressToolId": "AndroidLintStringFormatMatches",
                    "ideaSeverity": "ERROR",
                    "qodanaSeverity": "Critical"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Android Lint: Correctness",
                      "index": 5,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "AndroidLintMinSdkTooLow",
                "shortDescription": {
                  "text": "API Version Too Low"
                },
                "fullDescription": {
                  "text": "API Version Too Low The value of the 'minSdkVersion' property is too low and can be incremented without noticeably reducing the number of supported devices. Issue id: MinSdkTooLow",
                  "markdown": "API Version Too Low  \n\nThe value of the `minSdkVersion` property is too low and can be incremented without noticeably reducing the number of supported devices.  \n\nIssue id: MinSdkTooLow"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "AndroidLintMinSdkTooLow",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Android Lint: Correctness",
                      "index": 5,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "AndroidUnresolvedRoomSqlReference",
                "shortDescription": {
                  "text": "Unresolved reference in Room SQL"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "error",
                  "parameters": {
                    "suppressToolId": "AndroidUnresolvedRoomSqlReference",
                    "ideaSeverity": "ERROR",
                    "qodanaSeverity": "Critical"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Android/Room",
                      "index": 91,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "AndroidLintIntentFilterUniqueDataAttributes",
                "shortDescription": {
                  "text": "Data tags should only declare unique attributes"
                },
                "fullDescription": {
                  "text": "Data tags should only declare unique attributes '<intent-filter>' '<data>' tags should only declare a single unique attribute (i.e. scheme OR host, but not both). This better matches the runtime behavior of intent filters, as they combine all of the declared data attributes into a single matcher which is allowed to handle any combination across attribute types. For example, the following two '<intent-filter>' declarations are the same: <intent-filter>\n    <data android:scheme=\"http\" android:host=\"example.com\" />\n    <data android:scheme=\"https\" android:host=\"example.org\" />\n</intent-filter>\n <intent-filter>\n    <data android:scheme=\"http\"/>\n    <data android:scheme=\"https\"/>\n    <data android:host=\"example.com\" />\n    <data android:host=\"example.org\" />\n</intent-filter>\n They both handle all of the following: * http://example.com * https://example.com * http://example.org * https://example.org The second one better communicates the combining behavior and is clearer to an external reader that one should not rely on the scheme/host being self contained. It is not obvious in the first that http://example.org is also matched, which can lead to confusion (or incorrect behavior) with a more complex set of schemes/hosts. Note that this does not apply to host + port, as those must be declared in the same '<data>' tag and are only associated with each other. Issue id: IntentFilterUniqueDataAttributes https://developer.android.com/guide/components/intents-filters",
                  "markdown": "Data tags should only declare unique attributes  \n\n`<intent-filter>` `<data>` tags should only declare a single unique attribute (i.e. scheme OR host, but not both). This better matches the runtime behavior of intent filters, as they combine all of the declared data attributes into a single matcher which is allowed to handle any combination across attribute types.  \n\nFor example, the following two `<intent-filter>` declarations are the same:\n\n```\n<intent-filter>\n    <data android:scheme=\"http\" android:host=\"example.com\" />\n    <data android:scheme=\"https\" android:host=\"example.org\" />\n</intent-filter>\n```\n\n```\n<intent-filter>\n    <data android:scheme=\"http\"/>\n    <data android:scheme=\"https\"/>\n    <data android:host=\"example.com\" />\n    <data android:host=\"example.org\" />\n</intent-filter>\n```\n\nThey both handle all of the following:  \n\\* <http://example.com>  \n\\* <https://example.com>  \n\\* <http://example.org>  \n\\* <https://example.org>  \n\nThe second one better communicates the combining behavior and is clearer to an external reader that one should not rely on the scheme/host being self contained. It is not obvious in the first that <http://example.org> is also matched, which can lead to confusion (or incorrect behavior) with a more complex set of schemes/hosts.  \n\nNote that this does not apply to host + port, as those must be declared in the same `<data>` tag and are only associated with each other.  \n\nIssue id: IntentFilterUniqueDataAttributes  \n\n<https://developer.android.com/guide/components/intents-filters>"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "AndroidLintIntentFilterUniqueDataAttributes",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Android Lint: Correctness",
                      "index": 5,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "AndroidLintMissingLeanbackSupport",
                "shortDescription": {
                  "text": "Missing Leanback Support"
                },
                "fullDescription": {
                  "text": "Missing Leanback Support The manifest should declare the use of the Leanback user interface required by Android TV. To fix this, add `<uses-feature android:name=\"android.software.leanback\"\n               android:required=\"false\" />`\n to your manifest. Issue id: MissingLeanbackSupport https://developer.android.com/training/tv/start/start.html#leanback-req",
                  "markdown": "Missing Leanback Support  \n\nThe manifest should declare the use of the Leanback user interface required by Android TV.  \n\nTo fix this, add\n\n```\n`<uses-feature android:name=\"android.software.leanback\"\n               android:required=\"false\" />`\n```\n\nto your manifest.  \n\nIssue id: MissingLeanbackSupport  \n\n<https://developer.android.com/training/tv/start/start.html#leanback-req>"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "error",
                  "parameters": {
                    "suppressToolId": "AndroidLintMissingLeanbackSupport",
                    "ideaSeverity": "ERROR",
                    "qodanaSeverity": "Critical"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Android Lint: Correctness",
                      "index": 5,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "AndroidLintIconExpectedSize",
                "shortDescription": {
                  "text": "Icon has incorrect size"
                },
                "fullDescription": {
                  "text": "Icon has incorrect size There are predefined sizes (for each density) for launcher icons. You should follow these conventions to make sure your icons fit in with the overall look of the platform. Issue id: IconExpectedSize https://d.android.com/r/studio-ui/designer/material/iconography",
                  "markdown": "Icon has incorrect size  \n\nThere are predefined sizes (for each density) for launcher icons. You should follow these conventions to make sure your icons fit in with the overall look of the platform.  \n\nIssue id: IconExpectedSize  \n\n<https://d.android.com/r/studio-ui/designer/material/iconography>"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "AndroidLintIconExpectedSize",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Android Lint: Usability",
                      "index": 42,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "AndroidLintResourceAsColor",
                "shortDescription": {
                  "text": "Should pass resolved color instead of resource id"
                },
                "fullDescription": {
                  "text": "Should pass resolved color instead of resource id Methods that take a color in the form of an integer should be passed an RGB triple, not the actual color resource id. You must call 'getResources().getColor(resource)' to resolve the actual color value first. Similarly, methods that take a dimension integer should be passed an actual dimension (call 'getResources().getDimension(resource)' Issue id: ResourceAsColor",
                  "markdown": "Should pass resolved color instead of resource id  \n\nMethods that take a color in the form of an integer should be passed an RGB triple, not the actual color resource id. You must call `getResources().getColor(resource)` to resolve the actual color value first.  \n\nSimilarly, methods that take a dimension integer should be passed an actual dimension (call `getResources().getDimension(resource)`  \n\nIssue id: ResourceAsColor"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "error",
                  "parameters": {
                    "suppressToolId": "AndroidLintResourceAsColor",
                    "ideaSeverity": "ERROR",
                    "qodanaSeverity": "Critical"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Android Lint: Correctness",
                      "index": 5,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "AndroidLintGradleCompatible",
                "shortDescription": {
                  "text": "Incompatible Gradle Versions"
                },
                "fullDescription": {
                  "text": "Incompatible Gradle Versions There are some combinations of libraries, or tools and libraries, that are incompatible, or can lead to bugs. One such incompatibility is compiling with a version of the Android support libraries that is not the latest version (or in particular, a version lower than your 'targetSdkVersion'). Issue id: GradleCompatible",
                  "markdown": "Incompatible Gradle Versions  \n\nThere are some combinations of libraries, or tools and libraries, that are incompatible, or can lead to bugs. One such incompatibility is compiling with a version of the Android support libraries that is not the latest version (or in particular, a version lower than your `targetSdkVersion`).  \n\nIssue id: GradleCompatible"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "error",
                  "parameters": {
                    "suppressToolId": "AndroidLintGradleCompatible",
                    "ideaSeverity": "ERROR",
                    "qodanaSeverity": "Critical"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Android Lint: Correctness",
                      "index": 5,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "AndroidLintSSLCertificateSocketFactoryCreateSocket",
                "shortDescription": {
                  "text": "Insecure call to SSLCertificateSocketFactory.createSocket()"
                },
                "fullDescription": {
                  "text": "Insecure call to 'SSLCertificateSocketFactory.createSocket()' When 'SSLCertificateSocketFactory.createSocket()' is called with an 'InetAddress' as the first parameter, TLS/SSL hostname verification is not performed, which could result in insecure network traffic caused by trusting arbitrary hostnames in TLS/SSL certificates presented by peers. In this case, developers must ensure that the 'InetAddress' is explicitly verified against the certificate through other means, such as by calling `SSLCertificateSocketFactory.getDefaultHostnameVerifier() to get a 'HostnameVerifier' and calling 'HostnameVerifier.verify()'. Issue id: SSLCertificateSocketFactoryCreateSocket https://goo.gle/SSLCertificateSocketFactoryCreateSocket",
                  "markdown": "Insecure call to `SSLCertificateSocketFactory.createSocket()`  \n\nWhen `SSLCertificateSocketFactory.createSocket()` is called with an `InetAddress` as the first parameter, TLS/SSL hostname verification is not performed, which could result in insecure network traffic caused by trusting arbitrary hostnames in TLS/SSL certificates presented by peers. In this case, developers must ensure that the `InetAddress` is explicitly verified against the certificate through other means, such as by calling \\`SSLCertificateSocketFactory.getDefaultHostnameVerifier() to get a `HostnameVerifier` and calling `HostnameVerifier.verify()`.  \n\nIssue id: SSLCertificateSocketFactoryCreateSocket  \n\n<https://goo.gle/SSLCertificateSocketFactoryCreateSocket>"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "AndroidLintSSLCertificateSocketFactoryCreateSocket",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Android Lint: Security",
                      "index": 44,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "AndroidLintShiftFlags",
                "shortDescription": {
                  "text": "Dangerous Flag Constant Declaration"
                },
                "fullDescription": {
                  "text": "Dangerous Flag Constant Declaration When defining multiple constants for use in flags, the recommended style is to use the form '1 << 2', '1 << 3', '1 << 4' and so on to ensure that the constants are unique and non-overlapping. Issue id: ShiftFlags",
                  "markdown": "Dangerous Flag Constant Declaration  \n\nWhen defining multiple constants for use in flags, the recommended style is to use the form `1 << 2`, `1 << 3`, `1 << 4` and so on to ensure that the constants are unique and non-overlapping.  \n\nIssue id: ShiftFlags"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "AndroidLintShiftFlags",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Android Lint: Correctness",
                      "index": 5,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "AndroidLintFullBackupContent",
                "shortDescription": {
                  "text": "Valid Full Backup Content File"
                },
                "fullDescription": {
                  "text": "Valid Full Backup Content File Ensures that '<data-extraction-rules'> and '<full-backup-content>' files, which configure backup options, are valid. Issue id: FullBackupContent https://android-developers.googleblog.com/2015/07/auto-backup-for-apps-made-simple.html",
                  "markdown": "Valid Full Backup Content File  \n\nEnsures that `<data-extraction-rules`\\> and `<full-backup-content>` files, which configure backup options, are valid.  \n\nIssue id: FullBackupContent  \n\n<https://android-developers.googleblog.com/2015/07/auto-backup-for-apps-made-simple.html>"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "error",
                  "parameters": {
                    "suppressToolId": "AndroidLintFullBackupContent",
                    "ideaSeverity": "ERROR",
                    "qodanaSeverity": "Critical"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Android Lint: Correctness",
                      "index": 5,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "AndroidLintInvalidWakeLockTag",
                "shortDescription": {
                  "text": "Invalid Wake Lock Tag"
                },
                "fullDescription": {
                  "text": "Invalid Wake Lock Tag Wake Lock tags must follow the naming conventions defined in the`PowerManager` documentation. Issue id: InvalidWakeLockTag https://developer.android.com/reference/android/os/PowerManager.html",
                  "markdown": "Invalid Wake Lock Tag  \n\nWake Lock tags must follow the naming conventions defined in the\\`PowerManager\\` documentation.  \n\nIssue id: InvalidWakeLockTag  \n\n<https://developer.android.com/reference/android/os/PowerManager.html>"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "error",
                  "parameters": {
                    "suppressToolId": "AndroidLintInvalidWakeLockTag",
                    "ideaSeverity": "ERROR",
                    "qodanaSeverity": "Critical"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Android Lint: Correctness",
                      "index": 5,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "AndroidLintGradlePluginVersion",
                "shortDescription": {
                  "text": "Incompatible Android Gradle Plugin"
                },
                "fullDescription": {
                  "text": "Incompatible Android Gradle Plugin Not all versions of the Android Gradle plugin are compatible with all versions of the SDK. If you update your tools, or if you are trying to open a project that was built with an old version of the tools, you may need to update your plugin version number. Issue id: GradlePluginVersion",
                  "markdown": "Incompatible Android Gradle Plugin  \n\nNot all versions of the Android Gradle plugin are compatible with all versions of the SDK. If you update your tools, or if you are trying to open a project that was built with an old version of the tools, you may need to update your plugin version number.  \n\nIssue id: GradlePluginVersion"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "error",
                  "parameters": {
                    "suppressToolId": "AndroidLintGradlePluginVersion",
                    "ideaSeverity": "ERROR",
                    "qodanaSeverity": "Critical"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Android Lint: Correctness",
                      "index": 5,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "AndroidLintExifInterface",
                "shortDescription": {
                  "text": "Using android.media.ExifInterface"
                },
                "fullDescription": {
                  "text": "Using 'android.media.ExifInterface' The 'android.media.ExifInterface' implementation has some known security bugs in older versions of Android. There is a new implementation available of this library in the support library, which is preferable. Issue id: ExifInterface",
                  "markdown": "Using `android.media.ExifInterface`  \n\nThe `android.media.ExifInterface` implementation has some known security bugs in older versions of Android. There is a new implementation available of this library in the support library, which is preferable.  \n\nIssue id: ExifInterface"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "AndroidLintExifInterface",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Android Lint: Correctness",
                      "index": 5,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "AndroidLintMissingOnPlayFromSearch",
                "shortDescription": {
                  "text": "Missing onPlayFromSearch"
                },
                "fullDescription": {
                  "text": "Missing 'onPlayFromSearch' To support voice searches on Android Auto, in addition to adding an 'intent-filter' for the action 'onPlayFromSearch', you also need to override and implement 'onPlayFromSearch(String query, Bundle bundle)' Issue id: MissingOnPlayFromSearch https://developer.android.com/training/auto/audio/index.html#support_voice",
                  "markdown": "Missing `onPlayFromSearch`  \n\nTo support voice searches on Android Auto, in addition to adding an `intent-filter` for the action `onPlayFromSearch`, you also need to override and implement `onPlayFromSearch(String query, Bundle bundle)`  \n\nIssue id: MissingOnPlayFromSearch  \n\n<https://developer.android.com/training/auto/audio/index.html#support_voice>"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "error",
                  "parameters": {
                    "suppressToolId": "AndroidLintMissingOnPlayFromSearch",
                    "ideaSeverity": "ERROR",
                    "qodanaSeverity": "Critical"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Android Lint: Correctness",
                      "index": 5,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "AndroidLintSquareAndRoundTilePreviews",
                "shortDescription": {
                  "text": "TileProvider does not have round and square previews"
                },
                "fullDescription": {
                  "text": "TileProvider does not have round and square previews Tile projects should specify preview resources for different screen shapes. The preview resource is specified in the manifest under tile service. And you have to make sure they have resources for different screen shapes. Issue id: SquareAndRoundTilePreviews https://developer.android.com/design/ui/wear/guides/surfaces/tiles#tile-previews",
                  "markdown": "TileProvider does not have round and square previews  \n\nTile projects should specify preview resources for different screen shapes. The preview resource is specified in the manifest under tile service. And you have to make sure they have resources for different screen shapes.  \n\nIssue id: SquareAndRoundTilePreviews  \n\n<https://developer.android.com/design/ui/wear/guides/surfaces/tiles#tile-previews>"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "AndroidLintSquareAndRoundTilePreviews",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Android Lint: Usability",
                      "index": 42,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "AndroidLintAppBundleLocaleChanges",
                "shortDescription": {
                  "text": "App Bundle handling of runtime locale changes"
                },
                "fullDescription": {
                  "text": "App Bundle handling of runtime locale changes When changing locales at runtime (e.g. to provide an in-app language switcher), the Android App Bundle must be configured to not split by locale or the Play Core library must be used to download additional locales at runtime. Issue id: AppBundleLocaleChanges https://developer.android.com/guide/app-bundle/configure-base#handling_language_changes",
                  "markdown": "App Bundle handling of runtime locale changes  \n\nWhen changing locales at runtime (e.g. to provide an in-app language switcher), the Android App Bundle must be configured to not split by locale or the Play Core library must be used to download additional locales at runtime.  \n\nIssue id: AppBundleLocaleChanges  \n\n<https://developer.android.com/guide/app-bundle/configure-base#handling_language_changes>"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "AndroidLintAppBundleLocaleChanges",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Android Lint: Correctness",
                      "index": 5,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "AndroidLintChromeOsOnConfigurationChanged",
                "shortDescription": {
                  "text": "Poor performance with APIs inside onConfigurationChanged()"
                },
                "fullDescription": {
                  "text": "Poor performance with APIs inside 'onConfigurationChanged()' When users resize the Android emulator in Android 13 and Chrome OS, an 'onConfigurationChanged()' API call occurs. If your 'onConfigurationChanged()' method contains any code that can cause a redraw, your app might take a performance hit on large screens. To fix the issue, ensure your 'onConfigurationChanged()' method does not contain any calls to UI redraw logic for specific elements. Issue id: ChromeOsOnConfigurationChanged",
                  "markdown": "Poor performance with APIs inside `onConfigurationChanged()`  \n\nWhen users resize the Android emulator in Android 13 and Chrome OS, an `onConfigurationChanged()` API call occurs. If your `onConfigurationChanged()` method contains any code that can cause a redraw, your app might take a performance hit on large screens. To fix the issue, ensure your `onConfigurationChanged()` method does not contain any calls to UI redraw logic for specific elements.  \n\nIssue id: ChromeOsOnConfigurationChanged"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "AndroidLintChromeOsOnConfigurationChanged",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Android Lint: Correctness",
                      "index": 5,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "AndroidLintWrongCall",
                "shortDescription": {
                  "text": "Using wrong draw/layout method"
                },
                "fullDescription": {
                  "text": "Using wrong draw/layout method Custom views typically need to call 'measure()' on their children, not 'onMeasure'. Ditto for onDraw, onLayout, etc. Issue id: WrongCall",
                  "markdown": "Using wrong draw/layout method  \n\nCustom views typically need to call `measure()` on their children, not `onMeasure`. Ditto for onDraw, onLayout, etc.  \n\nIssue id: WrongCall"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "error",
                  "parameters": {
                    "suppressToolId": "AndroidLintWrongCall",
                    "ideaSeverity": "ERROR",
                    "qodanaSeverity": "Critical"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Android Lint: Correctness",
                      "index": 5,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "AndroidLintNotSibling",
                "shortDescription": {
                  "text": "Invalid Constraints"
                },
                "fullDescription": {
                  "text": "Invalid Constraints Layout constraints in a given 'ConstraintLayout' or 'RelativeLayout' should reference other views within the same relative layout (but not itself!) Issue id: NotSibling",
                  "markdown": "Invalid Constraints  \n\nLayout constraints in a given `ConstraintLayout` or `RelativeLayout` should reference other views within the same relative layout (but not itself!)  \n\nIssue id: NotSibling"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "error",
                  "parameters": {
                    "suppressToolId": "AndroidLintNotSibling",
                    "ideaSeverity": "ERROR",
                    "qodanaSeverity": "Critical"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Android Lint: Correctness",
                      "index": 5,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "AndroidLintNewerVersionAvailable",
                "shortDescription": {
                  "text": "Newer Library Versions Available"
                },
                "fullDescription": {
                  "text": "Newer Library Versions Available This detector checks with a central repository to see if there are newer versions available for the dependencies used by this project. This is similar to the 'GradleDependency' check, which checks for newer versions available in the Android SDK tools and libraries, but this works with any MavenCentral dependency, and connects to the library every time, which makes it more flexible but also much slower. Issue id: NewerVersionAvailable",
                  "markdown": "Newer Library Versions Available  \n\nThis detector checks with a central repository to see if there are newer versions available for the dependencies used by this project. This is similar to the `GradleDependency` check, which checks for newer versions available in the Android SDK tools and libraries, but this works with any MavenCentral dependency, and connects to the library every time, which makes it more flexible but also **much** slower.  \n\nIssue id: NewerVersionAvailable"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "AndroidLintNewerVersionAvailable",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Android Lint: Correctness",
                      "index": 5,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "AndroidLintRedundantLabel",
                "shortDescription": {
                  "text": "Redundant label on activity"
                },
                "fullDescription": {
                  "text": "Redundant label on activity When an activity does not have a label attribute, it will use the one from the application tag. Since the application has already specified the same label, the label on this activity can be omitted. Issue id: RedundantLabel",
                  "markdown": "Redundant label on activity  \n\nWhen an activity does not have a label attribute, it will use the one from the application tag. Since the application has already specified the same label, the label on this activity can be omitted.  \n\nIssue id: RedundantLabel"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "AndroidLintRedundantLabel",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Android Lint: Correctness",
                      "index": 5,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "AndroidLintMissingConstraints",
                "shortDescription": {
                  "text": "Missing Constraints in ConstraintLayout"
                },
                "fullDescription": {
                  "text": "Missing Constraints in ConstraintLayout The layout editor allows you to place widgets anywhere on the canvas, and it records the current position with designtime attributes (such as 'layout_editor_absoluteX'). These attributes are not applied at runtime, so if you push your layout on a device, the widgets may appear in a different location than shown in the editor. To fix this, make sure a widget has both horizontal and vertical constraints by dragging from the edge connections. Issue id: MissingConstraints",
                  "markdown": "Missing Constraints in ConstraintLayout  \n\nThe layout editor allows you to place widgets anywhere on the canvas, and it records the current position with designtime attributes (such as `layout_editor_absoluteX`). These attributes are **not** applied at runtime, so if you push your layout on a device, the widgets may appear in a different location than shown in the editor. To fix this, make sure a widget has both horizontal and vertical constraints by dragging from the edge connections.  \n\nIssue id: MissingConstraints"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "error",
                  "parameters": {
                    "suppressToolId": "AndroidLintMissingConstraints",
                    "ideaSeverity": "ERROR",
                    "qodanaSeverity": "Critical"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Android Lint: Correctness",
                      "index": 5,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "AndroidLintClickableViewAccessibility",
                "shortDescription": {
                  "text": "Accessibility in Custom Views"
                },
                "fullDescription": {
                  "text": "Accessibility in Custom Views If a 'View' that overrides 'onTouchEvent' or uses an 'OnTouchListener' does not also implement 'performClick' and call it when clicks are detected, the 'View' may not handle accessibility actions properly. Logic handling the click actions should ideally be placed in 'View#performClick' as some accessibility services invoke 'performClick' when a click action should occur. Issue id: ClickableViewAccessibility",
                  "markdown": "Accessibility in Custom Views  \n\nIf a `View` that overrides `onTouchEvent` or uses an `OnTouchListener` does not also implement `performClick` and call it when clicks are detected, the `View` may not handle accessibility actions properly. Logic handling the click actions should ideally be placed in `View#performClick` as some accessibility services invoke `performClick` when a click action should occur.  \n\nIssue id: ClickableViewAccessibility"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "AndroidLintClickableViewAccessibility",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Android Lint: Accessibility",
                      "index": 68,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "AndroidLintRecyclerView",
                "shortDescription": {
                  "text": "RecyclerView Problems"
                },
                "fullDescription": {
                  "text": "RecyclerView Problems 'RecyclerView' will not call 'onBindViewHolder' again when the position of the item changes in the data set unless the item itself is invalidated or the new position cannot be determined. For this reason, you should only use the position parameter while acquiring the related data item inside this method, and should not keep a copy of it. If you need the position of an item later on (e.g. in a click listener), use 'getAdapterPosition()' which will have the updated adapter position. Issue id: RecyclerView",
                  "markdown": "RecyclerView Problems  \n\n`RecyclerView` will **not** call `onBindViewHolder` again when the position of the item changes in the data set unless the item itself is invalidated or the new position cannot be determined.  \n\nFor this reason, you should **only** use the position parameter while acquiring the related data item inside this method, and should **not** keep a copy of it.  \n\nIf you need the position of an item later on (e.g. in a click listener), use `getAdapterPosition()` which will have the updated adapter position.  \n\nIssue id: RecyclerView"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "error",
                  "parameters": {
                    "suppressToolId": "AndroidLintRecyclerView",
                    "ideaSeverity": "ERROR",
                    "qodanaSeverity": "Critical"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Android Lint: Correctness",
                      "index": 5,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "AndroidLintMissingDefaultResource",
                "shortDescription": {
                  "text": "Missing Default"
                },
                "fullDescription": {
                  "text": "Missing Default If a resource is only defined in folders with qualifiers like '-land' or '-en', and there is no default declaration in the base folder ('layout' or 'values' etc), then the app will crash if that resource is accessed on a device where the device is in a configuration missing the given qualifier. As a special case, drawables do not have to be specified in the base folder; if there is a match in a density folder (such as 'drawable-mdpi') that image will be used and scaled. Note however that if you only specify a drawable in a folder like 'drawable-en-hdpi', the app will crash in non-English locales. There may be scenarios where you have a resource, such as a '-fr' drawable, which is only referenced from some other resource with the same qualifiers (such as a '-fr' style), which itself has safe fallbacks. However, this still makes it possible for somebody to accidentally reference the drawable and crash, so it is safer to create a default fallback in the base folder. Alternatively, you can suppress the issue by adding 'tools:ignore=\"MissingDefaultResource\"' on the element. (This scenario frequently happens with string translations, where you might delete code and the corresponding resources, but forget to delete a translation. There is a dedicated issue id for that scenario, with the id 'ExtraTranslation'.) Issue id: MissingDefaultResource",
                  "markdown": "Missing Default  \n\nIf a resource is only defined in folders with qualifiers like `-land` or `-en`, and there is no default declaration in the base folder (`layout` or `values` etc), then the app will crash if that resource is accessed on a device where the device is in a configuration missing the given qualifier.  \n\nAs a special case, drawables do not have to be specified in the base folder; if there is a match in a density folder (such as `drawable-mdpi`) that image will be used and scaled. Note however that if you only specify a drawable in a folder like `drawable-en-hdpi`, the app will crash in non-English locales.  \n\nThere may be scenarios where you have a resource, such as a `-fr` drawable, which is only referenced from some other resource with the same qualifiers (such as a `-fr` style), which itself has safe fallbacks. However, this still makes it possible for somebody to accidentally reference the drawable and crash, so it is safer to create a default fallback in the base folder. Alternatively, you can suppress the issue by adding `tools:ignore=\"MissingDefaultResource\"` on the element.  \n\n(This scenario frequently happens with string translations, where you might delete code and the corresponding resources, but forget to delete a translation. There is a dedicated issue id for that scenario, with the id `ExtraTranslation`.)  \n\nIssue id: MissingDefaultResource"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "error",
                  "parameters": {
                    "suppressToolId": "AndroidLintMissingDefaultResource",
                    "ideaSeverity": "ERROR",
                    "qodanaSeverity": "Critical"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Android Lint: Correctness",
                      "index": 5,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "AndroidLintMergeMarker",
                "shortDescription": {
                  "text": "Code contains merge marker"
                },
                "fullDescription": {
                  "text": "Code contains merge marker Many version control systems leave unmerged files with markers such as <<< in the source code. This check looks for these markers, which are sometimes accidentally left in, particularly in resource files where they don't break compilation. Issue id: MergeMarker",
                  "markdown": "Code contains merge marker  \n\nMany version control systems leave unmerged files with markers such as \\<\\<\\< in the source code. This check looks for these markers, which are sometimes accidentally left in, particularly in resource files where they don't break compilation.  \n\nIssue id: MergeMarker"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "error",
                  "parameters": {
                    "suppressToolId": "AndroidLintMergeMarker",
                    "ideaSeverity": "ERROR",
                    "qodanaSeverity": "Critical"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Android Lint: Correctness",
                      "index": 5,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "AndroidLintBomWithoutPlatform",
                "shortDescription": {
                  "text": "Using a BOM without platform call"
                },
                "fullDescription": {
                  "text": "Using a BOM without platform call When including a BOM, the dependency's coordinates must be wrapped in a call to 'platform()' for Gradle to interpret it correctly. Issue id: BomWithoutPlatform https://developer.android.com/r/tools/gradle-bom-docs",
                  "markdown": "Using a BOM without platform call  \n\nWhen including a BOM, the dependency's coordinates must be wrapped in a call to `platform()` for Gradle to interpret it correctly.  \n\nIssue id: BomWithoutPlatform  \n\n<https://developer.android.com/r/tools/gradle-bom-docs>"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "AndroidLintBomWithoutPlatform",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Android Lint: Correctness",
                      "index": 5,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "AndroidLintTypographyQuotes",
                "shortDescription": {
                  "text": "Straight quotes can be replaced with curvy quotes"
                },
                "fullDescription": {
                  "text": "Straight quotes can be replaced with curvy quotes, and apostrophes with typographic apostrophes. Straight single quotes and double quotes, when used as a pair, can be replaced by \"curvy quotes\" (or directional quotes). Use the right single quotation mark for apostrophes. Never use generic quotes \", ' or free-standing accents `, ´ for quotation marks, apostrophes, or primes. This can make the text more readable. Issue id: TypographyQuotes https://en.wikipedia.org/wiki/Quotation_mark",
                  "markdown": "Straight quotes can be replaced with curvy quotes, and apostrophes with typographic apostrophes.  \n\nStraight single quotes and double quotes, when used as a pair, can be replaced by \"curvy quotes\" (or directional quotes). Use the right single quotation mark for apostrophes. Never use generic quotes \", ' or free-standing accents \\`, ´ for quotation marks, apostrophes, or primes. This can make the text more readable.  \n\nIssue id: TypographyQuotes  \n\n<https://en.wikipedia.org/wiki/Quotation_mark>"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "AndroidLintTypographyQuotes",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Android Lint: Usability",
                      "index": 42,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "AndroidLintTooDeepLayout",
                "shortDescription": {
                  "text": "Layout hierarchy is too deep"
                },
                "fullDescription": {
                  "text": "Layout hierarchy is too deep Layouts with too much nesting is bad for performance. Consider using a flatter layout (such as 'RelativeLayout' or 'GridLayout').The default maximum depth is 10 but can be configured with the environment variable 'ANDROID_LINT_MAX_DEPTH'. Issue id: TooDeepLayout",
                  "markdown": "Layout hierarchy is too deep  \n\nLayouts with too much nesting is bad for performance. Consider using a flatter layout (such as `RelativeLayout` or `GridLayout`).The default maximum depth is 10 but can be configured with the environment variable `ANDROID_LINT_MAX_DEPTH`.  \n\nIssue id: TooDeepLayout"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "AndroidLintTooDeepLayout",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Android Lint: Performance",
                      "index": 14,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "R8IgnoredFlags",
                "shortDescription": {
                  "text": "Flags ignored by R8"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "R8IgnoredFlags",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Android/Shrinker",
                      "index": 84,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "AndroidLintSupportAnnotationUsage",
                "shortDescription": {
                  "text": "Incorrect support annotation usage"
                },
                "fullDescription": {
                  "text": "Incorrect support annotation usage This lint check makes sure that the support annotations (such as '@IntDef' and '@ColorInt') are used correctly. For example, it's an error to specify an '@IntRange' where the 'from' value is higher than the 'to' value. Issue id: SupportAnnotationUsage",
                  "markdown": "Incorrect support annotation usage  \n\nThis lint check makes sure that the support annotations (such as `@IntDef` and `@ColorInt`) are used correctly. For example, it's an error to specify an `@IntRange` where the `from` value is higher than the `to` value.  \n\nIssue id: SupportAnnotationUsage"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "error",
                  "parameters": {
                    "suppressToolId": "AndroidLintSupportAnnotationUsage",
                    "ideaSeverity": "ERROR",
                    "qodanaSeverity": "Critical"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Android Lint: Correctness",
                      "index": 5,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "AndroidLintObjectAnimatorBinding",
                "shortDescription": {
                  "text": "Incorrect ObjectAnimator Property"
                },
                "fullDescription": {
                  "text": "Incorrect ObjectAnimator Property This check cross references properties referenced by String from 'ObjectAnimator' and 'PropertyValuesHolder' method calls and ensures that the corresponding setter methods exist and have the right signatures. Issue id: ObjectAnimatorBinding",
                  "markdown": "Incorrect ObjectAnimator Property  \n\nThis check cross references properties referenced by String from `ObjectAnimator` and `PropertyValuesHolder` method calls and ensures that the corresponding setter methods exist and have the right signatures.  \n\nIssue id: ObjectAnimatorBinding"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "error",
                  "parameters": {
                    "suppressToolId": "AndroidLintObjectAnimatorBinding",
                    "ideaSeverity": "ERROR",
                    "qodanaSeverity": "Critical"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Android Lint: Correctness",
                      "index": 5,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "AndroidLintKnownPermissionError",
                "shortDescription": {
                  "text": "Value specified for permission is a known error"
                },
                "fullDescription": {
                  "text": "Value specified for permission is a known error This check looks for values specified in component permissions that are known errors, such as 'android:permission=\"true\"'. Please double check the permission value you have supplied. The value is expected to be a permission string from the system, another app, or your own, NOT a boolean. Issue id: KnownPermissionError https://goo.gle/KnownPermissionError",
                  "markdown": "Value specified for permission is a known error  \n\nThis check looks for values specified in component permissions that are known errors, such as `android:permission=\"true\"`.  \n\nPlease double check the permission value you have supplied. The value is expected to be a permission string from the system, another app, or your own, NOT a boolean.  \n\nIssue id: KnownPermissionError  \n\n<https://goo.gle/KnownPermissionError>"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "error",
                  "parameters": {
                    "suppressToolId": "AndroidLintKnownPermissionError",
                    "ideaSeverity": "ERROR",
                    "qodanaSeverity": "Critical"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Android Lint: Security",
                      "index": 44,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "ShrinkerUnresolvedReference",
                "shortDescription": {
                  "text": "Unresolved reference in Shrinker Config file"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "error",
                  "parameters": {
                    "suppressToolId": "ShrinkerUnresolvedReference",
                    "ideaSeverity": "ERROR",
                    "qodanaSeverity": "Critical"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Android/Shrinker",
                      "index": 84,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "AndroidLintAccessibilityWindowStateChangedEvent",
                "shortDescription": {
                  "text": "Use of accessibility window state change events"
                },
                "fullDescription": {
                  "text": "Use of accessibility window state change events Sending or populating 'TYPE_WINDOW_STATE_CHANGED' events in your code is strongly discouraged. Instead, prefer to use or extend system-provided widgets that are as far down Android's class hierarchy as possible. System-provided widgets that are far down the hierarchy already have most of the accessibility capabilities your app needs. If you must extend 'View' or 'Canvas' directly, then still prefer to: set UI metadata by calling 'Activity.setTitle', 'ViewCompat.setAccessibilityPaneTitle', or 'ViewCompat.setAccessibilityLiveRegion'; implement 'View.onInitializeAccessibilityNodeInfo'; and (for very specialized custom controls) implement 'View.getAccessibilityNodeProvider' to provide a virtual view hierarchy. These approaches allow accessibility services to inspect the view hierarchy, rather than relying on incomplete information provided by events. Events like 'TYPE_WINDOW_STATE_CHANGED' will be sent automatically when updating this metadata, and so trying to manually send this event will result in duplicate events, or the event may be ignored entirely. Issue id: AccessibilityWindowStateChangedEvent",
                  "markdown": "Use of accessibility window state change events  \n\nSending or populating `TYPE_WINDOW_STATE_CHANGED` events in your code is strongly discouraged. Instead, prefer to use or extend system-provided widgets that are as far down Android's class hierarchy as possible. System-provided widgets that are far down the hierarchy already have most of the accessibility capabilities your app needs. If you must extend `View` or `Canvas` directly, then still prefer to: set UI metadata by calling `Activity.setTitle`, `ViewCompat.setAccessibilityPaneTitle`, or `ViewCompat.setAccessibilityLiveRegion`; implement `View.onInitializeAccessibilityNodeInfo`; and (for very specialized custom controls) implement `View.getAccessibilityNodeProvider` to provide a virtual view hierarchy. These approaches allow accessibility services to inspect the view hierarchy, rather than relying on incomplete information provided by events. Events like `TYPE_WINDOW_STATE_CHANGED` will be sent automatically when updating this metadata, and so trying to manually send this event will result in duplicate events, or the event may be ignored entirely.  \n\nIssue id: AccessibilityWindowStateChangedEvent"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "AndroidLintAccessibilityWindowStateChangedEvent",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Android Lint: Accessibility",
                      "index": 68,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "AndroidLintExtraTranslation",
                "shortDescription": {
                  "text": "Extra translation"
                },
                "fullDescription": {
                  "text": "Extra translation If a string appears in a specific language translation file, but there is no corresponding string in the default locale, then this string is probably unused. (It's technically possible that your application is only intended to run in a specific locale, but it's still a good idea to provide a fallback.) Note that these strings can lead to crashes if the string is looked up on any locale not providing a translation, so it's important to clean them up. Issue id: ExtraTranslation",
                  "markdown": "Extra translation  \n\nIf a string appears in a specific language translation file, but there is no corresponding string in the default locale, then this string is probably unused. (It's technically possible that your application is only intended to run in a specific locale, but it's still a good idea to provide a fallback.)  \n\nNote that these strings can lead to crashes if the string is looked up on any locale not providing a translation, so it's important to clean them up.  \n\nIssue id: ExtraTranslation"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "error",
                  "parameters": {
                    "suppressToolId": "AndroidLintExtraTranslation",
                    "ideaSeverity": "ERROR",
                    "qodanaSeverity": "Critical"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Android Lint: Correctness",
                      "index": 5,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "AndroidLintBatteryLife",
                "shortDescription": {
                  "text": "Battery Life Issues"
                },
                "fullDescription": {
                  "text": "Battery Life Issues This issue flags code that either * negatively affects battery life, or * uses APIs that have recently changed behavior to prevent background tasks from consuming memory and battery excessively. Generally, you should be using 'WorkManager' instead. For more details on how to update your code, please see https://developer.android.com/topic/performance/background-optimization Issue id: BatteryLife",
                  "markdown": "Battery Life Issues  \n\nThis issue flags code that either  \n\\* negatively affects battery life, or  \n\\* uses APIs that have recently changed behavior to prevent background tasks from consuming memory and battery excessively.  \n\nGenerally, you should be using `WorkManager` instead.  \n\nFor more details on how to update your code, please see <https://developer.android.com/topic/performance/background-optimization>  \n\nIssue id: BatteryLife"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "AndroidLintBatteryLife",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Android Lint: Correctness",
                      "index": 5,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "AndroidLintPermissionImpliesUnsupportedHardware",
                "shortDescription": {
                  "text": "Permission Implies Unsupported Hardware"
                },
                "fullDescription": {
                  "text": "Permission Implies Unsupported Hardware The '<uses-permission>' element should not require a permission that implies an unsupported TV hardware feature. Google Play assumes that certain hardware related permissions indicate that the underlying hardware features are required by default. To fix the issue, consider declaring the corresponding 'uses-feature' element with 'required=\"false\"' attribute. Issue id: PermissionImpliesUnsupportedHardware https://developer.android.com/guide/topics/manifest/uses-feature-element.html#permissions",
                  "markdown": "Permission Implies Unsupported Hardware  \n\nThe `<uses-permission>` element should not require a permission that implies an unsupported TV hardware feature. Google Play assumes that certain hardware related permissions indicate that the underlying hardware features are required by default. To fix the issue, consider declaring the corresponding `uses-feature` element with `required=\"false\"` attribute.  \n\nIssue id: PermissionImpliesUnsupportedHardware  \n\n<https://developer.android.com/guide/topics/manifest/uses-feature-element.html#permissions>"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "AndroidLintPermissionImpliesUnsupportedHardware",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Android Lint: Correctness",
                      "index": 5,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "AndroidLintUseAlpha2",
                "shortDescription": {
                  "text": "Using 3-letter Codes"
                },
                "fullDescription": {
                  "text": "Using 3-letter Codes For compatibility with earlier devices, you should only use 3-letter language and region codes when there is no corresponding 2 letter code. Issue id: UseAlpha2 https://tools.ietf.org/html/bcp47",
                  "markdown": "Using 3-letter Codes  \n\nFor compatibility with earlier devices, you should only use 3-letter language and region codes when there is no corresponding 2 letter code.  \n\nIssue id: UseAlpha2  \n\n<https://tools.ietf.org/html/bcp47>"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "AndroidLintUseAlpha2",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Android Lint: Correctness",
                      "index": 5,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "AndroidLintTextFields",
                "shortDescription": {
                  "text": "Missing inputType"
                },
                "fullDescription": {
                  "text": "Missing 'inputType' Providing an 'inputType' attribute on a text field improves usability because depending on the data to be input, optimized keyboards can be shown to the user (such as just digits and parentheses for a phone number). The lint detector also looks at the 'id' of the view, and if the id offers a hint of the purpose of the field (for example, the 'id' contains the phrase 'phone' or 'email'), then lint will also ensure that the 'inputType' contains the corresponding type attributes. If you really want to keep the text field generic, you can suppress this warning by setting 'inputType=\"text\"'. Issue id: TextFields",
                  "markdown": "Missing `inputType`  \n\nProviding an `inputType` attribute on a text field improves usability because depending on the data to be input, optimized keyboards can be shown to the user (such as just digits and parentheses for a phone number).   \n\nThe lint detector also looks at the `id` of the view, and if the id offers a hint of the purpose of the field (for example, the `id` contains the phrase `phone` or `email`), then lint will also ensure that the `inputType` contains the corresponding type attributes.  \n\nIf you really want to keep the text field generic, you can suppress this warning by setting `inputType=\"text\"`.  \n\nIssue id: TextFields"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "AndroidLintTextFields",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Android Lint: Usability",
                      "index": 42,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "AndroidLintUnsupportedTvHardware",
                "shortDescription": {
                  "text": "Unsupported TV Hardware Feature"
                },
                "fullDescription": {
                  "text": "Unsupported TV Hardware Feature The '<uses-feature>' element should not require this unsupported TV hardware feature. Any uses-feature not explicitly marked with 'required=\"false\"' is necessary on the device to be installed on. Ensure that any features that might prevent it from being installed on a TV device are reviewed and marked as not required in the manifest. Issue id: UnsupportedTvHardware https://developer.android.com/training/tv/start/hardware.html#unsupported-features",
                  "markdown": "Unsupported TV Hardware Feature  \n\nThe `<uses-feature>` element should not require this unsupported TV hardware feature. Any uses-feature not explicitly marked with `required=\"false\"` is necessary on the device to be installed on. Ensure that any features that might prevent it from being installed on a TV device are reviewed and marked as not required in the manifest.  \n\nIssue id: UnsupportedTvHardware  \n\n<https://developer.android.com/training/tv/start/hardware.html#unsupported-features>"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "error",
                  "parameters": {
                    "suppressToolId": "AndroidLintUnsupportedTvHardware",
                    "ideaSeverity": "ERROR",
                    "qodanaSeverity": "Critical"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Android Lint: Correctness",
                      "index": 5,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "AndroidLintImpliedQuantity",
                "shortDescription": {
                  "text": "Implied Quantities"
                },
                "fullDescription": {
                  "text": "Implied Quantities Plural strings should generally include a '%s' or '%d' formatting argument. In locales like English, the 'one' quantity only applies to a single value, 1, but that's not true everywhere. For example, in Slovene, the 'one' quantity will apply to 1, 101, 201, 301, and so on. Similarly, there are locales where multiple values match the 'zero' and 'two' quantities. In these locales, it is usually an error to have a message which does not include a formatting argument (such as '%d'), since it will not be clear from the grammar what quantity the quantity string is describing. Issue id: ImpliedQuantity https://developer.android.com/guide/topics/resources/string-resource.html#Plurals",
                  "markdown": "Implied Quantities  \n\nPlural strings should generally include a `%s` or `%d` formatting argument. In locales like English, the `one` quantity only applies to a single value, 1, but that's not true everywhere. For example, in Slovene, the `one` quantity will apply to 1, 101, 201, 301, and so on. Similarly, there are locales where multiple values match the `zero` and `two` quantities.  \n\nIn these locales, it is usually an error to have a message which does not include a formatting argument (such as '%d'), since it will not be clear from the grammar what quantity the quantity string is describing.  \n\nIssue id: ImpliedQuantity  \n\n<https://developer.android.com/guide/topics/resources/string-resource.html#Plurals>"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "error",
                  "parameters": {
                    "suppressToolId": "AndroidLintImpliedQuantity",
                    "ideaSeverity": "ERROR",
                    "qodanaSeverity": "Critical"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Android Lint: Correctness",
                      "index": 5,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "AndroidLintDuplicateDivider",
                "shortDescription": {
                  "text": "Unnecessary Divider Copy"
                },
                "fullDescription": {
                  "text": "Unnecessary Divider Copy Older versions of the RecyclerView library did not include a divider decorator, but one was provided as a sample in the support demos. This divider class has been widely copy/pasted into various projects. In recent versions of the support library, the divider decorator is now included, so you can replace custom copies with the \"built-in\" version, 'android.support.v7.widget.DividerItemDecoration'. Issue id: DuplicateDivider",
                  "markdown": "Unnecessary Divider Copy  \n\nOlder versions of the RecyclerView library did not include a divider decorator, but one was provided as a sample in the support demos. This divider class has been widely copy/pasted into various projects.  \n\nIn recent versions of the support library, the divider decorator is now included, so you can replace custom copies with the \"built-in\" version, `android.support.v7.widget.DividerItemDecoration`.  \n\nIssue id: DuplicateDivider"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "AndroidLintDuplicateDivider",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Android Lint: Performance",
                      "index": 14,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "AndroidLintInvalidPermission",
                "shortDescription": {
                  "text": "Invalid Permission Attribute"
                },
                "fullDescription": {
                  "text": "Invalid Permission Attribute Not all elements support the permission attribute. If a permission is set on an invalid element, it is a no-op and ignored. Ensure that this permission attribute was set on the correct element to protect the correct component. Issue id: InvalidPermission",
                  "markdown": "Invalid Permission Attribute  \n\nNot all elements support the permission attribute. If a permission is set on an invalid element, it is a no-op and ignored. Ensure that this permission attribute was set on the correct element to protect the correct component.  \n\nIssue id: InvalidPermission"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "error",
                  "parameters": {
                    "suppressToolId": "AndroidLintInvalidPermission",
                    "ideaSeverity": "ERROR",
                    "qodanaSeverity": "Critical"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Android Lint: Security",
                      "index": 44,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "AndroidLintPxUsage",
                "shortDescription": {
                  "text": "Using 'px' dimension"
                },
                "fullDescription": {
                  "text": "Using 'px' dimension For performance reasons and to keep the code simpler, the Android system uses pixels as the standard unit for expressing dimension or coordinate values. That means that the dimensions of a view are always expressed in the code using pixels, but always based on the current screen density. For instance, if 'myView.getWidth()' returns 10, the view is 10 pixels wide on the current screen, but on a device with a higher density screen, the value returned might be 15. If you use pixel values in your application code to work with bitmaps that are not pre-scaled for the current screen density, you might need to scale the pixel values that you use in your code to match the un-scaled bitmap source. Issue id: PxUsage https://developer.android.com/guide/practices/screens_support.html#screen-independence",
                  "markdown": "Using 'px' dimension  \n\nFor performance reasons and to keep the code simpler, the Android system uses pixels as the standard unit for expressing dimension or coordinate values. That means that the dimensions of a view are always expressed in the code using pixels, but always based on the current screen density. For instance, if `myView.getWidth()` returns 10, the view is 10 pixels wide on the current screen, but on a device with a higher density screen, the value returned might be 15. If you use pixel values in your application code to work with bitmaps that are not pre-scaled for the current screen density, you might need to scale the pixel values that you use in your code to match the un-scaled bitmap source.  \n\nIssue id: PxUsage  \n\n<https://developer.android.com/guide/practices/screens_support.html#screen-independence>"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "AndroidLintPxUsage",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Android Lint: Correctness",
                      "index": 5,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "AndroidLintPlaySdkIndexGenericIssues",
                "shortDescription": {
                  "text": "Library has issues in SDK Index"
                },
                "fullDescription": {
                  "text": "Library has issues in SDK Index This library version has issues that could block publishing in the Google Play Store. Issue id: PlaySdkIndexGenericIssues https://developer.android.com/distribute/sdk-index",
                  "markdown": "Library has issues in SDK Index  \n\nThis library version has issues that could block publishing in the Google Play Store.  \n\nIssue id: PlaySdkIndexGenericIssues  \n\n<https://developer.android.com/distribute/sdk-index>"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "error",
                  "parameters": {
                    "suppressToolId": "AndroidLintPlaySdkIndexGenericIssues",
                    "ideaSeverity": "ERROR",
                    "qodanaSeverity": "Critical"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Android Lint: Compliance",
                      "index": 134,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "AndroidLintWearableConfigurationAction",
                "shortDescription": {
                  "text": "Wear configuration action metadata must match an activity"
                },
                "fullDescription": {
                  "text": "Wear configuration action metadata must match an activity Only when a watch face service defines 'wearableConfigurationAction' metadata, with the value 'WATCH_FACE_EDITOR', there should be an activity in the same package, which has an intent filter for 'WATCH_FACE_EDITOR' (with 'com.google.android.wearable.watchface.category.WEARABLE_CONFIGURATION' if 'minSdkVersion' is less than 30). Issue id: WearableConfigurationAction https://developer.android.com/training/wearables/watch-faces/configuration",
                  "markdown": "Wear configuration action metadata must match an activity  \n\nOnly when a watch face service defines `wearableConfigurationAction` metadata, with the value `WATCH_FACE_EDITOR`, there should be an activity in the same package, which has an intent filter for `WATCH_FACE_EDITOR` (with `com.google.android.wearable.watchface.category.WEARABLE_CONFIGURATION` if `minSdkVersion` is less than 30).  \n\nIssue id: WearableConfigurationAction  \n\n<https://developer.android.com/training/wearables/watch-faces/configuration>"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "AndroidLintWearableConfigurationAction",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Android Lint: Correctness",
                      "index": 5,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "AndroidLintButtonStyle",
                "shortDescription": {
                  "text": "Button should be borderless"
                },
                "fullDescription": {
                  "text": "Button should be borderless Button bars typically use a borderless style for the buttons. Set the 'style=\"?android:attr/buttonBarButtonStyle\"' attribute on each of the buttons, and set 'style=\"?android:attr/buttonBarStyle\"' on the parent layout Issue id: ButtonStyle https://d.android.com/r/studio-ui/designer/material/dialogs",
                  "markdown": "Button should be borderless  \n\nButton bars typically use a borderless style for the buttons. Set the `style=\"?android:attr/buttonBarButtonStyle\"` attribute on each of the buttons, and set `style=\"?android:attr/buttonBarStyle\"` on the parent layout  \n\nIssue id: ButtonStyle  \n\n<https://d.android.com/r/studio-ui/designer/material/dialogs>"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "AndroidLintButtonStyle",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Android Lint: Usability",
                      "index": 42,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "AndroidLintOverdraw",
                "shortDescription": {
                  "text": "Overdraw: Painting regions more than once"
                },
                "fullDescription": {
                  "text": "Overdraw: Painting regions more than once If you set a background drawable on a root view, then you should use a custom theme where the theme background is null. Otherwise, the theme background will be painted first, only to have your custom background completely cover it; this is called \"overdraw\". NOTE: This detector relies on figuring out which layouts are associated with which activities based on scanning the Java code, and it's currently doing that using an inexact pattern matching algorithm. Therefore, it can incorrectly conclude which activity the layout is associated with and then wrongly complain that a background-theme is hidden. If you want your custom background on multiple pages, then you should consider making a custom theme with your custom background and just using that theme instead of a root element background. Of course it's possible that your custom drawable is translucent and you want it to be mixed with the background. However, you will get better performance if you pre-mix the background with your drawable and use that resulting image or color as a custom theme background instead. Issue id: Overdraw",
                  "markdown": "Overdraw: Painting regions more than once  \n\nIf you set a background drawable on a root view, then you should use a custom theme where the theme background is null. Otherwise, the theme background will be painted first, only to have your custom background completely cover it; this is called \"overdraw\".  \n\nNOTE: This detector relies on figuring out which layouts are associated with which activities based on scanning the Java code, and it's currently doing that using an inexact pattern matching algorithm. Therefore, it can incorrectly conclude which activity the layout is associated with and then wrongly complain that a background-theme is hidden.  \n\nIf you want your custom background on multiple pages, then you should consider making a custom theme with your custom background and just using that theme instead of a root element background.  \n\nOf course it's possible that your custom drawable is translucent and you want it to be mixed with the background. However, you will get better performance if you pre-mix the background with your drawable and use that resulting image or color as a custom theme background instead.  \n\nIssue id: Overdraw"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "AndroidLintOverdraw",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Android Lint: Performance",
                      "index": 14,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "AndroidLintSignatureOrSystemPermissions",
                "shortDescription": {
                  "text": "Declaring signatureOrSystem permissions"
                },
                "fullDescription": {
                  "text": "Declaring signatureOrSystem permissions The 'signature' protection level should probably be sufficient for most needs and works regardless of where applications are installed. The 'signatureOrSystem' level is used for certain situations where multiple vendors have applications built into a system image and need to share specific features explicitly because they are being built together. Issue id: SignatureOrSystemPermissions",
                  "markdown": "Declaring signatureOrSystem permissions  \n\nThe `signature` protection level should probably be sufficient for most needs and works regardless of where applications are installed. The `signatureOrSystem` level is used for certain situations where multiple vendors have applications built into a system image and need to share specific features explicitly because they are being built together.  \n\nIssue id: SignatureOrSystemPermissions"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "AndroidLintSignatureOrSystemPermissions",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Android Lint: Security",
                      "index": 44,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "AndroidLintWrongCase",
                "shortDescription": {
                  "text": "Wrong case for view tag"
                },
                "fullDescription": {
                  "text": "Wrong case for view tag Most layout tags, such as '<Button>', refer to actual view classes and are therefore capitalized. However, there are exceptions such as '<fragment>' and '<include>'. This lint check looks for incorrect capitalizations. Issue id: WrongCase https://developer.android.com/guide/components/fragments.html",
                  "markdown": "Wrong case for view tag  \n\nMost layout tags, such as `<Button>`, refer to actual view classes and are therefore capitalized. However, there are exceptions such as `<fragment>` and `<include>`. This lint check looks for incorrect capitalizations.  \n\nIssue id: WrongCase  \n\n<https://developer.android.com/guide/components/fragments.html>"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "error",
                  "parameters": {
                    "suppressToolId": "AndroidLintWrongCase",
                    "ideaSeverity": "ERROR",
                    "qodanaSeverity": "Critical"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Android Lint: Correctness",
                      "index": 5,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "AndroidLintNotificationPermission",
                "shortDescription": {
                  "text": "Notifications Without Permission"
                },
                "fullDescription": {
                  "text": "Notifications Without Permission When targeting Android 13 and higher, posting permissions requires holding the runtime permission 'android.permission.POST_NOTIFICATIONS'. Issue id: NotificationPermission",
                  "markdown": "Notifications Without Permission  \n\nWhen targeting Android 13 and higher, posting permissions requires holding the runtime permission `android.permission.POST_NOTIFICATIONS`.  \n\nIssue id: NotificationPermission"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "error",
                  "parameters": {
                    "suppressToolId": "AndroidLintNotificationPermission",
                    "ideaSeverity": "ERROR",
                    "qodanaSeverity": "Critical"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Android Lint: Correctness",
                      "index": 5,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "AndroidLintGradleIdeError",
                "shortDescription": {
                  "text": "Gradle IDE Support Issues"
                },
                "fullDescription": {
                  "text": "Gradle IDE Support Issues Gradle is highly flexible, and there are things you can do in Gradle files which can make it hard or impossible for IDEs to properly handle the project. This lint check looks for constructs that potentially break IDE support. Issue id: GradleIdeError",
                  "markdown": "Gradle IDE Support Issues  \n\nGradle is highly flexible, and there are things you can do in Gradle files which can make it hard or impossible for IDEs to properly handle the project. This lint check looks for constructs that potentially break IDE support.  \n\nIssue id: GradleIdeError"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "error",
                  "parameters": {
                    "suppressToolId": "AndroidLintGradleIdeError",
                    "ideaSeverity": "ERROR",
                    "qodanaSeverity": "Critical"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Android Lint: Correctness",
                      "index": 5,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "AndroidLintUnusedTranslation",
                "shortDescription": {
                  "text": "Unused Translation"
                },
                "fullDescription": {
                  "text": "Unused Translation If an application defines a translation for a language which is not included in the app's 'localeConfig' file (when declared in the manifest), that language will be \"unused\"; it will not be presented to the user. Usually this means you have forgotten to include it in the locale config file. Issue id: UnusedTranslation https://developer.android.com/about/versions/13/features/app-languages",
                  "markdown": "Unused Translation  \n\nIf an application defines a translation for a language which is not included in the app's `localeConfig` file (when declared in the manifest), that language will be \"unused\"; it will not be presented to the user. Usually this means you have forgotten to include it in the locale config file.  \n\nIssue id: UnusedTranslation  \n\n<https://developer.android.com/about/versions/13/features/app-languages>"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "AndroidLintUnusedTranslation",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Android Lint: Correctness",
                      "index": 5,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "AndroidLintIconLauncherShape",
                "shortDescription": {
                  "text": "The launcher icon shape should use a distinct silhouette"
                },
                "fullDescription": {
                  "text": "The launcher icon shape should use a distinct silhouette According to the Android Design Guide (https://d.android.com/r/studio-ui/designer/material/iconography) your launcher icons should \"use a distinct silhouette\", a \"three-dimensional, front view, with a slight perspective as if viewed from above, so that users perceive some depth.\" The unique silhouette implies that your launcher icon should not be a filled square. Issue id: IconLauncherShape",
                  "markdown": "The launcher icon shape should use a distinct silhouette  \n\nAccording to the Android Design Guide (<https://d.android.com/r/studio-ui/designer/material/iconography>) your launcher icons should \"use a distinct silhouette\", a \"three-dimensional, front view, with a slight perspective as if viewed from above, so that users perceive some depth.\"  \n\nThe unique silhouette implies that your launcher icon should not be a filled square.  \n\nIssue id: IconLauncherShape"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "AndroidLintIconLauncherShape",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Android Lint: Usability",
                      "index": 42,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "AndroidLintWifiManagerLeak",
                "shortDescription": {
                  "text": "WifiManager Leak"
                },
                "fullDescription": {
                  "text": "WifiManager Leak On versions prior to Android N (24), initializing the 'WifiManager' via 'Context#getSystemService' can cause a memory leak if the context is not the application context. Change 'context.getSystemService(...)' to 'context.getApplicationContext().getSystemService(...)'. Issue id: WifiManagerLeak",
                  "markdown": "WifiManager Leak  \n\nOn versions prior to Android N (24), initializing the `WifiManager` via `Context#getSystemService` can cause a memory leak if the context is not the application context. Change `context.getSystemService(...)` to `context.getApplicationContext().getSystemService(...)`.  \n\nIssue id: WifiManagerLeak"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "error",
                  "parameters": {
                    "suppressToolId": "AndroidLintWifiManagerLeak",
                    "ideaSeverity": "ERROR",
                    "qodanaSeverity": "Critical"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Android Lint: Correctness",
                      "index": 5,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "AndroidLintParcelClassLoader",
                "shortDescription": {
                  "text": "Default Parcel Class Loader"
                },
                "fullDescription": {
                  "text": "Default Parcel Class Loader The documentation for 'Parcel#readParcelable(ClassLoader)' (and its variations) says that you can pass in 'null' to pick up the default class loader. However, that ClassLoader is a system class loader and is not able to find classes in your own application. If you are writing your own classes into the 'Parcel' (not just SDK classes like 'String' and so on), then you should supply a 'ClassLoader' for your application instead; a simple way to obtain one is to just call 'getClass().getClassLoader()' from your own class. Issue id: ParcelClassLoader https://developer.android.com/reference/android/os/Parcel.html",
                  "markdown": "Default Parcel Class Loader  \n\nThe documentation for `Parcel#readParcelable(ClassLoader)` (and its variations) says that you can pass in `null` to pick up the default class loader. However, that ClassLoader is a system class loader and is not able to find classes in your own application.  \n\nIf you are writing your own classes into the `Parcel` (not just SDK classes like `String` and so on), then you should supply a `ClassLoader` for your application instead; a simple way to obtain one is to just call `getClass().getClassLoader()` from your own class.  \n\nIssue id: ParcelClassLoader  \n\n<https://developer.android.com/reference/android/os/Parcel.html>"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "AndroidLintParcelClassLoader",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Android Lint: Correctness",
                      "index": 5,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "AndroidLintEasterEgg",
                "shortDescription": {
                  "text": "Code contains easter egg"
                },
                "fullDescription": {
                  "text": "Code contains easter egg An \"easter egg\" is code deliberately hidden in the code, both from potential users and even from other developers. This lint check looks for code which looks like it may be hidden from sight. Issue id: EasterEgg",
                  "markdown": "Code contains easter egg  \n\nAn \"easter egg\" is code deliberately hidden in the code, both from potential users and even from other developers. This lint check looks for code which looks like it may be hidden from sight.  \n\nIssue id: EasterEgg"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "AndroidLintEasterEgg",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Android Lint: Security",
                      "index": 44,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "AndroidLintRecycle",
                "shortDescription": {
                  "text": "Missing recycle() calls"
                },
                "fullDescription": {
                  "text": "Missing 'recycle()' calls Many resources, such as TypedArrays, VelocityTrackers, etc., should be recycled (with a 'recycle()' call) after use. This lint check looks for missing 'recycle()' calls. Issue id: Recycle",
                  "markdown": "Missing `recycle()` calls  \n\nMany resources, such as TypedArrays, VelocityTrackers, etc., should be recycled (with a `recycle()` call) after use. This lint check looks for missing `recycle()` calls.  \n\nIssue id: Recycle"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "AndroidLintRecycle",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Android Lint: Performance",
                      "index": 14,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "AndroidLintUsableSpace",
                "shortDescription": {
                  "text": "Using getUsableSpace()"
                },
                "fullDescription": {
                  "text": "Using getUsableSpace() When you need to allocate disk space for large files, consider using the new 'allocateBytes(FileDescriptor, long)' API, which will automatically clear cached files belonging to other apps (as needed) to meet your request. When deciding if the device has enough disk space to hold your new data, call 'getAllocatableBytes(UUID)' instead of using 'getUsableSpace()', since the former will consider any cached data that the system is willing to clear on your behalf. Note that these methods require API level 26. If your app is running on older devices, you will probably need to use both APIs, conditionally switching on 'Build.VERSION.SDK_INT'. Lint only looks in the same compilation unit to see if you are already using both APIs, so if it warns even though you are already using the new API, consider moving the calls to the same file or suppressing the warning. Issue id: UsableSpace",
                  "markdown": "Using getUsableSpace()  \n\nWhen you need to allocate disk space for large files, consider using the new `allocateBytes(FileDescriptor, long)` API, which will automatically clear cached files belonging to other apps (as needed) to meet your request.  \n\nWhen deciding if the device has enough disk space to hold your new data, call `getAllocatableBytes(UUID)` instead of using `getUsableSpace()`, since the former will consider any cached data that the system is willing to clear on your behalf.  \n\nNote that these methods require API level 26. If your app is running on older devices, you will probably need to use both APIs, conditionally switching on `Build.VERSION.SDK_INT`. Lint only looks in the same compilation unit to see if you are already using both APIs, so if it warns even though you are already using the new API, consider moving the calls to the same file or suppressing the warning.  \n\nIssue id: UsableSpace"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "AndroidLintUsableSpace",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Android Lint: Performance",
                      "index": 14,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "AndroidLintLogConditional",
                "shortDescription": {
                  "text": "Unconditional Logging Calls"
                },
                "fullDescription": {
                  "text": "Unconditional Logging Calls The 'BuildConfig' class provides a constant, 'DEBUG', which indicates whether the code is being built in release mode or in debug mode. In release mode, you typically want to strip out all the logging calls. Since the compiler will automatically remove all code which is inside a 'if (false)' check, surrounding your logging calls with a check for 'BuildConfig.DEBUG' is a good idea. If you really intend for the logging to be present in release mode, you can suppress this warning with a '@SuppressLint' annotation for the intentional logging calls. Issue id: LogConditional",
                  "markdown": "Unconditional Logging Calls  \n\nThe `BuildConfig` class provides a constant, `DEBUG`, which indicates whether the code is being built in release mode or in debug mode. In release mode, you typically want to strip out all the logging calls. Since the compiler will automatically remove all code which is inside a `if (false)` check, surrounding your logging calls with a check for `BuildConfig.DEBUG` is a good idea.  \n\nIf you **really** intend for the logging to be present in release mode, you can suppress this warning with a `@SuppressLint` annotation for the intentional logging calls.  \n\nIssue id: LogConditional"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "AndroidLintLogConditional",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Android Lint: Performance",
                      "index": 14,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "AndroidLintNestedWeights",
                "shortDescription": {
                  "text": "Nested layout weights"
                },
                "fullDescription": {
                  "text": "Nested layout weights Layout weights require a widget to be measured twice. When a 'LinearLayout' with non-zero weights is nested inside another 'LinearLayout' with non-zero weights, then the number of measurements increase exponentially. Issue id: NestedWeights",
                  "markdown": "Nested layout weights  \n\nLayout weights require a widget to be measured twice. When a `LinearLayout` with non-zero weights is nested inside another `LinearLayout` with non-zero weights, then the number of measurements increase exponentially.  \n\nIssue id: NestedWeights"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "AndroidLintNestedWeights",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Android Lint: Performance",
                      "index": 14,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "AndroidLintSwitchIntDef",
                "shortDescription": {
                  "text": "Missing @IntDef in Switch"
                },
                "fullDescription": {
                  "text": "Missing @IntDef in Switch This check warns if a 'switch' statement does not explicitly include all the values declared by the typedef '@IntDef' declaration. Issue id: SwitchIntDef",
                  "markdown": "Missing @IntDef in Switch  \n\nThis check warns if a `switch` statement does not explicitly include all the values declared by the typedef `@IntDef` declaration.  \n\nIssue id: SwitchIntDef"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "AndroidLintSwitchIntDef",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Android Lint: Correctness",
                      "index": 5,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "AndroidLintKotlinNullnessAnnotation",
                "shortDescription": {
                  "text": "Kotlin nullability annotation"
                },
                "fullDescription": {
                  "text": "Kotlin nullability annotation In Kotlin, nullness is part of the type system; 's: String' is never null and 's: String?' is sometimes null, whether or not you add in additional annotations stating '@NonNull' or '@Nullable'. These are likely copy/paste mistakes, and are misleading. Issue id: KotlinNullnessAnnotation",
                  "markdown": "Kotlin nullability annotation  \n\nIn Kotlin, nullness is part of the type system; `s: String` is **never** null and `s: String?` is sometimes null, whether or not you add in additional annotations stating `@NonNull` or `@Nullable`. These are likely copy/paste mistakes, and are misleading.  \n\nIssue id: KotlinNullnessAnnotation"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "error",
                  "parameters": {
                    "suppressToolId": "AndroidLintKotlinNullnessAnnotation",
                    "ideaSeverity": "ERROR",
                    "qodanaSeverity": "Critical"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Android Lint: Correctness",
                      "index": 5,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "NavigationFile",
                "shortDescription": {
                  "text": "Navigation file"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "error",
                  "parameters": {
                    "suppressToolId": "NavigationFile",
                    "ideaSeverity": "ERROR",
                    "qodanaSeverity": "Critical"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Android",
                      "index": 83,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "AndroidLintUnclosedTrace",
                "shortDescription": {
                  "text": "Incorrect trace section usage"
                },
                "fullDescription": {
                  "text": "Incorrect trace section usage Calls to begin trace sections must be followed by corresponding calls to end those trace sections. Care must be taken to ensure that begin-section / end-section pairs are properly nested, and that functions do not return when there are still unclosed trace sections. The easiest way to ensure begin-section / end-section pairs are properly closed is to use a try-finally block as follows: try {\n  Trace.beginSection(\"OK\")\n  return true\n} finally {\n  Trace.endSection()\n}\n This lint check may result in false-positives if trace sections are guarded by conditionals. For example, it may erroneously say the following has unclosed trace sections: try {\n  Trace.beginSection(\"Wrong\")\n  if (a == b) {\n    Trace.beginSection(\"OK\")\n    blockingCall()\n  }\n} finally {\n  // Even though this is technically correct, the lint check isn't capable of detecting\n  // that the two conditionals are the same\n  if (a == b) Trace.endSection()\n  Trace.endSection()\n}\n To fix the code snippet above, you could add a nested try-finally as follows: try {\n  Trace.beginSection(\"OK\")\n  if (a == b) {\n    try {\n      Trace.beginSection(\"OK\")\n      blockingCall()\n    } finally {\n      Trace.endSection()\n    }\n  }\n} finally {\n  Trace.endSection()\n}\n Issue id: UnclosedTrace Available options: strict (default is false): Whether to assume any method call could throw an exception. In strict mode, this check assumes that any method call in between begin-section and end-section pairs could potentially throw an exception. Strict mode is useful for situations where unchecked Java exceptions are caught and do not necessarily result in a crash. If strict mode is off, this check will still consider the flow of exceptions in Kotlin, but it will ignore unchecked exceptions ('RuntimeException' and its subclasses) in Java unless the method declares explicitly that it 'throws' them. If strict mode is enabled, all Java method calls need to be guarded using a finally block so ensure the trace is always ended. To configure this option, use a 'lint.xml' file with an <option> like this: <lint>\n    <issue id=\"UnclosedTrace\">\n        <option name=\"strict\" value=\"false\" />\n    </issue>\n</lint>",
                  "markdown": "Incorrect trace section usage  \n\nCalls to begin trace sections must be followed by corresponding calls to end those trace sections. Care must be taken to ensure that begin-section / end-section pairs are properly nested, and that functions do not return when there are still unclosed trace sections. The easiest way to ensure begin-section / end-section pairs are properly closed is to use a try-finally block as follows:  \n\n```\ntry {\n  Trace.beginSection(\"OK\")\n  return true\n} finally {\n  Trace.endSection()\n}\n```\n\nThis lint check may result in false-positives if trace sections are guarded by conditionals. For example, it may erroneously say the following has unclosed trace sections:  \n\n```\ntry {\n  Trace.beginSection(\"Wrong\")\n  if (a == b) {\n    Trace.beginSection(\"OK\")\n    blockingCall()\n  }\n} finally {\n  // Even though this is technically correct, the lint check isn't capable of detecting\n  // that the two conditionals are the same\n  if (a == b) Trace.endSection()\n  Trace.endSection()\n}\n```\n\nTo fix the code snippet above, you could add a nested try-finally as follows:  \n\n```\ntry {\n  Trace.beginSection(\"OK\")\n  if (a == b) {\n    try {\n      Trace.beginSection(\"OK\")\n      blockingCall()\n    } finally {\n      Trace.endSection()\n    }\n  }\n} finally {\n  Trace.endSection()\n}\n```\n\nIssue id: UnclosedTrace  \n\nAvailable options:  \n\n**strict** (default is false):  \nWhether to assume any method call could throw an exception.  \n\nIn strict mode, this check assumes that any method call in between begin-section and end-section pairs could potentially throw an exception. Strict mode is useful for situations where unchecked Java exceptions are caught and do not necessarily result in a crash.  \n\nIf strict mode is off, this check will still consider the flow of exceptions in Kotlin, but it will ignore unchecked exceptions (`RuntimeException` and its subclasses) in Java unless the method declares explicitly that it `throws` them. If strict mode is enabled, all Java method calls need to be guarded using a finally block so ensure the trace is always ended.  \n\nTo configure this option, use a `lint.xml` file with an \\<option\\> like this:  \n\n```\n<lint>\n    <issue id=\"UnclosedTrace\">\n        <option name=\"strict\" value=\"false\" />\n    </issue>\n</lint>\n```"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "AndroidLintUnclosedTrace",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Android Lint: Correctness",
                      "index": 5,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "AndroidLintTranslucentOrientation",
                "shortDescription": {
                  "text": "Mixing screenOrientation and translucency"
                },
                "fullDescription": {
                  "text": "Mixing screenOrientation and translucency Specifying a fixed screen orientation with a translucent theme isn't supported on apps with 'targetSdkVersion' O or greater since there can be an another activity visible behind your activity with a conflicting request. For example, your activity requests landscape and the visible activity behind your translucent activity request portrait. In this case the system can only honor one of the requests and currently prefers to honor the request from non-translucent activities since there is nothing visible behind them. Devices running platform version O or greater will throw an exception in your app if this state is detected. Issue id: TranslucentOrientation",
                  "markdown": "Mixing screenOrientation and translucency  \n\nSpecifying a fixed screen orientation with a translucent theme isn't supported on apps with `targetSdkVersion` O or greater since there can be an another activity visible behind your activity with a conflicting request.  \n\nFor example, your activity requests landscape and the visible activity behind your translucent activity request portrait. In this case the system can only honor one of the requests and currently prefers to honor the request from non-translucent activities since there is nothing visible behind them.  \n\nDevices running platform version O or greater will throw an exception in your app if this state is detected.  \n\nIssue id: TranslucentOrientation"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "AndroidLintTranslucentOrientation",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Android Lint: Correctness",
                      "index": 5,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "AndroidLintScrollViewSize",
                "shortDescription": {
                  "text": "ScrollView size validation"
                },
                "fullDescription": {
                  "text": "ScrollView size validation ScrollView children must set their 'layout_width' or 'layout_height' attributes to 'wrap_content' rather than 'fill_parent' or 'match_parent' in the scrolling dimension. Issue id: ScrollViewSize",
                  "markdown": "ScrollView size validation  \n\nScrollView children must set their `layout_width` or `layout_height` attributes to `wrap_content` rather than `fill_parent` or `match_parent` in the scrolling dimension.  \n\nIssue id: ScrollViewSize"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "AndroidLintScrollViewSize",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Android Lint: Correctness",
                      "index": 5,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "AndroidLintUselessLeaf",
                "shortDescription": {
                  "text": "Unnecessary leaf layout"
                },
                "fullDescription": {
                  "text": "Unnecessary leaf layout A layout that has no children or no background can often be removed (since it is invisible) for a flatter and more efficient layout hierarchy. Issue id: UselessLeaf",
                  "markdown": "Unnecessary leaf layout  \n\nA layout that has no children or no background can often be removed (since it is invisible) for a flatter and more efficient layout hierarchy.  \n\nIssue id: UselessLeaf"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "AndroidLintUselessLeaf",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Android Lint: Performance",
                      "index": 14,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "AndroidLintDuplicateActivity",
                "shortDescription": {
                  "text": "Activity registered more than once"
                },
                "fullDescription": {
                  "text": "Activity registered more than once An activity should only be registered once in the manifest. If it is accidentally registered more than once, then subtle errors can occur, since attribute declarations from the two elements are not merged, so you may accidentally remove previous declarations. Issue id: DuplicateActivity",
                  "markdown": "Activity registered more than once  \n\nAn activity should only be registered once in the manifest. If it is accidentally registered more than once, then subtle errors can occur, since attribute declarations from the two elements are not merged, so you may accidentally remove previous declarations.  \n\nIssue id: DuplicateActivity"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "error",
                  "parameters": {
                    "suppressToolId": "AndroidLintDuplicateActivity",
                    "ideaSeverity": "ERROR",
                    "qodanaSeverity": "Critical"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Android Lint: Correctness",
                      "index": 5,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "AndroidLintAppCompatCustomView",
                "shortDescription": {
                  "text": "Appcompat Custom Widgets"
                },
                "fullDescription": {
                  "text": "Appcompat Custom Widgets In order to support features such as tinting, the appcompat library will automatically load special appcompat replacements for the builtin widgets. However, this does not work for your own custom views. Instead of extending the 'android.widget' classes directly, you should instead extend one of the delegate classes in 'androidx.appcompat.widget.AppCompatTextView'. Issue id: AppCompatCustomView",
                  "markdown": "Appcompat Custom Widgets  \n\nIn order to support features such as tinting, the appcompat library will automatically load special appcompat replacements for the builtin widgets. However, this does not work for your own custom views.  \n\nInstead of extending the `android.widget` classes directly, you should instead extend one of the delegate classes in `androidx.appcompat.widget.AppCompatTextView`.  \n\nIssue id: AppCompatCustomView"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "error",
                  "parameters": {
                    "suppressToolId": "AndroidLintAppCompatCustomView",
                    "ideaSeverity": "ERROR",
                    "qodanaSeverity": "Critical"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Android Lint: Correctness",
                      "index": 5,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "AndroidLintNewApi",
                "shortDescription": {
                  "text": "Calling new methods on older versions"
                },
                "fullDescription": {
                  "text": "Calling new methods on older versions This check scans through all the Android API calls in the application and warns about any calls that are not available on all versions targeted by this application (according to its minimum SDK attribute in the manifest). If you really want to use this API and don't need to support older devices just set the 'minSdkVersion' in your 'build.gradle' or 'AndroidManifest.xml' files. If your code is deliberately accessing newer APIs, and you have ensured (e.g. with conditional execution) that this code will only ever be called on a supported platform, then you can annotate your class or method with the '@TargetApi' annotation specifying the local minimum SDK to apply, such as '@TargetApi(11)', such that this check considers 11 rather than your manifest file's minimum SDK as the required API level. If you are deliberately setting 'android:' attributes in style definitions, make sure you place this in a 'values-v'NN folder in order to avoid running into runtime conflicts on certain devices where manufacturers have added custom attributes whose ids conflict with the new ones on later platforms. Similarly, you can use tools:targetApi=\"11\" in an XML file to indicate that the element will only be inflated in an adequate context. Issue id: NewApi",
                  "markdown": "Calling new methods on older versions  \n\nThis check scans through all the Android API calls in the application and warns about any calls that are not available on **all** versions targeted by this application (according to its minimum SDK attribute in the manifest).  \n\nIf you really want to use this API and don't need to support older devices just set the `minSdkVersion` in your `build.gradle` or `AndroidManifest.xml` files.  \n\nIf your code is **deliberately** accessing newer APIs, and you have ensured (e.g. with conditional execution) that this code will only ever be called on a supported platform, then you can annotate your class or method with the `@TargetApi` annotation specifying the local minimum SDK to apply, such as `@TargetApi(11)`, such that this check considers 11 rather than your manifest file's minimum SDK as the required API level.  \n\nIf you are deliberately setting `android:` attributes in style definitions, make sure you place this in a `values-v`*NN* folder in order to avoid running into runtime conflicts on certain devices where manufacturers have added custom attributes whose ids conflict with the new ones on later platforms.  \n\nSimilarly, you can use tools:targetApi=\"11\" in an XML file to indicate that the element will only be inflated in an adequate context.  \n\nIssue id: NewApi"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "error",
                  "parameters": {
                    "suppressToolId": "AndroidLintNewApi",
                    "ideaSeverity": "ERROR",
                    "qodanaSeverity": "Critical"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Android Lint: Correctness",
                      "index": 5,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "AndroidLintHalfFloat",
                "shortDescription": {
                  "text": "Incorrect Half Float"
                },
                "fullDescription": {
                  "text": "Incorrect Half Float Half-precision floating point are stored in a short data type, and should be manipulated using the 'android.util.Half' class. This check flags usages where it appears that these values are used incorrectly. Issue id: HalfFloat",
                  "markdown": "Incorrect Half Float  \n\nHalf-precision floating point are stored in a short data type, and should be manipulated using the `android.util.Half` class. This check flags usages where it appears that these values are used incorrectly.  \n\nIssue id: HalfFloat"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "error",
                  "parameters": {
                    "suppressToolId": "AndroidLintHalfFloat",
                    "ideaSeverity": "ERROR",
                    "qodanaSeverity": "Critical"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Android Lint: Correctness",
                      "index": 5,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "AndroidLintUniqueConstants",
                "shortDescription": {
                  "text": "Overlapping Enumeration Constants"
                },
                "fullDescription": {
                  "text": "Overlapping Enumeration Constants The '@IntDef' annotation allows you to create a light-weight \"enum\" or type definition. However, it's possible to accidentally specify the same value for two or more of the values, which can lead to hard-to-detect bugs. This check looks for this scenario and flags any repeated constants. In some cases, the repeated constant is intentional (for example, renaming a constant to a more intuitive name, and leaving the old name in place for compatibility purposes). In that case, simply suppress this check by adding a '@SuppressLint(\"UniqueConstants\")' annotation. Issue id: UniqueConstants",
                  "markdown": "Overlapping Enumeration Constants  \n\nThe `@IntDef` annotation allows you to create a light-weight \"enum\" or type definition. However, it's possible to accidentally specify the same value for two or more of the values, which can lead to hard-to-detect bugs. This check looks for this scenario and flags any repeated constants.  \n\nIn some cases, the repeated constant is intentional (for example, renaming a constant to a more intuitive name, and leaving the old name in place for compatibility purposes). In that case, simply suppress this check by adding a `@SuppressLint(\"UniqueConstants\")` annotation.  \n\nIssue id: UniqueConstants"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "error",
                  "parameters": {
                    "suppressToolId": "AndroidLintUniqueConstants",
                    "ideaSeverity": "ERROR",
                    "qodanaSeverity": "Critical"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Android Lint: Correctness",
                      "index": 5,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "AndroidLintAnnotateVersionCheck",
                "shortDescription": {
                  "text": "Annotate SDK_INT checks"
                },
                "fullDescription": {
                  "text": "Annotate SDK_INT checks Methods which perform 'SDK_INT' version checks (or field constants which reflect the result of a version check) in libraries should be annotated with '@ChecksSdkIntAtLeast'. This makes it possible for lint to correctly check calls into the library later to correctly understand that problematic code which is wrapped within a call into this library is safe after all. Issue id: AnnotateVersionCheck",
                  "markdown": "Annotate SDK_INT checks  \n\nMethods which perform `SDK_INT` version checks (or field constants which reflect the result of a version check) in libraries should be annotated with `@ChecksSdkIntAtLeast`. This makes it possible for lint to correctly check calls into the library later to correctly understand that problematic code which is wrapped within a call into this library is safe after all.  \n\nIssue id: AnnotateVersionCheck"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "AndroidLintAnnotateVersionCheck",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Android Lint: Correctness",
                      "index": 5,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "AndroidLintQueryAllPackagesPermission",
                "shortDescription": {
                  "text": "Using the QUERY_ALL_PACKAGES permission"
                },
                "fullDescription": {
                  "text": "Using the QUERY_ALL_PACKAGES permission If you need to query or interact with other installed apps, you should be using a '<queries>' declaration in your manifest. Using the QUERY_ALL_PACKAGES permission in order to see all installed apps is rarely necessary, and most apps on Google Play are not allowed to have this permission. Issue id: QueryAllPackagesPermission https://g.co/dev/packagevisibility",
                  "markdown": "Using the QUERY_ALL_PACKAGES permission  \n\nIf you need to query or interact with other installed apps, you should be using a `<queries>` declaration in your manifest. Using the QUERY_ALL_PACKAGES permission in order to see all installed apps is rarely necessary, and most apps on Google Play are not allowed to have this permission.  \n\nIssue id: QueryAllPackagesPermission  \n\n<https://g.co/dev/packagevisibility>"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "error",
                  "parameters": {
                    "suppressToolId": "AndroidLintQueryAllPackagesPermission",
                    "ideaSeverity": "ERROR",
                    "qodanaSeverity": "Critical"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Android Lint: Compliance",
                      "index": 134,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "AndroidLintUnusedQuantity",
                "shortDescription": {
                  "text": "Unused quantity translations"
                },
                "fullDescription": {
                  "text": "Unused quantity translations Android defines a number of different quantity strings, such as 'zero', 'one', 'few' and 'many'. However, many languages do not distinguish grammatically between all these different quantities. This lint check looks at the quantity strings defined for each translation and flags any quantity strings that are unused (because the language does not make that quantity distinction, and Android will therefore not look it up). For example, in Chinese, only the 'other' quantity is used, so even if you provide translations for 'zero' and 'one', these strings will not be returned when 'getQuantityString()' is called, even with '0' or '1'. Issue id: UnusedQuantity https://developer.android.com/guide/topics/resources/string-resource.html#Plurals",
                  "markdown": "Unused quantity translations  \n\nAndroid defines a number of different quantity strings, such as `zero`, `one`, `few` and `many`. However, many languages do not distinguish grammatically between all these different quantities.  \n\nThis lint check looks at the quantity strings defined for each translation and flags any quantity strings that are unused (because the language does not make that quantity distinction, and Android will therefore not look it up).  \n\nFor example, in Chinese, only the `other` quantity is used, so even if you provide translations for `zero` and `one`, these strings will **not** be returned when `getQuantityString()` is called, even with `0` or `1`.  \n\nIssue id: UnusedQuantity  \n\n<https://developer.android.com/guide/topics/resources/string-resource.html#Plurals>"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "AndroidLintUnusedQuantity",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Android Lint: Correctness",
                      "index": 5,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "AndroidLintUnusedAttribute",
                "shortDescription": {
                  "text": "Attribute unused on older versions"
                },
                "fullDescription": {
                  "text": "Attribute unused on older versions This check finds attributes set in XML files that were introduced in a version newer than the oldest version targeted by your application (with the 'minSdkVersion' attribute). This is not an error; the application will simply ignore the attribute. However, if the attribute is important to the appearance or functionality of your application, you should consider finding an alternative way to achieve the same result with only available attributes, and then you can optionally create a copy of the layout in a layout-vNN folder which will be used on API NN or higher where you can take advantage of the newer attribute. Note: This check does not only apply to attributes. For example, some tags can be unused too, such as the new '<tag>' element in layouts introduced in API 21. Issue id: UnusedAttribute",
                  "markdown": "Attribute unused on older versions  \n\nThis check finds attributes set in XML files that were introduced in a version newer than the oldest version targeted by your application (with the `minSdkVersion` attribute).  \n\nThis is not an error; the application will simply ignore the attribute. However, if the attribute is important to the appearance or functionality of your application, you should consider finding an alternative way to achieve the same result with only available attributes, and then you can optionally create a copy of the layout in a layout-vNN folder which will be used on API NN or higher where you can take advantage of the newer attribute.  \n\nNote: This check does not only apply to attributes. For example, some tags can be unused too, such as the new `<tag>` element in layouts introduced in API 21.  \n\nIssue id: UnusedAttribute"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "AndroidLintUnusedAttribute",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Android Lint: Correctness",
                      "index": 5,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "AndroidLintTooManyViews",
                "shortDescription": {
                  "text": "Layout has too many views"
                },
                "fullDescription": {
                  "text": "Layout has too many views Using too many views in a single layout is bad for performance. Consider using compound drawables or other tricks for reducing the number of views in this layout. The maximum view count defaults to 80 but can be configured with the environment variable 'ANDROID_LINT_MAX_VIEW_COUNT'. Issue id: TooManyViews",
                  "markdown": "Layout has too many views  \n\nUsing too many views in a single layout is bad for performance. Consider using compound drawables or other tricks for reducing the number of views in this layout.  \n\nThe maximum view count defaults to 80 but can be configured with the environment variable `ANDROID_LINT_MAX_VIEW_COUNT`.  \n\nIssue id: TooManyViews"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "AndroidLintTooManyViews",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Android Lint: Performance",
                      "index": 14,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "AndroidLintForegroundServiceType",
                "shortDescription": {
                  "text": "ForegroundServiceType Issues"
                },
                "fullDescription": {
                  "text": "Missing 'foregroundServiceType' attribute in manifest For 'targetSdkVersion' >= 34, to call 'Service.startForeground()', the <service> element in the manifest file must have the 'foregroundServiceType' attribute specified. Issue id: ForegroundServiceType",
                  "markdown": "Missing `foregroundServiceType` attribute in manifest  \n\nFor `targetSdkVersion` \\>= 34, to call `Service.startForeground()`, the \\<service\\> element in the manifest file must have the `foregroundServiceType` attribute specified.  \n\nIssue id: ForegroundServiceType"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "error",
                  "parameters": {
                    "suppressToolId": "AndroidLintForegroundServiceType",
                    "ideaSeverity": "ERROR",
                    "qodanaSeverity": "Critical"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Android Lint: Correctness",
                      "index": 5,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "AndroidLintMissingTranslation",
                "shortDescription": {
                  "text": "Incomplete translation"
                },
                "fullDescription": {
                  "text": "Incomplete translation If an application has more than one locale, then all the strings declared in one language should also be translated in all other languages. If the string should not be translated, you can add the attribute 'translatable=\"false\"' on the '<string>' element, or you can define all your non-translatable strings in a resource file called 'donottranslate.xml'. Or, you can ignore the issue with a 'tools:ignore=\"MissingTranslation\"' attribute. You can tell lint (and other tools) which language is the default language in your 'res/values/' folder by specifying 'tools:locale=\"languageCode\"' for the root '<resources>' element in your resource file. (The 'tools' prefix refers to the namespace declaration 'http://schemas.android.com/tools'.) Issue id: MissingTranslation",
                  "markdown": "Incomplete translation  \n\nIf an application has more than one locale, then all the strings declared in one language should also be translated in all other languages.  \n\nIf the string should **not** be translated, you can add the attribute `translatable=\"false\"` on the `<string>` element, or you can define all your non-translatable strings in a resource file called `donottranslate.xml`. Or, you can ignore the issue with a `tools:ignore=\"MissingTranslation\"` attribute.  \n\nYou can tell lint (and other tools) which language is the default language in your `res/values/` folder by specifying `tools:locale=\"languageCode\"` for the root `<resources>` element in your resource file. (The `tools` prefix refers to the namespace declaration `http://schemas.android.com/tools`.)  \n\nIssue id: MissingTranslation"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "error",
                  "parameters": {
                    "suppressToolId": "AndroidLintMissingTranslation",
                    "ideaSeverity": "ERROR",
                    "qodanaSeverity": "Critical"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Android Lint: Correctness",
                      "index": 5,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "AndroidNonConstantResIdsInSwitch",
                "shortDescription": {
                  "text": "Non-constant resource ID in a switch statement"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "error",
                  "parameters": {
                    "suppressToolId": "AndroidNonConstantResIdsInSwitch",
                    "ideaSeverity": "ERROR",
                    "qodanaSeverity": "Critical"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Android",
                      "index": 83,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "AndroidLintEllipsizeMaxLines",
                "shortDescription": {
                  "text": "Combining Ellipsize and Maxlines"
                },
                "fullDescription": {
                  "text": "Combining Ellipsize and Maxlines Combining 'ellipsize' and 'maxLines=1' can lead to crashes on some devices. Earlier versions of lint recommended replacing 'singleLine=true' with 'maxLines=1' but that should not be done when using 'ellipsize'. Issue id: EllipsizeMaxLines https://issuetracker.google.com/issues/36950033",
                  "markdown": "Combining Ellipsize and Maxlines  \n\nCombining `ellipsize` and `maxLines=1` can lead to crashes on some devices. Earlier versions of lint recommended replacing `singleLine=true` with `maxLines=1` but that should not be done when using `ellipsize`.  \n\nIssue id: EllipsizeMaxLines  \n\n<https://issuetracker.google.com/issues/36950033>"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "error",
                  "parameters": {
                    "suppressToolId": "AndroidLintEllipsizeMaxLines",
                    "ideaSeverity": "ERROR",
                    "qodanaSeverity": "Critical"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Android Lint: Correctness",
                      "index": 5,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "AndroidLintSetWorldWritable",
                "shortDescription": {
                  "text": "File.setWritable() used to make file world-writable"
                },
                "fullDescription": {
                  "text": "'File.setWritable()' used to make file world-writable Setting files world-writable is very dangerous, and likely to cause security holes in applications. It is strongly discouraged; instead, applications should use more formal mechanisms for interactions such as 'ContentProvider', 'BroadcastReceiver', and 'Service'. Issue id: SetWorldWritable https://goo.gle/SetWorldWritable",
                  "markdown": "`File.setWritable()` used to make file world-writable  \n\nSetting files world-writable is very dangerous, and likely to cause security holes in applications. It is strongly discouraged; instead, applications should use more formal mechanisms for interactions such as `ContentProvider`, `BroadcastReceiver`, and `Service`.  \n\nIssue id: SetWorldWritable  \n\n<https://goo.gle/SetWorldWritable>"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "AndroidLintSetWorldWritable",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Android Lint: Security",
                      "index": 44,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "AndroidLintInOrMmUsage",
                "shortDescription": {
                  "text": "Using mm or in dimensions"
                },
                "fullDescription": {
                  "text": "Using 'mm' or 'in' dimensions Avoid using 'mm' (millimeters) or 'in' (inches) as the unit for dimensions. While it should work in principle, unfortunately many devices do not report the correct true physical density, which means that the dimension calculations won't work correctly. You are better off using 'dp' (and for font sizes, 'sp'). Issue id: InOrMmUsage",
                  "markdown": "Using `mm` or `in` dimensions  \n\nAvoid using `mm` (millimeters) or `in` (inches) as the unit for dimensions.  \n\nWhile it should work in principle, unfortunately many devices do not report the correct true physical density, which means that the dimension calculations won't work correctly. You are better off using `dp` (and for font sizes, `sp`).  \n\nIssue id: InOrMmUsage"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "AndroidLintInOrMmUsage",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Android Lint: Correctness",
                      "index": 5,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "AndroidLintRtlCompat",
                "shortDescription": {
                  "text": "Right-to-left text compatibility issues"
                },
                "fullDescription": {
                  "text": "Right-to-left text compatibility issues API 17 adds a 'textAlignment' attribute to specify text alignment. However, if you are supporting older versions than API 17, you must also specify a gravity or layout_gravity attribute, since older platforms will ignore the 'textAlignment' attribute. Issue id: RtlCompat",
                  "markdown": "Right-to-left text compatibility issues  \n\nAPI 17 adds a `textAlignment` attribute to specify text alignment. However, if you are supporting older versions than API 17, you must **also** specify a gravity or layout_gravity attribute, since older platforms will ignore the `textAlignment` attribute.  \n\nIssue id: RtlCompat"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "error",
                  "parameters": {
                    "suppressToolId": "AndroidLintRtlCompat",
                    "ideaSeverity": "ERROR",
                    "qodanaSeverity": "Critical"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Android Lint: Internationalization",
                      "index": 63,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "AndroidLintLifecycleAnnotationProcessorWithJava8",
                "shortDescription": {
                  "text": "Lifecycle Annotation Processor with Java 8 Compile Option"
                },
                "fullDescription": {
                  "text": "Lifecycle Annotation Processor with Java 8 Compile Option For faster incremental build, switch to the Lifecycle Java 8 API with these steps: First replace annotationProcessor \"androidx.lifecycle:lifecycle-compiler:*version*\"\nkapt \"androidx.lifecycle:lifecycle-compiler:*version*\"\n with implementation \"androidx.lifecycle:lifecycle-common-java8:*version*\"\n Then remove any 'OnLifecycleEvent' annotations from 'Observer' classes and make them implement the 'DefaultLifecycleObserver' interface. Issue id: LifecycleAnnotationProcessorWithJava8 https://d.android.com/r/studio-ui/lifecycle-release-notes",
                  "markdown": "Lifecycle Annotation Processor with Java 8 Compile Option  \n\nFor faster incremental build, switch to the Lifecycle Java 8 API with these steps:  \n\nFirst replace\n\n```\nannotationProcessor \"androidx.lifecycle:lifecycle-compiler:*version*\"\nkapt \"androidx.lifecycle:lifecycle-compiler:*version*\"\n```\n\nwith\n\n```\nimplementation \"androidx.lifecycle:lifecycle-common-java8:*version*\"\n```\n\nThen remove any `OnLifecycleEvent` annotations from `Observer` classes and make them implement the `DefaultLifecycleObserver` interface.  \n\nIssue id: LifecycleAnnotationProcessorWithJava8  \n\n<https://d.android.com/r/studio-ui/lifecycle-release-notes>"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "AndroidLintLifecycleAnnotationProcessorWithJava8",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Android Lint: Performance",
                      "index": 14,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "AndroidLintOnClick",
                "shortDescription": {
                  "text": "onClick method does not exist"
                },
                "fullDescription": {
                  "text": "'onClick' method does not exist The 'onClick' attribute value should be the name of a method in this View's context to invoke when the view is clicked. This name must correspond to a public method that takes exactly one parameter of type 'View'. Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character. Issue id: OnClick",
                  "markdown": "`onClick` method does not exist  \n\nThe `onClick` attribute value should be the name of a method in this View's context to invoke when the view is clicked. This name must correspond to a public method that takes exactly one parameter of type `View`.  \n\nMust be a string value, using '\\\\;' to escape characters such as '\\\\n' or '\\\\uxxxx' for a unicode character.  \n\nIssue id: OnClick"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "error",
                  "parameters": {
                    "suppressToolId": "AndroidLintOnClick",
                    "ideaSeverity": "ERROR",
                    "qodanaSeverity": "Critical"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Android Lint: Correctness",
                      "index": 5,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "AndroidLintAutofill",
                "shortDescription": {
                  "text": "Use Autofill"
                },
                "fullDescription": {
                  "text": "Use Autofill Specify an 'autofillHints' attribute when targeting SDK version 26 or higher or explicitly specify that the view is not important for autofill. Your app can help an autofill service classify the data correctly by providing the meaning of each view that could be autofillable, such as views representing usernames, passwords, credit card fields, email addresses, etc. The hints can have any value, but it is recommended to use predefined values like 'username' for a username or 'creditCardNumber' for a credit card number. For a list of all predefined autofill hint constants, see the 'AUTOFILL_HINT_' constants in the 'View' reference at https://developer.android.com/reference/android/view/View.html. You can mark a view unimportant for autofill by specifying an 'importantForAutofill' attribute on that view or a parent view. See https://developer.android.com/reference/android/view/View.html#setImportantForAutofill(int). Issue id: Autofill https://developer.android.com/guide/topics/text/autofill.html",
                  "markdown": "Use Autofill  \n\nSpecify an `autofillHints` attribute when targeting SDK version 26 or higher or explicitly specify that the view is not important for autofill. Your app can help an autofill service classify the data correctly by providing the meaning of each view that could be autofillable, such as views representing usernames, passwords, credit card fields, email addresses, etc.  \n\nThe hints can have any value, but it is recommended to use predefined values like 'username' for a username or 'creditCardNumber' for a credit card number. For a list of all predefined autofill hint constants, see the `AUTOFILL_HINT_` constants in the `View` reference at <https://developer.android.com/reference/android/view/View.html>.  \n\nYou can mark a view unimportant for autofill by specifying an `importantForAutofill` attribute on that view or a parent view. See <https://developer.android.com/reference/android/view/View.html#setImportantForAutofill(int)>.  \n\nIssue id: Autofill  \n\n<https://developer.android.com/guide/topics/text/autofill.html>"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "AndroidLintAutofill",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Android Lint: Usability",
                      "index": 42,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "AndroidLintUniquePermission",
                "shortDescription": {
                  "text": "Permission names are not unique"
                },
                "fullDescription": {
                  "text": "Permission names are not unique The unqualified names or your permissions must be unique. The reason for this is that at build time, the 'aapt' tool will generate a class named 'Manifest' which contains a field for each of your permissions. These fields are named using your permission unqualified names (i.e. the name portion after the last dot). If more than one permission maps to the same field name, that field will arbitrarily name just one of them. Issue id: UniquePermission",
                  "markdown": "Permission names are not unique  \n\nThe unqualified names or your permissions must be unique. The reason for this is that at build time, the `aapt` tool will generate a class named `Manifest` which contains a field for each of your permissions. These fields are named using your permission unqualified names (i.e. the name portion after the last dot).  \n\nIf more than one permission maps to the same field name, that field will arbitrarily name just one of them.  \n\nIssue id: UniquePermission"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "error",
                  "parameters": {
                    "suppressToolId": "AndroidLintUniquePermission",
                    "ideaSeverity": "ERROR",
                    "qodanaSeverity": "Critical"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Android Lint: Correctness",
                      "index": 5,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "AndroidLintWrongThread",
                "shortDescription": {
                  "text": "Wrong Thread"
                },
                "fullDescription": {
                  "text": "Wrong Thread Ensures that a method which expects to be called on a specific thread, is actually called from that thread. For example, calls on methods in widgets should always be made on the UI thread. Issue id: WrongThread https://developer.android.com/guide/components/processes-and-threads.html#Threads",
                  "markdown": "Wrong Thread  \n\nEnsures that a method which expects to be called on a specific thread, is actually called from that thread. For example, calls on methods in widgets should always be made on the UI thread.  \n\nIssue id: WrongThread  \n\n<https://developer.android.com/guide/components/processes-and-threads.html#Threads>"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "error",
                  "parameters": {
                    "suppressToolId": "AndroidLintWrongThread",
                    "ideaSeverity": "ERROR",
                    "qodanaSeverity": "Critical"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Android Lint: Correctness",
                      "index": 5,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "AndroidLintNfcTechWhitespace",
                "shortDescription": {
                  "text": "Whitespace in NFC tech lists"
                },
                "fullDescription": {
                  "text": "Whitespace in NFC tech lists In a '<tech-list>', there can be whitespace around the '<tech>' elements,but not inside them. This is because the code which reads in the tech list is currently very strict and will include the whitespace as part of the name. In other words, use '<tech>name</tech>', not '<tech> name </tech>'. Issue id: NfcTechWhitespace https://issuetracker.google.com/36988969",
                  "markdown": "Whitespace in NFC tech lists  \n\nIn a `<tech-list>`, there can be whitespace around the `<tech>` elements,but not inside them. This is because the code which reads in the tech list is currently very strict and will include the whitespace as part of the name.  \n\nIn other words, use `<tech>name</tech>`, not `<tech> name </tech>`.  \n\nIssue id: NfcTechWhitespace  \n\n<https://issuetracker.google.com/36988969>"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "error",
                  "parameters": {
                    "suppressToolId": "AndroidLintNfcTechWhitespace",
                    "ideaSeverity": "ERROR",
                    "qodanaSeverity": "Critical"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Android Lint: Correctness",
                      "index": 5,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "AndroidLintInvalidResourceFolder",
                "shortDescription": {
                  "text": "Invalid Resource Folder"
                },
                "fullDescription": {
                  "text": "Invalid Resource Folder This lint check looks for a folder name that is not a valid resource folder name; these will be ignored and not packaged by the Android Gradle build plugin. Note that the order of resources is very important; for example, you can't specify a language before a network code. Similarly, note that to use 3 letter region codes, you have to use a special BCP 47 syntax: the prefix b+ followed by the BCP 47 language tag but with '+' as the individual separators instead of '-'. Therefore, for the BCP 47 language tag 'nl-ABW' you have to use 'b+nl+ABW'. Issue id: InvalidResourceFolder https://developer.android.com/guide/topics/resources/providing-resources.html https://tools.ietf.org/html/bcp47",
                  "markdown": "Invalid Resource Folder  \n\nThis lint check looks for a folder name that is not a valid resource folder name; these will be ignored and not packaged by the Android Gradle build plugin.  \n\nNote that the order of resources is very important; for example, you can't specify a language before a network code.  \n\nSimilarly, note that to use 3 letter region codes, you have to use a special BCP 47 syntax: the prefix b+ followed by the BCP 47 language tag but with `+` as the individual separators instead of `-`. Therefore, for the BCP 47 language tag `nl-ABW` you have to use `b+nl+ABW`.  \n\nIssue id: InvalidResourceFolder  \n\n<https://developer.android.com/guide/topics/resources/providing-resources.html>  \n<https://tools.ietf.org/html/bcp47>"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "error",
                  "parameters": {
                    "suppressToolId": "AndroidLintInvalidResourceFolder",
                    "ideaSeverity": "ERROR",
                    "qodanaSeverity": "Critical"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Android Lint: Correctness",
                      "index": 5,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "AndroidLintKaptUsageInsteadOfKsp",
                "shortDescription": {
                  "text": "Kapt usage should be replaced with KSP"
                },
                "fullDescription": {
                  "text": "Kapt usage should be replaced with KSP KSP is a more efficient replacement for kapt. For libraries that support both, KSP should be used to improve build times. Issue id: KaptUsageInsteadOfKsp https://developer.android.com/studio/build/migrate-to-ksp",
                  "markdown": "Kapt usage should be replaced with KSP  \n\nKSP is a more efficient replacement for kapt. For libraries that support both, KSP should be used to improve build times.  \n\nIssue id: KaptUsageInsteadOfKsp  \n\n<https://developer.android.com/studio/build/migrate-to-ksp>"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "AndroidLintKaptUsageInsteadOfKsp",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Android Lint: Performance",
                      "index": 14,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "AndroidLintCommitPrefEdits",
                "shortDescription": {
                  "text": "Missing commit() on SharedPreference editor"
                },
                "fullDescription": {
                  "text": "Missing 'commit()' on 'SharedPreference' editor After calling 'edit()' on a 'SharedPreference', you must call 'commit()' or 'apply()' on the editor to save the results. Issue id: CommitPrefEdits",
                  "markdown": "Missing `commit()` on `SharedPreference` editor  \n\nAfter calling `edit()` on a `SharedPreference`, you must call `commit()` or `apply()` on the editor to save the results.  \n\nIssue id: CommitPrefEdits"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "AndroidLintCommitPrefEdits",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Android Lint: Correctness",
                      "index": 5,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "AndroidLintCutPasteId",
                "shortDescription": {
                  "text": "Likely cut & paste mistakes"
                },
                "fullDescription": {
                  "text": "Likely cut & paste mistakes This lint check looks for cases where you have cut & pasted calls to 'findViewById' but have forgotten to update the R.id field. It's possible that your code is simply (redundantly) looking up the field repeatedly, but lint cannot distinguish that from a case where you for example want to initialize fields 'prev' and 'next' and you cut & pasted 'findViewById(R.id.prev)' and forgot to update the second initialization to 'R.id.next'. Issue id: CutPasteId",
                  "markdown": "Likely cut \\& paste mistakes  \n\nThis lint check looks for cases where you have cut \\& pasted calls to `findViewById` but have forgotten to update the R.id field. It's possible that your code is simply (redundantly) looking up the field repeatedly, but lint cannot distinguish that from a case where you for example want to initialize fields `prev` and `next` and you cut \\& pasted `findViewById(R.id.prev)` and forgot to update the second initialization to `R.id.next`.  \n\nIssue id: CutPasteId"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "AndroidLintCutPasteId",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Android Lint: Correctness",
                      "index": 5,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "AndroidLintProxyPassword",
                "shortDescription": {
                  "text": "Proxy Password in Cleartext"
                },
                "fullDescription": {
                  "text": "Proxy Password in Cleartext Storing proxy server passwords in clear text is dangerous if this file is shared via version control. If this is deliberate or this is a truly private project, suppress this warning. Issue id: ProxyPassword",
                  "markdown": "Proxy Password in Cleartext  \n\nStoring proxy server passwords in clear text is dangerous if this file is shared via version control. If this is deliberate or this is a truly private project, suppress this warning.  \n\nIssue id: ProxyPassword"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "AndroidLintProxyPassword",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Android Lint: Security",
                      "index": 44,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "AndroidLintButtonOrder",
                "shortDescription": {
                  "text": "Button order"
                },
                "fullDescription": {
                  "text": "Button order According to the Android Design Guide, \"Action buttons are typically Cancel and/or OK, with OK indicating the preferred or most likely action. However, if the options consist of specific actions such as Close or Wait rather than a confirmation or cancellation of the action described in the content, then all the buttons should be active verbs. As a rule, the dismissive action of a dialog is always on the left whereas the affirmative actions are on the right.\" This check looks for button bars and buttons which look like cancel buttons, and makes sure that these are on the left. Issue id: ButtonOrder https://d.android.com/r/studio-ui/designer/material/dialogs",
                  "markdown": "Button order  \n\nAccording to the Android Design Guide,  \n\n\"Action buttons are typically Cancel and/or OK, with OK indicating the preferred or most likely action. However, if the options consist of specific actions such as Close or Wait rather than a confirmation or cancellation of the action described in the content, then all the buttons should be active verbs. As a rule, the dismissive action of a dialog is always on the left whereas the affirmative actions are on the right.\"  \n\nThis check looks for button bars and buttons which look like cancel buttons, and makes sure that these are on the left.  \n\nIssue id: ButtonOrder  \n\n<https://d.android.com/r/studio-ui/designer/material/dialogs>"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "AndroidLintButtonOrder",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Android Lint: Usability",
                      "index": 42,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "AndroidLintIconXmlAndPng",
                "shortDescription": {
                  "text": "Icon is specified both as .xml file and as a bitmap"
                },
                "fullDescription": {
                  "text": "Icon is specified both as '.xml' file and as a bitmap If a drawable resource appears as an '.xml' file in the 'drawable/' folder, it's usually not intentional for it to also appear as a bitmap using the same name; generally you expect the drawable XML file to define states and each state has a corresponding drawable bitmap. Issue id: IconXmlAndPng",
                  "markdown": "Icon is specified both as `.xml` file and as a bitmap  \n\nIf a drawable resource appears as an `.xml` file in the `drawable/` folder, it's usually not intentional for it to also appear as a bitmap using the same name; generally you expect the drawable XML file to define states and each state has a corresponding drawable bitmap.  \n\nIssue id: IconXmlAndPng"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "AndroidLintIconXmlAndPng",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Android Lint: Usability",
                      "index": 42,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "AndroidLintWearableBindListener",
                "shortDescription": {
                  "text": "Usage of Android Wear BIND_LISTENER is deprecated"
                },
                "fullDescription": {
                  "text": "Usage of Android Wear BIND_LISTENER is deprecated BIND_LISTENER receives all Android Wear events whether the application needs them or not. This can be inefficient and cause applications to wake up unnecessarily. With Google Play Services 8.2.0 or later it is recommended to use a more efficient combination of manifest listeners and api-based live listeners filtered by action, path and/or path prefix. Issue id: WearableBindListener https://android-developers.googleblog.com/2016/04/deprecation-of-bindlistener.html",
                  "markdown": "Usage of Android Wear BIND_LISTENER is deprecated  \n\nBIND_LISTENER receives all Android Wear events whether the application needs them or not. This can be inefficient and cause applications to wake up unnecessarily. With Google Play Services 8.2.0 or later it is recommended to use a more efficient combination of manifest listeners and api-based live listeners filtered by action, path and/or path prefix.  \n\nIssue id: WearableBindListener  \n\n<https://android-developers.googleblog.com/2016/04/deprecation-of-bindlistener.html>"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "error",
                  "parameters": {
                    "suppressToolId": "AndroidLintWearableBindListener",
                    "ideaSeverity": "ERROR",
                    "qodanaSeverity": "Critical"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Android Lint: Performance",
                      "index": 14,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "AndroidLintMissingApplicationIcon",
                "shortDescription": {
                  "text": "Missing application icon"
                },
                "fullDescription": {
                  "text": "Missing application icon You should set an icon for the application as whole because there is no default. This attribute must be set as a reference to a drawable resource containing the image (for example '@drawable/icon'). Issue id: MissingApplicationIcon https://developer.android.com/studio/publish/preparing#publishing-configure",
                  "markdown": "Missing application icon  \n\nYou should set an icon for the application as whole because there is no default. This attribute must be set as a reference to a drawable resource containing the image (for example `@drawable/icon`).  \n\nIssue id: MissingApplicationIcon  \n\n<https://developer.android.com/studio/publish/preparing#publishing-configure>"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "AndroidLintMissingApplicationIcon",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Android Lint: Usability",
                      "index": 42,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "AndroidLintWebpUnsupported",
                "shortDescription": {
                  "text": "WebP Unsupported"
                },
                "fullDescription": {
                  "text": "WebP Unsupported The WebP format requires Android 4.0 (API 15). Certain features, such as lossless encoding and transparency, requires Android 4.2.1 (API 18; API 17 is 4.2.0.) Issue id: WebpUnsupported",
                  "markdown": "WebP Unsupported  \n\nThe WebP format requires Android 4.0 (API 15). Certain features, such as lossless encoding and transparency, requires Android 4.2.1 (API 18; API 17 is 4.2.0.)  \n\nIssue id: WebpUnsupported"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "error",
                  "parameters": {
                    "suppressToolId": "AndroidLintWebpUnsupported",
                    "ideaSeverity": "ERROR",
                    "qodanaSeverity": "Critical"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Android Lint: Usability",
                      "index": 42,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "AndroidLintAlwaysShowAction",
                "shortDescription": {
                  "text": "Usage of showAsAction=always"
                },
                "fullDescription": {
                  "text": "Usage of 'showAsAction=always' Using 'showAsAction=\"always\"' in menu XML, or 'MenuItem.SHOW_AS_ACTION_ALWAYS' in Java code is usually a deviation from the user interface style guide.Use 'ifRoom' or the corresponding 'MenuItem.SHOW_AS_ACTION_IF_ROOM' instead. If 'always' is used sparingly there are usually no problems and behavior is roughly equivalent to 'ifRoom' but with preference over other 'ifRoom' items. Using it more than twice in the same menu is a bad idea. This check looks for menu XML files that contain more than two 'always' actions, or some 'always' actions and no 'ifRoom' actions. In Java code, it looks for projects that contain references to 'MenuItem.SHOW_AS_ACTION_ALWAYS' and no references to 'MenuItem.SHOW_AS_ACTION_IF_ROOM'. Issue id: AlwaysShowAction",
                  "markdown": "Usage of `showAsAction=always`  \n\nUsing `showAsAction=\"always\"` in menu XML, or `MenuItem.SHOW_AS_ACTION_ALWAYS` in Java code is usually a deviation from the user interface style guide.Use `ifRoom` or the corresponding `MenuItem.SHOW_AS_ACTION_IF_ROOM` instead.  \n\nIf `always` is used sparingly there are usually no problems and behavior is roughly equivalent to `ifRoom` but with preference over other `ifRoom` items. Using it more than twice in the same menu is a bad idea.  \n\nThis check looks for menu XML files that contain more than two `always` actions, or some `always` actions and no `ifRoom` actions. In Java code, it looks for projects that contain references to `MenuItem.SHOW_AS_ACTION_ALWAYS` and no references to `MenuItem.SHOW_AS_ACTION_IF_ROOM`.  \n\nIssue id: AlwaysShowAction"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "AndroidLintAlwaysShowAction",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Android Lint: Usability",
                      "index": 42,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "AndroidLintResourceName",
                "shortDescription": {
                  "text": "Resource with Wrong Prefix"
                },
                "fullDescription": {
                  "text": "Resource with Wrong Prefix In Gradle projects you can specify a resource prefix that all resources in the project must conform to. This makes it easier to ensure that you don't accidentally combine resources from different libraries, since they all end up in the same shared app namespace. Issue id: ResourceName",
                  "markdown": "Resource with Wrong Prefix  \n\nIn Gradle projects you can specify a resource prefix that all resources in the project must conform to. This makes it easier to ensure that you don't accidentally combine resources from different libraries, since they all end up in the same shared app namespace.  \n\nIssue id: ResourceName"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "error",
                  "parameters": {
                    "suppressToolId": "AndroidLintResourceName",
                    "ideaSeverity": "ERROR",
                    "qodanaSeverity": "Critical"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Android Lint: Correctness",
                      "index": 5,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "AndroidLintLockedOrientationActivity",
                "shortDescription": {
                  "text": "Incompatible screenOrientation value"
                },
                "fullDescription": {
                  "text": "Incompatible screenOrientation value The '<activity>' element should not be locked to any orientation so that users can take advantage of the multi-window environments and larger screens available on Android. To fix the issue, consider declaring the corresponding activity element with `screenOrientation=\"unspecified\"'or'\"fullSensor\"` attribute. Issue id: LockedOrientationActivity https://developer.android.com/topic/arc/window-management",
                  "markdown": "Incompatible screenOrientation value  \n\nThe `<activity>` element should not be locked to any orientation so that users can take advantage of the multi-window environments and larger screens available on Android. To fix the issue, consider declaring the corresponding activity element with \\`screenOrientation=\"unspecified\"`or `\"fullSensor\"\\` attribute.  \n\nIssue id: LockedOrientationActivity  \n\n<https://developer.android.com/topic/arc/window-management>"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "AndroidLintLockedOrientationActivity",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Android Lint: Correctness",
                      "index": 5,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "AndroidLintMissingIntentFilterForMediaSearch",
                "shortDescription": {
                  "text": "Missing MEDIA_PLAY_FROM_SEARCH intent-filter"
                },
                "fullDescription": {
                  "text": "Missing MEDIA_PLAY_FROM_SEARCH intent-filter To support voice searches on Android Auto, you should also register an 'intent-filter' for the action 'android.media.action.MEDIA_PLAY_FROM_SEARCH'. To do this, add `<intent-filter>`\n    `<action android:name=\"android.media.action.MEDIA_PLAY_FROM_SEARCH\" />`\n`</intent-filter>`\n to your '<activity>' or '<service>'. Issue id: MissingIntentFilterForMediaSearch https://developer.android.com/training/auto/audio/index.html#support_voice",
                  "markdown": "Missing MEDIA_PLAY_FROM_SEARCH intent-filter  \n\nTo support voice searches on Android Auto, you should also register an `intent-filter` for the action `android.media.action.MEDIA_PLAY_FROM_SEARCH`.  \n\nTo do this, add\n\n```\n`<intent-filter>`\n    `<action android:name=\"android.media.action.MEDIA_PLAY_FROM_SEARCH\" />`\n`</intent-filter>`\n```\n\nto your `<activity>` or `<service>`.  \n\nIssue id: MissingIntentFilterForMediaSearch  \n\n<https://developer.android.com/training/auto/audio/index.html#support_voice>"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "error",
                  "parameters": {
                    "suppressToolId": "AndroidLintMissingIntentFilterForMediaSearch",
                    "ideaSeverity": "ERROR",
                    "qodanaSeverity": "Critical"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Android Lint: Correctness",
                      "index": 5,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "AndroidLintUnsafeNativeCodeLocation",
                "shortDescription": {
                  "text": "Native code outside library directory"
                },
                "fullDescription": {
                  "text": "Native code outside library directory In general, application native code should only be placed in the application's library directory, not in other locations such as the res or assets directories. Placing the code in the library directory provides increased assurance that the code will not be tampered with after application installation. Application developers should use the features of their development environment to place application native libraries into the lib directory of their compiled APKs. Embedding non-shared library native executables into applications should be avoided when possible. Issue id: UnsafeNativeCodeLocation",
                  "markdown": "Native code outside library directory  \n\nIn general, application native code should only be placed in the application's library directory, not in other locations such as the res or assets directories. Placing the code in the library directory provides increased assurance that the code will not be tampered with after application installation. Application developers should use the features of their development environment to place application native libraries into the lib directory of their compiled APKs. Embedding non-shared library native executables into applications should be avoided when possible.  \n\nIssue id: UnsafeNativeCodeLocation"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "AndroidLintUnsafeNativeCodeLocation",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Android Lint: Security",
                      "index": 44,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "AndroidLintObsoleteSdkInt",
                "shortDescription": {
                  "text": "Obsolete SDK_INT Version Check"
                },
                "fullDescription": {
                  "text": "Obsolete SDK_INT Version Check This check flags version checks that are not necessary, because the 'minSdkVersion' (or surrounding known API level) is already at least as high as the version checked for. Similarly, it also looks for resources in '-vNN' folders, such as 'values-v14' where the version qualifier is less than or equal to the 'minSdkVersion', where the contents should be merged into the best folder. Issue id: ObsoleteSdkInt",
                  "markdown": "Obsolete SDK_INT Version Check  \n\nThis check flags version checks that are not necessary, because the `minSdkVersion` (or surrounding known API level) is already at least as high as the version checked for.  \n\nSimilarly, it also looks for resources in `-vNN` folders, such as `values-v14` where the version qualifier is less than or equal to the `minSdkVersion`, where the contents should be merged into the best folder.  \n\nIssue id: ObsoleteSdkInt"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "AndroidLintObsoleteSdkInt",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Android Lint: Performance",
                      "index": 14,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "AndroidLintImpliedTouchscreenHardware",
                "shortDescription": {
                  "text": "Touchscreen not optional"
                },
                "fullDescription": {
                  "text": "Touchscreen not optional Apps require the 'android.hardware.touchscreen' feature by default. If you want your app to be available on TV, you must also explicitly declare that a touchscreen is not required as follows: '<uses-feature android:name=\"android.hardware.touchscreen\" android:required=\"false\"/>' Issue id: ImpliedTouchscreenHardware https://developer.android.com/guide/topics/manifest/uses-feature-element.html",
                  "markdown": "Touchscreen not optional  \n\nApps require the `android.hardware.touchscreen` feature by default. If you want your app to be available on TV, you must also explicitly declare that a touchscreen is not required as follows:  \n`<uses-feature android:name=\"android.hardware.touchscreen\" android:required=\"false\"/>`  \n\nIssue id: ImpliedTouchscreenHardware  \n\n<https://developer.android.com/guide/topics/manifest/uses-feature-element.html>"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "error",
                  "parameters": {
                    "suppressToolId": "AndroidLintImpliedTouchscreenHardware",
                    "ideaSeverity": "ERROR",
                    "qodanaSeverity": "Critical"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Android Lint: Correctness",
                      "index": 5,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "AndroidLintMotionLayoutInvalidSceneFileReference",
                "shortDescription": {
                  "text": "layoutDescription must specify a scene file"
                },
                "fullDescription": {
                  "text": "layoutDescription must specify a scene file A motion scene file specifies the animations used in a 'MotionLayout'. The 'layoutDescription' is required to specify a valid motion scene file. Issue id: MotionLayoutInvalidSceneFileReference",
                  "markdown": "layoutDescription must specify a scene file  \n\nA motion scene file specifies the animations used in a `MotionLayout`. The `layoutDescription` is required to specify a valid motion scene file.  \n\nIssue id: MotionLayoutInvalidSceneFileReference"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "error",
                  "parameters": {
                    "suppressToolId": "AndroidLintMotionLayoutInvalidSceneFileReference",
                    "ideaSeverity": "ERROR",
                    "qodanaSeverity": "Critical"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Android Lint: Correctness",
                      "index": 5,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "AndroidLintDrawAllocation",
                "shortDescription": {
                  "text": "Memory allocations within drawing code"
                },
                "fullDescription": {
                  "text": "Memory allocations within drawing code You should avoid allocating objects during a drawing or layout operation. These are called frequently, so a smooth UI can be interrupted by garbage collection pauses caused by the object allocations. The way this is generally handled is to allocate the needed objects up front and to reuse them for each drawing operation. Some methods allocate memory on your behalf (such as 'Bitmap.create'), and these should be handled in the same way. Issue id: DrawAllocation",
                  "markdown": "Memory allocations within drawing code  \n\nYou should avoid allocating objects during a drawing or layout operation. These are called frequently, so a smooth UI can be interrupted by garbage collection pauses caused by the object allocations.  \n\nThe way this is generally handled is to allocate the needed objects up front and to reuse them for each drawing operation.  \n\nSome methods allocate memory on your behalf (such as `Bitmap.create`), and these should be handled in the same way.  \n\nIssue id: DrawAllocation"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "AndroidLintDrawAllocation",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Android Lint: Performance",
                      "index": 14,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "AndroidLintPropertyEscape",
                "shortDescription": {
                  "text": "Incorrect property escapes"
                },
                "fullDescription": {
                  "text": "Incorrect property escapes All backslashes and colons in .property files must be escaped with a backslash (). This means that when writing a Windows path, you must escape the file separators, so the path MyFiles should be written as 'key=\\\\My\\\\Files.' Issue id: PropertyEscape",
                  "markdown": "Incorrect property escapes  \n\nAll backslashes and colons in .property files must be escaped with a backslash (). This means that when writing a Windows path, you must escape the file separators, so the path MyFiles should be written as `key=\\\\My\\\\Files.`  \n\nIssue id: PropertyEscape"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "error",
                  "parameters": {
                    "suppressToolId": "AndroidLintPropertyEscape",
                    "ideaSeverity": "ERROR",
                    "qodanaSeverity": "Critical"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Android Lint: Correctness",
                      "index": 5,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "AndroidLintTestAppLink",
                "shortDescription": {
                  "text": "Unmatched URLs"
                },
                "fullDescription": {
                  "text": "Unmatched URLs Using one or more 'tools:validation testUrl=\"some url\"/>' elements in your manifest allows the link attributes in your intent filter to be checked for matches. Issue id: TestAppLink",
                  "markdown": "Unmatched URLs  \n\nUsing one or more `tools:validation testUrl=\"some url\"/>` elements in your manifest allows the link attributes in your intent filter to be checked for matches.  \n\nIssue id: TestAppLink"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "error",
                  "parameters": {
                    "suppressToolId": "AndroidLintTestAppLink",
                    "ideaSeverity": "ERROR",
                    "qodanaSeverity": "Critical"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Android Lint: Correctness",
                      "index": 5,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "AndroidLintIconMissingDensityFolder",
                "shortDescription": {
                  "text": "Missing density folder"
                },
                "fullDescription": {
                  "text": "Missing density folder Icons will look best if a custom version is provided for each of the major screen density classes (low, medium, high, extra-high, extra-extra-high). This lint check identifies folders which are missing, such as 'drawable-hdpi'. Low density is not really used much anymore, so this check ignores the ldpi density. To force lint to include it, set the environment variable 'ANDROID_LINT_INCLUDE_LDPI=true'. For more information on current density usage, see https://developer.android.com/about/dashboards Issue id: IconMissingDensityFolder https://developer.android.com/guide/practices/screens_support.html",
                  "markdown": "Missing density folder  \n\nIcons will look best if a custom version is provided for each of the major screen density classes (low, medium, high, extra-high, extra-extra-high). This lint check identifies folders which are missing, such as `drawable-hdpi`.  \n\nLow density is not really used much anymore, so this check ignores the ldpi density. To force lint to include it, set the environment variable `ANDROID_LINT_INCLUDE_LDPI=true`. For more information on current density usage, see <https://developer.android.com/about/dashboards>  \n\nIssue id: IconMissingDensityFolder  \n\n<https://developer.android.com/guide/practices/screens_support.html>"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "AndroidLintIconMissingDensityFolder",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Android Lint: Usability",
                      "index": 42,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "AndroidLintPlaySdkIndexNonCompliant",
                "shortDescription": {
                  "text": "Library has policy issues in SDK Index"
                },
                "fullDescription": {
                  "text": "Library has policy issues in SDK Index This library version has policy issues that will block publishing in the Google Play Store. Issue id: PlaySdkIndexNonCompliant https://developer.android.com/distribute/sdk-index",
                  "markdown": "Library has policy issues in SDK Index  \n\nThis library version has policy issues that will block publishing in the Google Play Store.  \n\nIssue id: PlaySdkIndexNonCompliant  \n\n<https://developer.android.com/distribute/sdk-index>"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "error",
                  "parameters": {
                    "suppressToolId": "AndroidLintPlaySdkIndexNonCompliant",
                    "ideaSeverity": "ERROR",
                    "qodanaSeverity": "Critical"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Android Lint: Compliance",
                      "index": 134,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "AndroidLintIconMixedNinePatch",
                "shortDescription": {
                  "text": "Clashing PNG and 9-PNG files"
                },
                "fullDescription": {
                  "text": "Clashing PNG and 9-PNG files If you accidentally name two separate resources 'file.png' and 'file.9.png', the image file and the nine patch file will both map to the same drawable resource, '@drawable/file', which is probably not what was intended. Issue id: IconMixedNinePatch",
                  "markdown": "Clashing PNG and 9-PNG files  \n\nIf you accidentally name two separate resources `file.png` and `file.9.png`, the image file and the nine patch file will both map to the same drawable resource, `@drawable/file`, which is probably not what was intended.  \n\nIssue id: IconMixedNinePatch"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "AndroidLintIconMixedNinePatch",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Android Lint: Usability",
                      "index": 42,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "AndroidLintStringFormatInvalid",
                "shortDescription": {
                  "text": "Invalid format string"
                },
                "fullDescription": {
                  "text": "Invalid format string If a string contains a '%' character, then the string may be a formatting string which will be passed to 'String.format' from Java code to replace each '%' occurrence with specific values. This lint warning checks for two related problems: (1) Formatting strings that are invalid, meaning that 'String.format' will throw exceptions at runtime when attempting to use the format string. (2) Strings containing '%' that are not formatting strings getting passed to a 'String.format' call. In this case the '%' will need to be escaped as '%%'. NOTE: Not all Strings which look like formatting strings are intended for use by 'String.format'; for example, they may contain date formats intended for 'android.text.format.Time#format()'. Lint cannot always figure out that a String is a date format, so you may get false warnings in those scenarios. See the suppress help topic for information on how to suppress errors in that case. Issue id: StringFormatInvalid",
                  "markdown": "Invalid format string  \n\nIf a string contains a '%' character, then the string may be a formatting string which will be passed to `String.format` from Java code to replace each '%' occurrence with specific values.  \n\nThis lint warning checks for two related problems:  \n(1) Formatting strings that are invalid, meaning that `String.format` will throw exceptions at runtime when attempting to use the format string.  \n(2) Strings containing '%' that are not formatting strings getting passed to a `String.format` call. In this case the '%' will need to be escaped as '%%'.  \n\nNOTE: Not all Strings which look like formatting strings are intended for use by `String.format`; for example, they may contain date formats intended for `android.text.format.Time#format()`. Lint cannot always figure out that a String is a date format, so you may get false warnings in those scenarios. See the suppress help topic for information on how to suppress errors in that case.  \n\nIssue id: StringFormatInvalid"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "error",
                  "parameters": {
                    "suppressToolId": "AndroidLintStringFormatInvalid",
                    "ideaSeverity": "ERROR",
                    "qodanaSeverity": "Critical"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Android Lint: Correctness",
                      "index": 5,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "AndroidLintIconDipSize",
                "shortDescription": {
                  "text": "Icon density-independent size validation"
                },
                "fullDescription": {
                  "text": "Icon density-independent size validation Checks the all icons which are provided in multiple densities, all compute to roughly the same density-independent pixel ('dip') size. This catches errors where images are either placed in the wrong folder, or icons are changed to new sizes but some folders are forgotten. Issue id: IconDipSize",
                  "markdown": "Icon density-independent size validation  \n\nChecks the all icons which are provided in multiple densities, all compute to roughly the same density-independent pixel (`dip`) size. This catches errors where images are either placed in the wrong folder, or icons are changed to new sizes but some folders are forgotten.  \n\nIssue id: IconDipSize"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "AndroidLintIconDipSize",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Android Lint: Usability",
                      "index": 42,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "AndroidLintSecretInSource",
                "shortDescription": {
                  "text": "Secret in source code"
                },
                "fullDescription": {
                  "text": "Secret in source code Including secrets, such as API keys, in source code is a security risk. It is generally best practice to not include API keys in source code, and instead use something like the Secrets Gradle Plugin for Android. Issue id: SecretInSource https://developers.google.com/maps/documentation/android-sdk/secrets-gradle-plugin",
                  "markdown": "Secret in source code  \n\nIncluding secrets, such as API keys, in source code is a security risk. It is generally best practice to not include API keys in source code, and instead use something like the Secrets Gradle Plugin for Android.  \n\nIssue id: SecretInSource  \n\n<https://developers.google.com/maps/documentation/android-sdk/secrets-gradle-plugin>"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "AndroidLintSecretInSource",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Android Lint: Security",
                      "index": 44,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "AndroidLintVectorRaster",
                "shortDescription": {
                  "text": "Vector Image Generation"
                },
                "fullDescription": {
                  "text": "Vector Image Generation Vector icons require API 21 or API 24 depending on used features, but when 'minSdkVersion' is less than 21 or 24 and Android Gradle plugin 1.4 or higher is used, a vector drawable placed in the 'drawable' folder is automatically moved to 'drawable-anydpi-v21' or 'drawable-anydpi-v24' and bitmap images are generated for different screen resolutions for backwards compatibility. However, there are some limitations to this raster image generation, and this lint check flags elements and attributes that are not fully supported. You should manually check whether the generated output is acceptable for those older devices. Issue id: VectorRaster",
                  "markdown": "Vector Image Generation  \n\nVector icons require API 21 or API 24 depending on used features, but when `minSdkVersion` is less than 21 or 24 and Android Gradle plugin 1.4 or higher is used, a vector drawable placed in the `drawable` folder is automatically moved to `drawable-anydpi-v21` or `drawable-anydpi-v24` and bitmap images are generated for different screen resolutions for backwards compatibility.  \n\nHowever, there are some limitations to this raster image generation, and this lint check flags elements and attributes that are not fully supported. You should manually check whether the generated output is acceptable for those older devices.  \n\nIssue id: VectorRaster"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "AndroidLintVectorRaster",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Android Lint: Correctness",
                      "index": 5,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "AndroidMissingOnClickHandler",
                "shortDescription": {
                  "text": "onClick handler is missing in the related activity"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "AndroidMissingOnClickHandler",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Android",
                      "index": 83,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "AndroidLintTilePreviewImageFormat",
                "shortDescription": {
                  "text": "Tile preview is not compliant with standards"
                },
                "fullDescription": {
                  "text": "Tile preview is not compliant with standards Tile projects should specify preview resources with aspect ratio 1:1 and at least 384px by 384px in size. Issue id: TilePreviewImageFormat https://developer.android.com/design/ui/wear/guides/surfaces/tiles#tile-previews",
                  "markdown": "Tile preview is not compliant with standards  \n\nTile projects should specify preview resources with aspect ratio 1:1 and at least 384px by 384px in size.  \n\nIssue id: TilePreviewImageFormat  \n\n<https://developer.android.com/design/ui/wear/guides/surfaces/tiles#tile-previews>"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "error",
                  "parameters": {
                    "suppressToolId": "AndroidLintTilePreviewImageFormat",
                    "ideaSeverity": "ERROR",
                    "qodanaSeverity": "Critical"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Android Lint: Usability",
                      "index": 42,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "AndroidLintCoarseFineLocation",
                "shortDescription": {
                  "text": "Cannot use ACCESS_FINE_LOCATION without ACCESS_COARSE_LOCATION"
                },
                "fullDescription": {
                  "text": "Cannot use 'ACCESS_FINE_LOCATION' without 'ACCESS_COARSE_LOCATION' If your app requires access to FINE location, on Android 12 and higher you must now request both FINE and COARSE. Users will have the option to grant only COARSE location. Ensure your app can work with just COARSE location. Issue id: CoarseFineLocation",
                  "markdown": "Cannot use `ACCESS_FINE_LOCATION` without `ACCESS_COARSE_LOCATION`  \n\nIf your app requires access to FINE location, on Android 12 and higher you must now request both FINE and COARSE. Users will have the option to grant only COARSE location. Ensure your app can work with just COARSE location.  \n\nIssue id: CoarseFineLocation"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "error",
                  "parameters": {
                    "suppressToolId": "AndroidLintCoarseFineLocation",
                    "ideaSeverity": "ERROR",
                    "qodanaSeverity": "Critical"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Android Lint: Correctness",
                      "index": 5,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "AndroidLintLeanbackUsesWifi",
                "shortDescription": {
                  "text": "Using android.hardware.wifi on TV"
                },
                "fullDescription": {
                  "text": "Using android.hardware.wifi on TV WiFi is not required for Android TV and many devices connect to the internet via alternative methods e.g. Ethernet. If your app is not focused specifically on WiFi functionality and only wishes to connect to the internet, please modify your Manifest to contain: '<uses-feature android:name=\"android.hardware.wifi\" android:required=\"false\" />' Un-metered or non-roaming connections can be detected in software using 'NetworkCapabilities#NET_CAPABILITY_NOT_METERED' and 'NetworkCapabilities#NET_CAPABILITY_NOT_ROAMING.' Issue id: LeanbackUsesWifi",
                  "markdown": "Using android.hardware.wifi on TV  \n\nWiFi is not required for Android TV and many devices connect to the internet via alternative methods e.g. Ethernet.  \n\nIf your app is not focused specifically on WiFi functionality and only wishes to connect to the internet, please modify your Manifest to contain: `<uses-feature android:name=\"android.hardware.wifi\" android:required=\"false\" />`  \n\nUn-metered or non-roaming connections can be detected in software using `NetworkCapabilities#NET_CAPABILITY_NOT_METERED` and `NetworkCapabilities#NET_CAPABILITY_NOT_ROAMING.`  \n\nIssue id: LeanbackUsesWifi"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "AndroidLintLeanbackUsesWifi",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Android Lint: Correctness",
                      "index": 5,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "AndroidLintPinSetExpiry",
                "shortDescription": {
                  "text": "Validate <pin-set> expiration attribute"
                },
                "fullDescription": {
                  "text": "Validate '<pin-set>' expiration attribute Ensures that the 'expiration' attribute of the '<pin-set>' element is valid and has not already expired or is expiring soon Issue id: PinSetExpiry https://developer.android.com/preview/features/security-config.html",
                  "markdown": "Validate `<pin-set>` expiration attribute  \n\nEnsures that the `expiration` attribute of the `<pin-set>` element is valid and has not already expired or is expiring soon  \n\nIssue id: PinSetExpiry  \n\n<https://developer.android.com/preview/features/security-config.html>"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "AndroidLintPinSetExpiry",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Android Lint: Correctness",
                      "index": 5,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "AndroidLintAppCompatMethod",
                "shortDescription": {
                  "text": "Using Wrong AppCompat Method"
                },
                "fullDescription": {
                  "text": "Using Wrong AppCompat Method When using the appcompat library, there are some methods you should be calling instead of the normal ones; for example, 'getSupportActionBar()' instead of 'getActionBar()'. This lint check looks for calls to the wrong method. Issue id: AppCompatMethod https://developer.android.com/topic/libraries/support-library/",
                  "markdown": "Using Wrong AppCompat Method  \n\nWhen using the appcompat library, there are some methods you should be calling instead of the normal ones; for example, `getSupportActionBar()` instead of `getActionBar()`. This lint check looks for calls to the wrong method.  \n\nIssue id: AppCompatMethod  \n\n<https://developer.android.com/topic/libraries/support-library/>"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "AndroidLintAppCompatMethod",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Android Lint: Correctness",
                      "index": 5,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "AndroidLintIconNoDpi",
                "shortDescription": {
                  "text": "Icon appears in both -nodpi and dpi folders"
                },
                "fullDescription": {
                  "text": "Icon appears in both '-nodpi' and dpi folders Bitmaps that appear in 'drawable-nodpi' folders will not be scaled by the Android framework. If a drawable resource of the same name appears both in a '-nodpi' folder as well as a dpi folder such as 'drawable-hdpi', then the behavior is ambiguous and probably not intentional. Delete one or the other, or use different names for the icons. Issue id: IconNoDpi",
                  "markdown": "Icon appears in both `-nodpi` and dpi folders  \n\nBitmaps that appear in `drawable-nodpi` folders will not be scaled by the Android framework. If a drawable resource of the same name appears **both** in a `-nodpi` folder as well as a dpi folder such as `drawable-hdpi`, then the behavior is ambiguous and probably not intentional. Delete one or the other, or use different names for the icons.  \n\nIssue id: IconNoDpi"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "AndroidLintIconNoDpi",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Android Lint: Usability",
                      "index": 42,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "AndroidLintInstantiatable",
                "shortDescription": {
                  "text": "Registered class is not instantiatable"
                },
                "fullDescription": {
                  "text": "Registered class is not instantiatable Activities, services, broadcast receivers etc. registered in the manifest file (or for custom views, in a layout file) must be \"instantiatable\" by the system, which means that the class must be public, it must have an empty public constructor, and if it's an inner class, it must be a static inner class. If you use a custom 'AppComponentFactory' to instantiate app components yourself, consider disabling this Lint issue in order to avoid false positives. Issue id: Instantiatable",
                  "markdown": "Registered class is not instantiatable  \n\nActivities, services, broadcast receivers etc. registered in the manifest file (or for custom views, in a layout file) must be \"instantiatable\" by the system, which means that the class must be public, it must have an empty public constructor, and if it's an inner class, it must be a static inner class.  \n\nIf you use a custom `AppComponentFactory` to instantiate app components yourself, consider disabling this Lint issue in order to avoid false positives.  \n\nIssue id: Instantiatable"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "error",
                  "parameters": {
                    "suppressToolId": "AndroidLintInstantiatable",
                    "ideaSeverity": "ERROR",
                    "qodanaSeverity": "Critical"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Android Lint: Correctness",
                      "index": 5,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "AndroidLintStaticFieldLeak",
                "shortDescription": {
                  "text": "Static Field Leaks"
                },
                "fullDescription": {
                  "text": "Static Field Leaks A static field will leak contexts. Non-static inner classes have an implicit reference to their outer class. If that outer class is for example a 'Fragment' or 'Activity', then this reference means that the long-running handler/loader/task will hold a reference to the activity which prevents it from getting garbage collected. Similarly, direct field references to activities and fragments from these longer running instances can cause leaks. ViewModel classes should never point to Views or non-application Contexts. Issue id: StaticFieldLeak",
                  "markdown": "Static Field Leaks  \n\nA static field will leak contexts.  \n\nNon-static inner classes have an implicit reference to their outer class. If that outer class is for example a `Fragment` or `Activity`, then this reference means that the long-running handler/loader/task will hold a reference to the activity which prevents it from getting garbage collected.  \n\nSimilarly, direct field references to activities and fragments from these longer running instances can cause leaks.  \n\nViewModel classes should never point to Views or non-application Contexts.  \n\nIssue id: StaticFieldLeak"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "AndroidLintStaticFieldLeak",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Android Lint: Performance",
                      "index": 14,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "AndroidLintPublicKeyCredential",
                "shortDescription": {
                  "text": "Creating public key credential"
                },
                "fullDescription": {
                  "text": "Creating public key credential Credential Manager API supports creating public key credential (Passkeys) starting Android 9 or higher. Please check for the Android version before calling the method. Issue id: PublicKeyCredential",
                  "markdown": "Creating public key credential  \n\nCredential Manager API supports creating public key credential (Passkeys) starting Android 9 or higher. Please check for the Android version before calling the method.  \n\nIssue id: PublicKeyCredential"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "AndroidLintPublicKeyCredential",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Android Lint: Correctness",
                      "index": 5,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "AndroidLintAnnotationProcessorOnCompilePath",
                "shortDescription": {
                  "text": "Annotation Processor on Compile Classpath"
                },
                "fullDescription": {
                  "text": "Annotation Processor on Compile Classpath This dependency is identified as an annotation processor. Consider adding it to the processor path using 'annotationProcessor' instead of including it to the compile path. Issue id: AnnotationProcessorOnCompilePath",
                  "markdown": "Annotation Processor on Compile Classpath  \n\nThis dependency is identified as an annotation processor. Consider adding it to the processor path using `annotationProcessor` instead of including it to the compile path.  \n\nIssue id: AnnotationProcessorOnCompilePath"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "AndroidLintAnnotationProcessorOnCompilePath",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Android Lint: Performance",
                      "index": 14,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "AndroidLintTileProviderPermissions",
                "shortDescription": {
                  "text": "TileProvider does not set permission"
                },
                "fullDescription": {
                  "text": "TileProvider does not set permission TileProviders should require the 'com.google.android.wearable.permission.BIND_TILE_PROVIDER' permission to prevent arbitrary apps from binding to it. Issue id: TileProviderPermissions",
                  "markdown": "TileProvider does not set permission  \n\nTileProviders should require the `com.google.android.wearable.permission.BIND_TILE_PROVIDER` permission to prevent arbitrary apps from binding to it.  \n\nIssue id: TileProviderPermissions"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "AndroidLintTileProviderPermissions",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Android Lint: Security",
                      "index": 44,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "AndroidLintImplicitSamInstance",
                "shortDescription": {
                  "text": "Implicit SAM Instances"
                },
                "fullDescription": {
                  "text": "Implicit SAM Instances Kotlin's support for SAM (single accessor method) interfaces lets you pass a lambda to the interface. This will create a new instance on the fly even though there is no explicit constructor call. If you pass one of these lambdas or method references into a method which (for example) stores or compares the object identity, unexpected results may happen. Issue id: ImplicitSamInstance",
                  "markdown": "Implicit SAM Instances  \n\nKotlin's support for SAM (single accessor method) interfaces lets you pass a lambda to the interface. This will create a new instance on the fly even though there is no explicit constructor call. If you pass one of these lambdas or method references into a method which (for example) stores or compares the object identity, unexpected results may happen.  \n\nIssue id: ImplicitSamInstance"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "AndroidLintImplicitSamInstance",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Android Lint: Correctness",
                      "index": 5,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "AndroidLintUselessParent",
                "shortDescription": {
                  "text": "Unnecessary parent layout"
                },
                "fullDescription": {
                  "text": "Unnecessary parent layout A layout with children that has no siblings, is not a scrollview or a root layout, and does not have a background, can be removed and have its children moved directly into the parent for a flatter and more efficient layout hierarchy. Issue id: UselessParent",
                  "markdown": "Unnecessary parent layout  \n\nA layout with children that has no siblings, is not a scrollview or a root layout, and does not have a background, can be removed and have its children moved directly into the parent for a flatter and more efficient layout hierarchy.  \n\nIssue id: UselessParent"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "AndroidLintUselessParent",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Android Lint: Performance",
                      "index": 14,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "AndroidLintOverrideAbstract",
                "shortDescription": {
                  "text": "Not overriding abstract methods on older platforms"
                },
                "fullDescription": {
                  "text": "Not overriding abstract methods on older platforms To improve the usability of some APIs, some methods that used to be 'abstract' have been made concrete by adding default implementations. This means that when compiling with new versions of the SDK, your code does not have to override these methods. However, if your code is also targeting older versions of the platform where these methods were still 'abstract', the code will crash. You must override all methods that used to be abstract in any versions targeted by your application's 'minSdkVersion'. Issue id: OverrideAbstract",
                  "markdown": "Not overriding abstract methods on older platforms  \n\nTo improve the usability of some APIs, some methods that used to be `abstract` have been made concrete by adding default implementations. This means that when compiling with new versions of the SDK, your code does not have to override these methods.  \n\nHowever, if your code is also targeting older versions of the platform where these methods were still `abstract`, the code will crash. You must override all methods that used to be abstract in any versions targeted by your application's `minSdkVersion`.  \n\nIssue id: OverrideAbstract"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "error",
                  "parameters": {
                    "suppressToolId": "AndroidLintOverrideAbstract",
                    "ideaSeverity": "ERROR",
                    "qodanaSeverity": "Critical"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Android Lint: Correctness",
                      "index": 5,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "AndroidLintUnknownId",
                "shortDescription": {
                  "text": "Reference to an unknown id"
                },
                "fullDescription": {
                  "text": "Reference to an unknown id The '@+id/' syntax refers to an existing id, or creates a new one if it has not already been defined elsewhere. However, this means that if you have a typo in your reference, or if the referred view no longer exists, you do not get a warning since the id will be created on demand. This check catches errors where you have renamed an id without updating all of the references to it. Issue id: UnknownId",
                  "markdown": "Reference to an unknown id  \n\nThe `@+id/` syntax refers to an existing id, or creates a new one if it has not already been defined elsewhere. However, this means that if you have a typo in your reference, or if the referred view no longer exists, you do not get a warning since the id will be created on demand. This check catches errors where you have renamed an id without updating all of the references to it.  \n\nIssue id: UnknownId"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "error",
                  "parameters": {
                    "suppressToolId": "AndroidLintUnknownId",
                    "ideaSeverity": "ERROR",
                    "qodanaSeverity": "Critical"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Android Lint: Correctness",
                      "index": 5,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "AndroidLintGradleDynamicVersion",
                "shortDescription": {
                  "text": "Gradle Dynamic Version"
                },
                "fullDescription": {
                  "text": "Gradle Dynamic Version Using '+' in dependencies lets you automatically pick up the latest available version rather than a specific, named version. However, this is not recommended; your builds are not repeatable; you may have tested with a slightly different version than what the build server used. (Using a dynamic version as the major version number is more problematic than using it in the minor version position.) Issue id: GradleDynamicVersion",
                  "markdown": "Gradle Dynamic Version  \n\nUsing `+` in dependencies lets you automatically pick up the latest available version rather than a specific, named version. However, this is not recommended; your builds are not repeatable; you may have tested with a slightly different version than what the build server used. (Using a dynamic version as the major version number is more problematic than using it in the minor version position.)  \n\nIssue id: GradleDynamicVersion"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "AndroidLintGradleDynamicVersion",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Android Lint: Correctness",
                      "index": 5,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "AndroidLintBrokenIterator",
                "shortDescription": {
                  "text": "Broken Iterator"
                },
                "fullDescription": {
                  "text": "Broken Iterator For LinkedHashMap: The spliterators returned by 'LinkedHashMap' in Android Nougat (API levels 24 and 25) use the wrong order (inconsistent with the iterators, which use the correct order), despite reporting 'Spliterator.ORDERED'. You may use the following code fragments to obtain a correctly ordered 'Spliterator' on API level 24 and 25: For a Collection view 'c = lhm.entrySet()', 'c = lhm.keySet()' or 'c = lhm.values()', use 'java.util.Spliterators.spliterator(c, c.spliterator().characteristics())' instead of 'c.spliterator()'. Instead of 'c.stream()' or 'c.parallelStream()', use 'java.util.stream.StreamSupport.stream(spliterator, false)' to construct a (nonparallel) Stream from such a 'Spliterator'. For Vector: The 'listIterator()' returned for a 'Vector' has a broken 'add()' implementation on Android N (API level 24). Consider switching to 'ArrayList' and if necessary adding synchronization. Issue id: BrokenIterator https://developer.android.com/reference/java/util/LinkedHashMap",
                  "markdown": "Broken Iterator  \n\n**For LinkedHashMap:**   \n\nThe spliterators returned by `LinkedHashMap` in Android Nougat (API levels 24 and 25) use the wrong order (inconsistent with the iterators, which use the correct order), despite reporting `Spliterator.ORDERED`. You may use the following code fragments to obtain a correctly ordered `Spliterator` on API level 24 and 25:  \n\nFor a Collection view `c = lhm.entrySet()`, `c = lhm.keySet()` or `c = lhm.values()`, use `java.util.Spliterators.spliterator(c, c.spliterator().characteristics())` instead of `c.spliterator()`.  \n\nInstead of `c.stream()` or `c.parallelStream()`, use `java.util.stream.StreamSupport.stream(spliterator, false)` to construct a (nonparallel) Stream from such a `Spliterator`.  \n\n**For Vector:**   \n\nThe `listIterator()` returned for a `Vector` has a broken `add()` implementation on Android N (API level 24). Consider switching to `ArrayList` and if necessary adding synchronization.  \n\nIssue id: BrokenIterator  \n\n<https://developer.android.com/reference/java/util/LinkedHashMap>"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "AndroidLintBrokenIterator",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Android Lint: Correctness",
                      "index": 5,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "AndroidLintMissingId",
                "shortDescription": {
                  "text": "Fragments should specify an id or tag"
                },
                "fullDescription": {
                  "text": "Fragments should specify an 'id' or 'tag' If you do not specify an 'android:id' or an 'android:tag' attribute on a '<fragment>' element, then if the activity is restarted (for example for an orientation rotation) you may lose state. From the fragment documentation: \"Each fragment requires a unique identifier that the system can use to restore the fragment if the activity is restarted (and which you can use to capture the fragment to perform transactions, such as remove it). * Supply the 'android:id' attribute with a unique ID. * Supply the 'android:tag' attribute with a unique string. If you provide neither of the previous two, the system uses the ID of the container view. Issue id: MissingId https://developer.android.com/guide/components/fragments.html",
                  "markdown": "Fragments should specify an `id` or `tag`  \n\nIf you do not specify an `android:id` or an `android:tag` attribute on a `<fragment>` element, then if the activity is restarted (for example for an orientation rotation) you may lose state. From the fragment documentation:  \n\n\"Each fragment requires a unique identifier that the system can use to restore the fragment if the activity is restarted (and which you can use to capture the fragment to perform transactions, such as remove it).  \n\n\\* Supply the `android:id` attribute with a unique ID.  \n\\* Supply the `android:tag` attribute with a unique string.  \n\nIf you provide neither of the previous two, the system uses the ID of the container view.  \n\nIssue id: MissingId  \n\n<https://developer.android.com/guide/components/fragments.html>"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "AndroidLintMissingId",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Android Lint: Correctness",
                      "index": 5,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "AndroidLintMultipleUsesSdk",
                "shortDescription": {
                  "text": "Multiple <uses-sdk> elements in the manifest"
                },
                "fullDescription": {
                  "text": "Multiple '<uses-sdk>' elements in the manifest The '<uses-sdk>' element should appear just once; the tools will not merge the contents of all the elements so if you split up the attributes across multiple elements, only one of them will take effect. To fix this, just merge all the attributes from the various elements into a single <uses-sdk> element. Issue id: MultipleUsesSdk https://developer.android.com/guide/topics/manifest/uses-sdk-element.html",
                  "markdown": "Multiple `<uses-sdk>` elements in the manifest  \n\nThe `<uses-sdk>` element should appear just once; the tools will **not** merge the contents of all the elements so if you split up the attributes across multiple elements, only one of them will take effect. To fix this, just merge all the attributes from the various elements into a single \\<uses-sdk\\> element.  \n\nIssue id: MultipleUsesSdk  \n\n<https://developer.android.com/guide/topics/manifest/uses-sdk-element.html>"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "error",
                  "parameters": {
                    "suppressToolId": "AndroidLintMultipleUsesSdk",
                    "ideaSeverity": "ERROR",
                    "qodanaSeverity": "Critical"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Android Lint: Correctness",
                      "index": 5,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "AndroidLintAppLinkUrlError",
                "shortDescription": {
                  "text": "URL not supported by app for Firebase App Indexing"
                },
                "fullDescription": {
                  "text": "URI invalid Ensure your intent filter has the documented elements for deep links, web links, or Android App Links. Issue id: AppLinkUrlError https://developer.android.com/training/app-links https://g.co/AppIndexing/AndroidStudio",
                  "markdown": "URI invalid  \n\nEnsure your intent filter has the documented elements for deep links, web links, or Android App Links.  \n\nIssue id: AppLinkUrlError  \n\n<https://developer.android.com/training/app-links>  \n<https://g.co/AppIndexing/AndroidStudio>"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "error",
                  "parameters": {
                    "suppressToolId": "AndroidLintAppLinkUrlError",
                    "ideaSeverity": "ERROR",
                    "qodanaSeverity": "Critical"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Android Lint: Usability",
                      "index": 42,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "AndroidLintIconDuplicates",
                "shortDescription": {
                  "text": "Duplicated icons under different names"
                },
                "fullDescription": {
                  "text": "Duplicated icons under different names If an icon is repeated under different names, you can consolidate and just use one of the icons and delete the others to make your application smaller. However, duplicated icons usually are not intentional and can sometimes point to icons that were accidentally overwritten or accidentally not updated. Issue id: IconDuplicates",
                  "markdown": "Duplicated icons under different names  \n\nIf an icon is repeated under different names, you can consolidate and just use one of the icons and delete the others to make your application smaller. However, duplicated icons usually are not intentional and can sometimes point to icons that were accidentally overwritten or accidentally not updated.  \n\nIssue id: IconDuplicates"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "AndroidLintIconDuplicates",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Android Lint: Usability",
                      "index": 42,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "AndroidLintWakelockTimeout",
                "shortDescription": {
                  "text": "Using wakeLock without timeout"
                },
                "fullDescription": {
                  "text": "Using wakeLock without timeout Wakelocks have two acquire methods: one with a timeout, and one without. You should generally always use the one with a timeout. A typical timeout is 10 minutes. If the task takes longer than it is critical that it happens (i.e. can't use 'JobScheduler') then maybe they should consider a foreground service instead (which is a stronger run guarantee and lets the user know something long/important is happening). Issue id: WakelockTimeout",
                  "markdown": "Using wakeLock without timeout  \n\nWakelocks have two acquire methods: one with a timeout, and one without. You should generally always use the one with a timeout. A typical timeout is 10 minutes. If the task takes longer than it is critical that it happens (i.e. can't use `JobScheduler`) then maybe they should consider a foreground service instead (which is a stronger run guarantee and lets the user know something long/important is happening).  \n\nIssue id: WakelockTimeout"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "AndroidLintWakelockTimeout",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Android Lint: Performance",
                      "index": 14,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "AndroidLintDiffUtilEquals",
                "shortDescription": {
                  "text": "Suspicious DiffUtil Equality"
                },
                "fullDescription": {
                  "text": "Suspicious DiffUtil Equality 'areContentsTheSame' is used by 'DiffUtil' to produce diffs. If the method is implemented incorrectly, such as using identity equals instead of equals, or calling equals on a class that has not implemented it, weird visual artifacts can occur. Issue id: DiffUtilEquals https://issuetracker.google.com/116789824",
                  "markdown": "Suspicious DiffUtil Equality  \n\n`areContentsTheSame` is used by `DiffUtil` to produce diffs. If the method is implemented incorrectly, such as using identity equals instead of equals, or calling equals on a class that has not implemented it, weird visual artifacts can occur.  \n\nIssue id: DiffUtilEquals  \n\n<https://issuetracker.google.com/116789824>"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "error",
                  "parameters": {
                    "suppressToolId": "AndroidLintDiffUtilEquals",
                    "ideaSeverity": "ERROR",
                    "qodanaSeverity": "Critical"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Android Lint: Correctness",
                      "index": 5,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "AndroidLintForegroundServicePermission",
                "shortDescription": {
                  "text": "ForegroundServicePermission Issues"
                },
                "fullDescription": {
                  "text": "Missing permissions required by foregroundServiceType For targetSdkVersion >= 34, each 'foregroundServiceType' listed in the '<service>' element requires specific sets of permissions to be declared in the manifest. If permissions are missing, then when the foreground service is started with a 'foregroundServiceType' that has missing permissions, a 'SecurityException' will be thrown. Issue id: ForegroundServicePermission",
                  "markdown": "Missing permissions required by foregroundServiceType  \n\nFor targetSdkVersion \\>= 34, each `foregroundServiceType` listed in the `<service>` element requires specific sets of permissions to be declared in the manifest. If permissions are missing, then when the foreground service is started with a `foregroundServiceType` that has missing permissions, a `SecurityException` will be thrown.  \n\nIssue id: ForegroundServicePermission"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "error",
                  "parameters": {
                    "suppressToolId": "AndroidLintForegroundServicePermission",
                    "ideaSeverity": "ERROR",
                    "qodanaSeverity": "Critical"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Android Lint: Correctness",
                      "index": 5,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "AndroidLintUnsafeProtectedBroadcastReceiver",
                "shortDescription": {
                  "text": "Unsafe Protected BroadcastReceiver"
                },
                "fullDescription": {
                  "text": "Unsafe Protected 'BroadcastReceiver' `BroadcastReceiver`s that declare an intent-filter for a protected-broadcast action string must check that the received intent's action string matches the expected value, otherwise it is possible for malicious actors to spoof intents. Issue id: UnsafeProtectedBroadcastReceiver https://goo.gle/UnsafeProtectedBroadcastReceiver",
                  "markdown": "Unsafe Protected `BroadcastReceiver`  \n\n\\`BroadcastReceiver\\`s that declare an intent-filter for a protected-broadcast action string must check that the received intent's action string matches the expected value, otherwise it is possible for malicious actors to spoof intents.  \n\nIssue id: UnsafeProtectedBroadcastReceiver  \n\n<https://goo.gle/UnsafeProtectedBroadcastReceiver>"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "AndroidLintUnsafeProtectedBroadcastReceiver",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Android Lint: Security",
                      "index": 44,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "AndroidLintMangledCRLF",
                "shortDescription": {
                  "text": "Mangled file line endings"
                },
                "fullDescription": {
                  "text": "Mangled file line endings On Windows, line endings are typically recorded as carriage return plus newline: \\r\\n. This detector looks for invalid line endings with repeated carriage return characters (without newlines). Previous versions of the ADT plugin could accidentally introduce these into the file, and when editing the file, the editor could produce confusing visual artifacts. Issue id: MangledCRLF https://bugs.eclipse.org/bugs/show_bug.cgi?id=375421",
                  "markdown": "Mangled file line endings  \n\nOn Windows, line endings are typically recorded as carriage return plus newline: \\\\r\\\\n.  \n\nThis detector looks for invalid line endings with repeated carriage return characters (without newlines). Previous versions of the ADT plugin could accidentally introduce these into the file, and when editing the file, the editor could produce confusing visual artifacts.  \n\nIssue id: MangledCRLF  \n\n<https://bugs.eclipse.org/bugs/show_bug.cgi?id=375421>"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "error",
                  "parameters": {
                    "suppressToolId": "AndroidLintMangledCRLF",
                    "ideaSeverity": "ERROR",
                    "qodanaSeverity": "Critical"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Android Lint: Correctness",
                      "index": 5,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "AndroidLintResourceCycle",
                "shortDescription": {
                  "text": "Cycle in resource definitions"
                },
                "fullDescription": {
                  "text": "Cycle in resource definitions There should be no cycles in resource definitions as this can lead to runtime exceptions. Issue id: ResourceCycle",
                  "markdown": "Cycle in resource definitions  \n\nThere should be no cycles in resource definitions as this can lead to runtime exceptions.  \n\nIssue id: ResourceCycle"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "error",
                  "parameters": {
                    "suppressToolId": "AndroidLintResourceCycle",
                    "ideaSeverity": "ERROR",
                    "qodanaSeverity": "Critical"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Android Lint: Correctness",
                      "index": 5,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "ShrinkerArrayType",
                "shortDescription": {
                  "text": "Invalid using of array type"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "error",
                  "parameters": {
                    "suppressToolId": "ShrinkerArrayType",
                    "ideaSeverity": "ERROR",
                    "qodanaSeverity": "Critical"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Android/Shrinker",
                      "index": 84,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "AndroidLintTextViewEdits",
                "shortDescription": {
                  "text": "TextView should probably be an EditText instead"
                },
                "fullDescription": {
                  "text": "TextView should probably be an EditText instead Using a '<TextView>' to input text is generally an error, you should be using '<EditText>' instead. 'EditText' is a subclass of 'TextView', and some of the editing support is provided by 'TextView', so it's possible to set some input-related properties on a 'TextView'. However, using a 'TextView' along with input attributes is usually a cut & paste error. To input text you should be using '<EditText>'. This check also checks subclasses of 'TextView', such as 'Button' and 'CheckBox', since these have the same issue: they should not be used with editable attributes. Issue id: TextViewEdits",
                  "markdown": "TextView should probably be an EditText instead  \n\nUsing a `<TextView>` to input text is generally an error, you should be using `<EditText>` instead. `EditText` is a subclass of `TextView`, and some of the editing support is provided by `TextView`, so it's possible to set some input-related properties on a `TextView`. However, using a `TextView` along with input attributes is usually a cut \\& paste error. To input text you should be using `<EditText>`.  \n\nThis check also checks subclasses of `TextView`, such as `Button` and `CheckBox`, since these have the same issue: they should not be used with editable attributes.  \n\nIssue id: TextViewEdits"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "AndroidLintTextViewEdits",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Android Lint: Correctness",
                      "index": 5,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "AndroidLintNotConstructor",
                "shortDescription": {
                  "text": "Not a Constructor"
                },
                "fullDescription": {
                  "text": "Not a Constructor This check catches methods that look like they were intended to be constructors, but aren't. Issue id: NotConstructor",
                  "markdown": "Not a Constructor  \n\nThis check catches methods that look like they were intended to be constructors, but aren't.  \n\nIssue id: NotConstructor"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "AndroidLintNotConstructor",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Android Lint: Correctness",
                      "index": 5,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "AndroidLintRequiresFeature",
                "shortDescription": {
                  "text": "Requires Feature"
                },
                "fullDescription": {
                  "text": "Requires Feature Some APIs require optional features to be present. This check makes sure that calls to these APIs are surrounded by a check which enforces this. Issue id: RequiresFeature",
                  "markdown": "Requires Feature  \n\nSome APIs require optional features to be present. This check makes sure that calls to these APIs are surrounded by a check which enforces this.  \n\nIssue id: RequiresFeature"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "AndroidLintRequiresFeature",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Android Lint: Correctness",
                      "index": 5,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "AndroidLintMotionSceneFileValidationError",
                "shortDescription": {
                  "text": "Validation errors in MotionScene files"
                },
                "fullDescription": {
                  "text": "Validation errors in 'MotionScene' files A motion scene file specifies the animations used in a 'MotionLayout'. This check performs various serious correctness checks in a motion scene file. Issue id: MotionSceneFileValidationError",
                  "markdown": "Validation errors in `MotionScene` files  \n\nA motion scene file specifies the animations used in a `MotionLayout`. This check performs various serious correctness checks in a motion scene file.  \n\nIssue id: MotionSceneFileValidationError"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "error",
                  "parameters": {
                    "suppressToolId": "AndroidLintMotionSceneFileValidationError",
                    "ideaSeverity": "ERROR",
                    "qodanaSeverity": "Critical"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Android Lint: Correctness",
                      "index": 5,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "AndroidLintLocalSuppress",
                "shortDescription": {
                  "text": "@SuppressLint on invalid element"
                },
                "fullDescription": {
                  "text": "@SuppressLint on invalid element The '@SuppressAnnotation' is used to suppress Lint warnings in Java files. However, while many lint checks analyzes the Java source code, where they can find annotations on (for example) local variables, some checks are analyzing the '.class' files. And in class files, annotations only appear on classes, fields and methods. Annotations placed on local variables disappear. If you attempt to suppress a lint error for a class-file based lint check, the suppress annotation not work. You must move the annotation out to the surrounding method. Issue id: LocalSuppress",
                  "markdown": "@SuppressLint on invalid element  \n\nThe `@SuppressAnnotation` is used to suppress Lint warnings in Java files. However, while many lint checks analyzes the Java source code, where they can find annotations on (for example) local variables, some checks are analyzing the `.class` files. And in class files, annotations only appear on classes, fields and methods. Annotations placed on local variables disappear. If you attempt to suppress a lint error for a class-file based lint check, the suppress annotation not work. You must move the annotation out to the surrounding method.  \n\nIssue id: LocalSuppress"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "error",
                  "parameters": {
                    "suppressToolId": "AndroidLintLocalSuppress",
                    "ideaSeverity": "ERROR",
                    "qodanaSeverity": "Critical"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Android Lint: Correctness",
                      "index": 5,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "AndroidLintOutdatedLibrary",
                "shortDescription": {
                  "text": "Outdated Library"
                },
                "fullDescription": {
                  "text": "Outdated Library Your app is using an outdated version of a library. This may cause violations of Google Play policies (see https://play.google.com/about/monetization-ads/ads/) and/or may affect your app’s visibility on the Play Store. Please try updating your app with an updated version of this library, or remove it from your app. Issue id: OutdatedLibrary https://developer.android.com/distribute/sdk-index",
                  "markdown": "Outdated Library  \n\nYour app is using an outdated version of a library. This may cause violations of Google Play policies (see <https://play.google.com/about/monetization-ads/ads/>) and/or may affect your app's visibility on the Play Store.  \n\nPlease try updating your app with an updated version of this library, or remove it from your app.  \n\nIssue id: OutdatedLibrary  \n\n<https://developer.android.com/distribute/sdk-index>"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "AndroidLintOutdatedLibrary",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Android Lint: Compliance",
                      "index": 134,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "AndroidLintAdapterViewChildren",
                "shortDescription": {
                  "text": "AdapterView cannot have children in XML"
                },
                "fullDescription": {
                  "text": "'AdapterView' cannot have children in XML An 'AdapterView' such as a `ListView`s must be configured with data from Java code, such as a 'ListAdapter'. Issue id: AdapterViewChildren https://developer.android.com/reference/android/widget/AdapterView.html",
                  "markdown": "`AdapterView` cannot have children in XML  \n\nAn `AdapterView` such as a \\`ListView\\`s must be configured with data from Java code, such as a `ListAdapter`.  \n\nIssue id: AdapterViewChildren  \n\n<https://developer.android.com/reference/android/widget/AdapterView.html>"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "AndroidLintAdapterViewChildren",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Android Lint: Correctness",
                      "index": 5,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "AndroidLintSQLiteString",
                "shortDescription": {
                  "text": "Using STRING instead of TEXT"
                },
                "fullDescription": {
                  "text": "Using STRING instead of TEXT In SQLite, any column can store any data type; the declared type for a column is more of a hint as to what the data should be cast to when stored. There are many ways to store a string. 'TEXT', 'VARCHAR', 'CHARACTER' and 'CLOB' are string types, but `STRING` is not. Columns defined as STRING are actually numeric. If you try to store a value in a numeric column, SQLite will try to cast it to a float or an integer before storing. If it can't, it will just store it as a string. This can lead to some subtle bugs. For example, when SQLite encounters a string like '1234567e1234', it will parse it as a float, but the result will be out of range for floating point numbers, so 'Inf' will be stored! Similarly, strings that look like integers will lose leading zeroes. To fix this, you can change your schema to use a 'TEXT' type instead. Issue id: SQLiteString https://www.sqlite.org/datatype3.html",
                  "markdown": "Using STRING instead of TEXT  \n\nIn SQLite, any column can store any data type; the declared type for a column is more of a hint as to what the data should be cast to when stored.  \n\nThere are many ways to store a string. `TEXT`, `VARCHAR`, `CHARACTER` and `CLOB` are string types, **but \\`STRING\\` is not** . Columns defined as STRING are actually numeric.  \n\nIf you try to store a value in a numeric column, SQLite will try to cast it to a float or an integer before storing. If it can't, it will just store it as a string.  \n\nThis can lead to some subtle bugs. For example, when SQLite encounters a string like `1234567e1234`, it will parse it as a float, but the result will be out of range for floating point numbers, so `Inf` will be stored! Similarly, strings that look like integers will lose leading zeroes.  \n\nTo fix this, you can change your schema to use a `TEXT` type instead.  \n\nIssue id: SQLiteString  \n\n<https://www.sqlite.org/datatype3.html>"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "AndroidLintSQLiteString",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Android Lint: Correctness",
                      "index": 5,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "AndroidLintQueryPermissionsNeeded",
                "shortDescription": {
                  "text": "Using APIs affected by query permissions"
                },
                "fullDescription": {
                  "text": "Using APIs affected by query permissions Apps that target Android 11 cannot query or interact with other installed apps by default. If you need to query or interact with other installed apps, you may need to add a '<queries>' declaration in your manifest. As a corollary, the methods 'PackageManager#getInstalledPackages' and 'PackageManager#getInstalledApplications' will no longer return information about all installed apps. To query specific apps or types of apps, you can use methods like 'PackageManager#getPackageInfo' or 'PackageManager#queryIntentActivities'. Issue id: QueryPermissionsNeeded https://g.co/dev/packagevisibility",
                  "markdown": "Using APIs affected by query permissions  \n\nApps that target Android 11 cannot query or interact with other installed apps by default. If you need to query or interact with other installed apps, you may need to add a `<queries>` declaration in your manifest.  \n\nAs a corollary, the methods `PackageManager#getInstalledPackages` and `PackageManager#getInstalledApplications` will no longer return information about all installed apps. To query specific apps or types of apps, you can use methods like `PackageManager#getPackageInfo` or `PackageManager#queryIntentActivities`.  \n\nIssue id: QueryPermissionsNeeded  \n\n<https://g.co/dev/packagevisibility>"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "AndroidLintQueryPermissionsNeeded",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Android Lint: Correctness",
                      "index": 5,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "AndroidLintUseTomlInstead",
                "shortDescription": {
                  "text": "Use TOML Version Catalog Instead"
                },
                "fullDescription": {
                  "text": "Use TOML Version Catalog Instead If your project is using a 'libs.versions.toml' file, you should place all Gradle dependencies in the TOML file. This lint check looks for version declarations outside of the TOML file and suggests moving them (and in the IDE, provides a quickfix to performing the operation automatically). Issue id: UseTomlInstead",
                  "markdown": "Use TOML Version Catalog Instead  \n\nIf your project is using a `libs.versions.toml` file, you should place all Gradle dependencies in the TOML file. This lint check looks for version declarations outside of the TOML file and suggests moving them (and in the IDE, provides a quickfix to performing the operation automatically).  \n\nIssue id: UseTomlInstead"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "AndroidLintUseTomlInstead",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Android Lint: Productivity",
                      "index": 103,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "AndroidLintNotificationTrampoline",
                "shortDescription": {
                  "text": "Notification Trampolines"
                },
                "fullDescription": {
                  "text": "Notification Trampolines Activities should not be launched indirectly from a notification via an intermediate 'BroadcastReceiver' or 'Service'. This can lead to significant lags in some scenarios, and is forbidden if 'targetSdkVersion' is set to the API level for Android 12 or higher. To fix this, launch the 'Activity' directly from the notification. Issue id: NotificationTrampoline",
                  "markdown": "Notification Trampolines  \n\nActivities should not be launched indirectly from a notification via an intermediate `BroadcastReceiver` or `Service`. This can lead to significant lags in some scenarios, and is forbidden if `targetSdkVersion` is set to the API level for Android 12 or higher.  \n\nTo fix this, launch the `Activity` directly from the notification.  \n\nIssue id: NotificationTrampoline"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "error",
                  "parameters": {
                    "suppressToolId": "AndroidLintNotificationTrampoline",
                    "ideaSeverity": "ERROR",
                    "qodanaSeverity": "Critical"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Android Lint: Performance",
                      "index": 14,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "AndroidLintCustomSplashScreen",
                "shortDescription": {
                  "text": "Application-defined Launch Screen"
                },
                "fullDescription": {
                  "text": "Application-defined Launch Screen Starting in Android 12 (API 31+), the application's Launch Screen is provided by the system and the application should not create its own, otherwise the user will see two splashscreens. Please check the 'SplashScreen' class to check how the Splash Screen can be controlled and customized. Issue id: CustomSplashScreen https://developer.android.com/guide/topics/ui/splash-screen",
                  "markdown": "Application-defined Launch Screen  \n\nStarting in Android 12 (API 31+), the application's Launch Screen is provided by the system and the application should not create its own, otherwise the user will see two splashscreens. Please check the `SplashScreen` class to check how the Splash Screen can be controlled and customized.  \n\nIssue id: CustomSplashScreen  \n\n<https://developer.android.com/guide/topics/ui/splash-screen>"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "AndroidLintCustomSplashScreen",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Android Lint: Correctness",
                      "index": 5,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "AndroidLintMotionLayoutMissingId",
                "shortDescription": {
                  "text": "Views inside MotionLayout require an android:id"
                },
                "fullDescription": {
                  "text": "Views inside 'MotionLayout' require an 'android:id' Views inside 'MotionLayout' require an 'android:id'. Issue id: MotionLayoutMissingId",
                  "markdown": "Views inside `MotionLayout` require an `android:id`  \n\nViews inside `MotionLayout` require an `android:id`.  \n\nIssue id: MotionLayoutMissingId"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "error",
                  "parameters": {
                    "suppressToolId": "AndroidLintMotionLayoutMissingId",
                    "ideaSeverity": "ERROR",
                    "qodanaSeverity": "Critical"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Android Lint: Correctness",
                      "index": 5,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "AndroidLintStopShip",
                "shortDescription": {
                  "text": "Code contains STOPSHIP marker"
                },
                "fullDescription": {
                  "text": "Code contains 'STOPSHIP' marker Using the comment '// STOPSHIP' can be used to flag code that is incomplete but checked in. This comment marker can be used to indicate that the code should not be shipped until the issue is addressed, and lint will look for these. In Gradle projects, this is only checked for non-debug (release) builds. In Kotlin, the 'TODO()' method is also treated as a stop ship marker; you can use it to make incomplete code compile, but it will throw an exception at runtime and therefore should be fixed before shipping releases. Issue id: StopShip",
                  "markdown": "Code contains `STOPSHIP` marker  \n\nUsing the comment `// STOPSHIP` can be used to flag code that is incomplete but checked in. This comment marker can be used to indicate that the code should not be shipped until the issue is addressed, and lint will look for these. In Gradle projects, this is only checked for non-debug (release) builds.  \n\nIn Kotlin, the `TODO()` method is also treated as a stop ship marker; you can use it to make incomplete code compile, but it will throw an exception at runtime and therefore should be fixed before shipping releases.  \n\nIssue id: StopShip"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "error",
                  "parameters": {
                    "suppressToolId": "AndroidLintStopShip",
                    "ideaSeverity": "ERROR",
                    "qodanaSeverity": "Critical"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Android Lint: Correctness",
                      "index": 5,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "AndroidLintSpUsage",
                "shortDescription": {
                  "text": "Using dp instead of sp for text sizes"
                },
                "fullDescription": {
                  "text": "Using 'dp' instead of 'sp' for text sizes When setting text sizes, you should normally use 'sp', or \"scale-independent pixels\". This is like the 'dp' unit, but it is also scaled by the user's font size preference. It is recommend you use this unit when specifying font sizes, so they will be adjusted for both the screen density and the user's preference. There are cases where you might need to use 'dp'; typically this happens when the text is in a container with a specific dp-size. This will prevent the text from spilling outside the container. Note however that this means that the user's font size settings are not respected, so consider adjusting the layout itself to be more flexible. Issue id: SpUsage https://developer.android.com/training/multiscreen/screendensities.html",
                  "markdown": "Using `dp` instead of `sp` for text sizes  \n\nWhen setting text sizes, you should normally use `sp`, or \"scale-independent pixels\". This is like the `dp` unit, but it is also scaled by the user's font size preference. It is recommend you use this unit when specifying font sizes, so they will be adjusted for both the screen density and the user's preference.  \n\nThere **are** cases where you might need to use `dp`; typically this happens when the text is in a container with a specific dp-size. This will prevent the text from spilling outside the container. Note however that this means that the user's font size settings are not respected, so consider adjusting the layout itself to be more flexible.  \n\nIssue id: SpUsage  \n\n<https://developer.android.com/training/multiscreen/screendensities.html>"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "AndroidLintSpUsage",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Android Lint: Correctness",
                      "index": 5,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "AndroidLintStringEscaping",
                "shortDescription": {
                  "text": "Invalid string escapes"
                },
                "fullDescription": {
                  "text": "Invalid string escapes Apostrophes (') must always be escaped (with a \\\\), unless they appear in a string which is itself escaped in double quotes (\"). Issue id: StringEscaping",
                  "markdown": "Invalid string escapes  \n\nApostrophes (') must always be escaped (with a \\\\\\\\), unless they appear in a string which is itself escaped in double quotes (\").  \n\nIssue id: StringEscaping"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "error",
                  "parameters": {
                    "suppressToolId": "AndroidLintStringEscaping",
                    "ideaSeverity": "ERROR",
                    "qodanaSeverity": "Critical"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Android Lint: Correctness",
                      "index": 5,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "AndroidLintValidFragment",
                "shortDescription": {
                  "text": "Fragment not instantiatable"
                },
                "fullDescription": {
                  "text": "Fragment not instantiatable From the Fragment documentation: Every fragment must have an empty constructor, so it can be instantiated when restoring its activity's state. It is strongly recommended that subclasses do not have other constructors with parameters, since these constructors will not be called when the fragment is re-instantiated; instead, arguments can be supplied by the caller with 'setArguments(Bundle)' and later retrieved by the Fragment with 'getArguments()'. Note that this is no longer true when you are using 'androidx.fragment.app.Fragment'; with the 'FragmentFactory' you can supply any arguments you want (as of version androidx version 1.1). Issue id: ValidFragment https://developer.android.com/reference/android/app/Fragment.html#Fragment()",
                  "markdown": "Fragment not instantiatable  \n\nFrom the Fragment documentation:  \n**Every** fragment must have an empty constructor, so it can be instantiated when restoring its activity's state. It is strongly recommended that subclasses do not have other constructors with parameters, since these constructors will not be called when the fragment is re-instantiated; instead, arguments can be supplied by the caller with `setArguments(Bundle)` and later retrieved by the Fragment with `getArguments()`.  \n\nNote that this is no longer true when you are using `androidx.fragment.app.Fragment`; with the `FragmentFactory` you can supply any arguments you want (as of version androidx version 1.1).  \n\nIssue id: ValidFragment  \n\n<https://developer.android.com/reference/android/app/Fragment.html#Fragment()>"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "error",
                  "parameters": {
                    "suppressToolId": "AndroidLintValidFragment",
                    "ideaSeverity": "ERROR",
                    "qodanaSeverity": "Critical"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Android Lint: Correctness",
                      "index": 5,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "AndroidLintSdCardPath",
                "shortDescription": {
                  "text": "Hardcoded reference to /sdcard"
                },
                "fullDescription": {
                  "text": "Hardcoded reference to '/sdcard' Your code should not reference the '/sdcard' path directly; instead use 'Environment.getExternalStorageDirectory().getPath()'. Similarly, do not reference the '/data/data/' path directly; it can vary in multi-user scenarios. Instead, use 'Context.getFilesDir().getPath()'. Issue id: SdCardPath https://developer.android.com/training/data-storage#filesExternal",
                  "markdown": "Hardcoded reference to `/sdcard`  \n\nYour code should not reference the `/sdcard` path directly; instead use `Environment.getExternalStorageDirectory().getPath()`.  \n\nSimilarly, do not reference the `/data/data/` path directly; it can vary in multi-user scenarios. Instead, use `Context.getFilesDir().getPath()`.  \n\nIssue id: SdCardPath  \n\n<https://developer.android.com/training/data-storage#filesExternal>"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "AndroidLintSdCardPath",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Android Lint: Correctness",
                      "index": 5,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "AndroidLintIntentFilterExportedReceiver",
                "shortDescription": {
                  "text": "Unspecified android:exported in manifest"
                },
                "fullDescription": {
                  "text": "Unspecified 'android:exported' in manifest Apps targeting Android 12 and higher are required to specify an explicit value for 'android:exported' when the corresponding component has an intent filter defined. Otherwise, installation will fail. Set it to 'true' to make this activity accessible to other apps, and 'false' to limit it to be used only by this app or the OS. For launch activities, this should be set to true; otherwise, the app will fail to launch. Previously, 'android:exported' for components without any intent filters present used to default to 'false', and when intent filters were present, the default was 'true'. Defaults which change value based on other values are confusing and lead to apps accidentally exporting components as a side-effect of adding intent filters. This is a security risk, and we have made this change to avoid introducing accidental vulnerabilities. While the default without intent filters remains unchanged, it is now required to explicitly specify a value when intent filters are present. Any app failing to meet this requirement will fail to install on any Android version after Android 11. We recommend setting 'android:exported' to false (even on previous versions of Android prior to this requirement) unless you have a good reason to export a particular component. Issue id: IntentFilterExportedReceiver https://goo.gle/IntentFilterExportedReceiver",
                  "markdown": "Unspecified `android:exported` in manifest  \n\nApps targeting Android 12 and higher are required to specify an explicit value for `android:exported` when the corresponding component has an intent filter defined. Otherwise, installation will fail. Set it to `true` to make this activity accessible to other apps, and `false` to limit it to be used only by this app or the OS. For launch activities, this should be set to true; otherwise, the app will fail to launch.  \n\nPreviously, `android:exported` for components without any intent filters present used to default to `false`, and when intent filters were present, the default was `true`. Defaults which change value based on other values are confusing and lead to apps accidentally exporting components as a side-effect of adding intent filters. This is a security risk, and we have made this change to avoid introducing accidental vulnerabilities.  \n\nWhile the default without intent filters remains unchanged, it is now required to explicitly specify a value when intent filters are present. Any app failing to meet this requirement will fail to install on any Android version after Android 11.  \n\nWe recommend setting `android:exported` to false (even on previous versions of Android prior to this requirement) unless you have a good reason to export a particular component.  \n\nIssue id: IntentFilterExportedReceiver  \n\n<https://goo.gle/IntentFilterExportedReceiver>"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "AndroidLintIntentFilterExportedReceiver",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Android Lint: Security",
                      "index": 44,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "AndroidLintMergeRootFrame",
                "shortDescription": {
                  "text": "FrameLayout can be replaced with <merge> tag"
                },
                "fullDescription": {
                  "text": "FrameLayout can be replaced with '<merge>' tag If a '<FrameLayout>' is the root of a layout and does not provide background or padding etc, it can often be replaced with a '<merge>' tag which is slightly more efficient. Note that this depends on context, so make sure you understand how the '<merge>' tag works before proceeding. Issue id: MergeRootFrame https://android-developers.googleblog.com/2009/03/android-layout-tricks-3-optimize-by.html",
                  "markdown": "FrameLayout can be replaced with `<merge>` tag  \n\nIf a `<FrameLayout>` is the root of a layout and does not provide background or padding etc, it can often be replaced with a `<merge>` tag which is slightly more efficient. Note that this depends on context, so make sure you understand how the `<merge>` tag works before proceeding.  \n\nIssue id: MergeRootFrame  \n\n<https://android-developers.googleblog.com/2009/03/android-layout-tricks-3-optimize-by.html>"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "AndroidLintMergeRootFrame",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Android Lint: Performance",
                      "index": 14,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "AndroidLintEnforceUTF8",
                "shortDescription": {
                  "text": "Encoding used in resource files is not UTF-8"
                },
                "fullDescription": {
                  "text": "Encoding used in resource files is not UTF-8 XML supports encoding in a wide variety of character sets. However, not all tools handle the XML encoding attribute correctly, and nearly all Android apps use UTF-8, so by using UTF-8 you can protect yourself against subtle bugs when using non-ASCII characters. In particular, the Android Gradle build system will merge resource XML files assuming the resource files are using UTF-8 encoding. Issue id: EnforceUTF8",
                  "markdown": "Encoding used in resource files is not UTF-8  \n\nXML supports encoding in a wide variety of character sets. However, not all tools handle the XML encoding attribute correctly, and nearly all Android apps use UTF-8, so by using UTF-8 you can protect yourself against subtle bugs when using non-ASCII characters.  \n\nIn particular, the Android Gradle build system will merge resource XML files assuming the resource files are using UTF-8 encoding.  \n\nIssue id: EnforceUTF8"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "error",
                  "parameters": {
                    "suppressToolId": "AndroidLintEnforceUTF8",
                    "ideaSeverity": "ERROR",
                    "qodanaSeverity": "Critical"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Android Lint: Internationalization",
                      "index": 63,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "AndroidLintStateListReachable",
                "shortDescription": {
                  "text": "Unreachable state in a <selector>"
                },
                "fullDescription": {
                  "text": "Unreachable state in a '<selector>' In a selector, only the last child in the state list should omit a state qualifier. If not, all subsequent items in the list will be ignored since the given item will match all. Issue id: StateListReachable",
                  "markdown": "Unreachable state in a `<selector>`  \n\nIn a selector, only the last child in the state list should omit a state qualifier. If not, all subsequent items in the list will be ignored since the given item will match all.  \n\nIssue id: StateListReachable"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "AndroidLintStateListReachable",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Android Lint: Correctness",
                      "index": 5,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "AndroidLintGradleGetter",
                "shortDescription": {
                  "text": "Gradle Implicit Getter Call"
                },
                "fullDescription": {
                  "text": "Gradle Implicit Getter Call Gradle will let you replace specific constants in your build scripts with method calls, so you can for example dynamically compute a version string based on your current version control revision number, rather than hardcoding a number. When computing a version name, it's tempting to for example call the method to do that 'getVersionName'. However, when you put that method call inside the 'defaultConfig' block, you will actually be calling the Groovy getter for the 'versionName' property instead. Therefore, you need to name your method something which does not conflict with the existing implicit getters. Consider using 'compute' as a prefix instead of 'get'. Issue id: GradleGetter",
                  "markdown": "Gradle Implicit Getter Call  \n\nGradle will let you replace specific constants in your build scripts with method calls, so you can for example dynamically compute a version string based on your current version control revision number, rather than hardcoding a number.  \n\nWhen computing a version name, it's tempting to for example call the method to do that `getVersionName`. However, when you put that method call inside the `defaultConfig` block, you will actually be calling the Groovy getter for the `versionName` property instead. Therefore, you need to name your method something which does not conflict with the existing implicit getters. Consider using `compute` as a prefix instead of `get`.  \n\nIssue id: GradleGetter"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "error",
                  "parameters": {
                    "suppressToolId": "AndroidLintGradleGetter",
                    "ideaSeverity": "ERROR",
                    "qodanaSeverity": "Critical"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Android Lint: Correctness",
                      "index": 5,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "AndroidLintInconsistentLayout",
                "shortDescription": {
                  "text": "Inconsistent Layouts"
                },
                "fullDescription": {
                  "text": "Inconsistent Layouts This check ensures that a layout resource which is defined in multiple resource folders, specifies the same set of widgets. This finds cases where you have accidentally forgotten to add a widget to all variations of the layout, which could result in a runtime crash for some resource configurations when a 'findViewById()' fails. There are cases where this is intentional. For example, you may have a dedicated large tablet layout which adds some extra widgets that are not present in the phone version of the layout. As long as the code accessing the layout resource is careful to handle this properly, it is valid. In that case, you can suppress this lint check for the given extra or missing views, or the whole layout Issue id: InconsistentLayout",
                  "markdown": "Inconsistent Layouts  \n\nThis check ensures that a layout resource which is defined in multiple resource folders, specifies the same set of widgets.  \n\nThis finds cases where you have accidentally forgotten to add a widget to all variations of the layout, which could result in a runtime crash for some resource configurations when a `findViewById()` fails.  \n\nThere **are** cases where this is intentional. For example, you may have a dedicated large tablet layout which adds some extra widgets that are not present in the phone version of the layout. As long as the code accessing the layout resource is careful to handle this properly, it is valid. In that case, you can suppress this lint check for the given extra or missing views, or the whole layout  \n\nIssue id: InconsistentLayout"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "AndroidLintInconsistentLayout",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Android Lint: Correctness",
                      "index": 5,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "AndroidLintExportedPreferenceActivity",
                "shortDescription": {
                  "text": "PreferenceActivity should not be exported"
                },
                "fullDescription": {
                  "text": "PreferenceActivity should not be exported Fragment injection gives anyone who can send your 'PreferenceActivity' an intent the ability to load any fragment, with any arguments, in your process. Issue id: ExportedPreferenceActivity http://securityintelligence.com/new-vulnerability-android-framework-fragment-injection https://goo.gle/ExportedPreferenceActivity",
                  "markdown": "PreferenceActivity should not be exported  \n\nFragment injection gives anyone who can send your `PreferenceActivity` an intent the ability to load any fragment, with any arguments, in your process.  \n\nIssue id: ExportedPreferenceActivity  \n\n<http://securityintelligence.com/new-vulnerability-android-framework-fragment-injection>  \n<https://goo.gle/ExportedPreferenceActivity>"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "AndroidLintExportedPreferenceActivity",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Android Lint: Security",
                      "index": 44,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "AndroidLintGetContentDescriptionOverride",
                "shortDescription": {
                  "text": "Overriding getContentDescription() on a View"
                },
                "fullDescription": {
                  "text": "Overriding 'getContentDescription()' on a View Overriding 'getContentDescription()' may prevent some accessibility services from properly navigating content exposed by your view. Instead, call 'setContentDescription()' when the content description needs to be changed. Issue id: GetContentDescriptionOverride",
                  "markdown": "Overriding `getContentDescription()` on a View  \n\nOverriding `getContentDescription()` may prevent some accessibility services from properly navigating content exposed by your view. Instead, call `setContentDescription()` when the content description needs to be changed.  \n\nIssue id: GetContentDescriptionOverride"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "error",
                  "parameters": {
                    "suppressToolId": "AndroidLintGetContentDescriptionOverride",
                    "ideaSeverity": "ERROR",
                    "qodanaSeverity": "Critical"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Android Lint: Accessibility",
                      "index": 68,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "AndroidLintAddJavascriptInterface",
                "shortDescription": {
                  "text": "addJavascriptInterface Called"
                },
                "fullDescription": {
                  "text": "'addJavascriptInterface' Called For applications built for API levels below 17, 'WebView#addJavascriptInterface' presents a security hazard as JavaScript on the target web page has the ability to use reflection to access the injected object's public fields and thus manipulate the host application in unintended ways. Issue id: AddJavascriptInterface https://developer.android.com/reference/android/webkit/WebView.html#addJavascriptInterface(java.lang.Object,%20java.lang.String) https://support.google.com/faqs/answer/9095419?hl=en https://goo.gle/AddJavascriptInterface",
                  "markdown": "`addJavascriptInterface` Called  \n\nFor applications built for API levels below 17, `WebView#addJavascriptInterface` presents a security hazard as JavaScript on the target web page has the ability to use reflection to access the injected object's public fields and thus manipulate the host application in unintended ways.  \n\nIssue id: AddJavascriptInterface  \n\n<https://developer.android.com/reference/android/webkit/WebView.html#addJavascriptInterface(java.lang.Object,%20java.lang.String)>  \n<https://support.google.com/faqs/answer/9095419?hl=en>  \n<https://goo.gle/AddJavascriptInterface>"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "AndroidLintAddJavascriptInterface",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Android Lint: Security",
                      "index": 44,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "AndroidLintInnerclassSeparator",
                "shortDescription": {
                  "text": "Inner classes should use $ rather than ."
                },
                "fullDescription": {
                  "text": "Inner classes should use '$' rather than '.' When you reference an inner class in a manifest file, you must use '$' instead of '.' as the separator character, i.e. Outer$Inner instead of Outer.Inner. (If you get this warning for a class which is not actually an inner class, it's because you are using uppercase characters in your package name, which is not conventional.) Issue id: InnerclassSeparator",
                  "markdown": "Inner classes should use `$` rather than `.`  \n\nWhen you reference an inner class in a manifest file, you must use '$' instead of '.' as the separator character, i.e. Outer$Inner instead of Outer.Inner.  \n\n(If you get this warning for a class which is not actually an inner class, it's because you are using uppercase characters in your package name, which is not conventional.)  \n\nIssue id: InnerclassSeparator"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "AndroidLintInnerclassSeparator",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Android Lint: Correctness",
                      "index": 5,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "AndroidLintFontValidation",
                "shortDescription": {
                  "text": "Validation of font files"
                },
                "fullDescription": {
                  "text": "Validation of font files Look for problems in various font files. Issue id: FontValidation https://developer.android.com/guide/topics/text/downloadable-fonts.html",
                  "markdown": "Validation of font files  \n\nLook for problems in various font files.  \n\nIssue id: FontValidation  \n\n<https://developer.android.com/guide/topics/text/downloadable-fonts.html>"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "error",
                  "parameters": {
                    "suppressToolId": "AndroidLintFontValidation",
                    "ideaSeverity": "ERROR",
                    "qodanaSeverity": "Critical"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Android Lint: Correctness",
                      "index": 5,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "AndroidLintAaptCrash",
                "shortDescription": {
                  "text": "Potential AAPT crash"
                },
                "fullDescription": {
                  "text": "Potential AAPT crash Defining a style which sets 'android:id' to a dynamically generated id can cause many versions of 'aapt', the resource packaging tool, to crash. To work around this, declare the id explicitly with '<item type=\"id\" name=\"...\" />' instead. Issue id: AaptCrash",
                  "markdown": "Potential AAPT crash  \n\nDefining a style which sets `android:id` to a dynamically generated id can cause many versions of `aapt`, the resource packaging tool, to crash. To work around this, declare the id explicitly with `<item type=\"id\" name=\"...\" />` instead.  \n\nIssue id: AaptCrash"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "error",
                  "parameters": {
                    "suppressToolId": "AndroidLintAaptCrash",
                    "ideaSeverity": "ERROR",
                    "qodanaSeverity": "Critical"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Android Lint: Correctness",
                      "index": 5,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "AndroidLintAccessibilityScrollActions",
                "shortDescription": {
                  "text": "Incomplete Scroll Action support"
                },
                "fullDescription": {
                  "text": "Incomplete Scroll Action support Views that behave like 'ScrollView' and support 'ACTION_SCROLL_{FORWARD,BACKWARD}' should also support 'ACTION_SCROLL_{LEFT,RIGHT}' and/or 'ACTION_SCROLL_{UP,DOWN}'. Issue id: AccessibilityScrollActions",
                  "markdown": "Incomplete Scroll Action support  \n\nViews that behave like `ScrollView` and support `ACTION_SCROLL_{FORWARD,BACKWARD}` should also support `ACTION_SCROLL_{LEFT,RIGHT}` and/or `ACTION_SCROLL_{UP,DOWN}`.  \n\nIssue id: AccessibilityScrollActions"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "AndroidLintAccessibilityScrollActions",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Android Lint: Accessibility",
                      "index": 68,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "AndroidLintReferenceType",
                "shortDescription": {
                  "text": "Incorrect reference types"
                },
                "fullDescription": {
                  "text": "Incorrect reference types When you generate a resource alias, the resource you are pointing to must be of the same type as the alias Issue id: ReferenceType",
                  "markdown": "Incorrect reference types  \n\nWhen you generate a resource alias, the resource you are pointing to must be of the same type as the alias  \n\nIssue id: ReferenceType"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "error",
                  "parameters": {
                    "suppressToolId": "AndroidLintReferenceType",
                    "ideaSeverity": "ERROR",
                    "qodanaSeverity": "Critical"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Android Lint: Correctness",
                      "index": 5,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "AndroidLintDiscouragedApi",
                "shortDescription": {
                  "text": "Using discouraged APIs"
                },
                "fullDescription": {
                  "text": "Using discouraged APIs Discouraged APIs are allowed and are not deprecated, but they may be unfit for common use (e.g. due to slow performance or subtle behavior). Issue id: DiscouragedApi",
                  "markdown": "Using discouraged APIs  \n\nDiscouraged APIs are allowed and are not deprecated, but they may be unfit for common use (e.g. due to slow performance or subtle behavior).  \n\nIssue id: DiscouragedApi"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "AndroidLintDiscouragedApi",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Android Lint: Correctness",
                      "index": 5,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "AndroidLintWrongConstant",
                "shortDescription": {
                  "text": "Incorrect constant"
                },
                "fullDescription": {
                  "text": "Incorrect constant Ensures that when parameter in a method only allows a specific set of constants, calls obey those rules. Issue id: WrongConstant",
                  "markdown": "Incorrect constant  \n\nEnsures that when parameter in a method only allows a specific set of constants, calls obey those rules.  \n\nIssue id: WrongConstant"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "error",
                  "parameters": {
                    "suppressToolId": "AndroidLintWrongConstant",
                    "ideaSeverity": "ERROR",
                    "qodanaSeverity": "Critical"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Android Lint: Correctness",
                      "index": 5,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "AndroidLintDuplicateStrings",
                "shortDescription": {
                  "text": "Duplicate Strings"
                },
                "fullDescription": {
                  "text": "Duplicate Strings Duplicate strings can make applications larger unnecessarily. This lint check looks for duplicate strings, including differences for strings where the only difference is in capitalization. Title casing and all uppercase can all be adjusted in the layout or in code. Issue id: DuplicateStrings https://developer.android.com/reference/android/widget/TextView.html#attr_android:inputType",
                  "markdown": "Duplicate Strings  \n\nDuplicate strings can make applications larger unnecessarily.  \n\nThis lint check looks for duplicate strings, including differences for strings where the only difference is in capitalization. Title casing and all uppercase can all be adjusted in the layout or in code.  \n\nIssue id: DuplicateStrings  \n\n<https://developer.android.com/reference/android/widget/TextView.html#attr_android:inputType>"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "AndroidLintDuplicateStrings",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Android Lint: Performance",
                      "index": 14,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "AndroidLintVisibleForTests",
                "shortDescription": {
                  "text": "Visible Only For Tests"
                },
                "fullDescription": {
                  "text": "Visible Only For Tests This check looks for accesses from production code (e.g. not tests) where the access would not have been allowed with the intended production visibility. Depending on your development environment, you may be able to use an '@VisibleForTesting' annotation to specify the intended visibility if the method had not been more widely visible for the tests. When using 'androidx.annotations.VisibleForTesting', the production visibility is assumed to be private unless specified with the 'otherwise=' parameter. 'com.google.common.annotations.VisibleForTesting' and 'com.android.internal.annotations.VisibleForTesting' work similarly with their own parameters called 'productionVisibility' and 'visibility'. If instead you use 'org.jetbrains.annotations.VisibleForTesting', there is no such parameter, and the production visibility is instead assumed to be \"one step down\" from the testing visibility. For example, if the testing visibility is public, the production visibility is assumed to be package-private. Issue id: VisibleForTests",
                  "markdown": "Visible Only For Tests  \n\nThis check looks for accesses from production code (e.g. not tests) where the access would not have been allowed with the intended production visibility.  \n\nDepending on your development environment, you may be able to use an `@VisibleForTesting` annotation to specify the intended visibility if the method had not been more widely visible for the tests.  \n\nWhen using `androidx.annotations.VisibleForTesting`, the production visibility is assumed to be private unless specified with the `otherwise=` parameter. `com.google.common.annotations.VisibleForTesting` and `com.android.internal.annotations.VisibleForTesting` work similarly with their own parameters called `productionVisibility` and `visibility`.  \n\nIf instead you use `org.jetbrains.annotations.VisibleForTesting`, there is no such parameter, and the production visibility is instead assumed to be \"one step down\" from the testing visibility. For example, if the testing visibility is public, the production visibility is assumed to be package-private.  \n\nIssue id: VisibleForTests"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "AndroidLintVisibleForTests",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Android Lint: Correctness",
                      "index": 5,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "AndroidLintJavaPluginLanguageLevel",
                "shortDescription": {
                  "text": "No Explicit Java Language Level Given"
                },
                "fullDescription": {
                  "text": "No Explicit Java Language Level Given In modules using plugins deriving from the Gradle 'java' plugin (e.g. 'java-library' or 'application'), the java source and target compatibility default to the version of the JDK being used to run Gradle, which may cause compatibility problems with Android (or other) modules. You can specify an explicit sourceCompatibility and targetCompatibility in this module to maintain compatibility no matter which JDK is used to run Gradle. Issue id: JavaPluginLanguageLevel",
                  "markdown": "No Explicit Java Language Level Given  \n\nIn modules using plugins deriving from the Gradle `java` plugin (e.g. `java-library` or `application`), the java source and target compatibility default to the version of the JDK being used to run Gradle, which may cause compatibility problems with Android (or other) modules.  \n\nYou can specify an explicit sourceCompatibility and targetCompatibility in this module to maintain compatibility no matter which JDK is used to run Gradle.  \n\nIssue id: JavaPluginLanguageLevel"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "AndroidLintJavaPluginLanguageLevel",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Android Lint: Interoperability",
                      "index": 39,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "AndroidLintSuspiciousIndentation",
                "shortDescription": {
                  "text": "Suspicious indentation"
                },
                "fullDescription": {
                  "text": "Suspicious indentation This check looks for cases where the indentation suggests a grouping that isn't actually there in the code. A common example of this would be something like if (column > width)\n    line++\n    column = 0\n Here, the 'column = 0' line will be executed every single time, not just if the condition is true. Issue id: SuspiciousIndentation Available options: always-run (default is false): Whether this check should be included while editing. While you're editing, it's common to have a temporary situation where you have suspicious indentation scenarios -- e.g. you start typing an 'if' statement on the line above something you want to make conditional, and you haven't indented it yet. It can be distracting and misleading to suddenly have both statements light up as errors. Therefore, lint will avoid including this check when running on the fly in the editor, unless it looks like the file has not been recently edited. With this option, you can turn it on in all cases. To configure this option, use a 'lint.xml' file with an <option> like this: <lint>\n    <issue id=\"SuspiciousIndentation\">\n        <option name=\"always-run\" value=\"false\" />\n    </issue>\n</lint>",
                  "markdown": "Suspicious indentation  \n\nThis check looks for cases where the indentation suggests a grouping that isn't actually there in the code. A common example of this would be something like\n\n```\nif (column > width)\n    line++\n    column = 0\n```\n\nHere, the `column = 0` line will be executed every single time, not just if the condition is true.  \n\nIssue id: SuspiciousIndentation  \n\nAvailable options:  \n\n**always-run** (default is false):  \nWhether this check should be included while editing.  \n\nWhile you're editing, it's common to have a temporary situation where you have suspicious indentation scenarios -- e.g. you start typing an `if` statement on the line above something you want to make conditional, and you haven't indented it yet. It can be distracting and misleading to suddenly have both statements light up as errors. Therefore, lint will avoid including this check when running on the fly in the editor, unless it looks like the file has not been recently edited. With this option, you can turn it on in all cases.  \n\nTo configure this option, use a `lint.xml` file with an \\<option\\> like this:  \n\n```\n<lint>\n    <issue id=\"SuspiciousIndentation\">\n        <option name=\"always-run\" value=\"false\" />\n    </issue>\n</lint>\n```"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "error",
                  "parameters": {
                    "suppressToolId": "AndroidLintSuspiciousIndentation",
                    "ideaSeverity": "ERROR",
                    "qodanaSeverity": "Critical"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Android Lint: Correctness",
                      "index": 5,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "AndroidLintDataExtractionRules",
                "shortDescription": {
                  "text": "Missing data extraction rules"
                },
                "fullDescription": {
                  "text": "Missing data extraction rules Before Android 12, the attributes 'android:allowBackup' and 'android:fullBackupContent' were used to configure all forms of backup, including cloud backups, device-to-device transfers and adb backup. In Android 12 and higher, these attributes have been deprecated and will only apply to cloud backups. You should instead use the attribute 'android:dataExtractionRules', specifying an '@xml' resource that configures which files to back up, for cloud backups and for device-to-device transfers, separately. If your 'minSdkVersion' supports older versions, you'll still want to specify an 'android:fullBackupContent' resource if the default behavior is not right for your app. Issue id: DataExtractionRules https://developer.android.com/about/versions/12/backup-restore#xml-changes https://goo.gle/DataExtractionRules",
                  "markdown": "Missing data extraction rules  \n\nBefore Android 12, the attributes `android:allowBackup` and `android:fullBackupContent` were used to configure all forms of backup, including cloud backups, device-to-device transfers and adb backup.  \n\nIn Android 12 and higher, these attributes have been deprecated and will only apply to cloud backups. You should instead use the attribute `android:dataExtractionRules`, specifying an `@xml` resource that configures which files to back up, for cloud backups and for device-to-device transfers, separately. If your `minSdkVersion` supports older versions, you'll still want to specify an `android:fullBackupContent` resource if the default behavior is not right for your app.  \n\nIssue id: DataExtractionRules  \n\n<https://developer.android.com/about/versions/12/backup-restore#xml-changes>  \n<https://goo.gle/DataExtractionRules>"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "AndroidLintDataExtractionRules",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Android Lint: Security",
                      "index": 44,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "AndroidLintOldTargetApi",
                "shortDescription": {
                  "text": "Target SDK attribute is not targeting latest version"
                },
                "fullDescription": {
                  "text": "Target SDK attribute is not targeting latest version When your application runs on a version of Android that is more recent than your 'targetSdkVersion' specifies that it has been tested with, various compatibility modes kick in. This ensures that your application continues to work, but it may look out of place. For example, if the 'targetSdkVersion' is less than 14, your app may get an option button in the UI. To fix this issue, set the 'targetSdkVersion' to the highest available value. Then test your app to make sure everything works correctly. You may want to consult the compatibility notes to see what changes apply to each version you are adding support for: https://developer.android.com/reference/android/os/Build.VERSION_CODES.html as well as follow this guide: https://developer.android.com/distribute/best-practices/develop/target-sdk.html Issue id: OldTargetApi",
                  "markdown": "Target SDK attribute is not targeting latest version  \n\nWhen your application runs on a version of Android that is more recent than your `targetSdkVersion` specifies that it has been tested with, various compatibility modes kick in. This ensures that your application continues to work, but it may look out of place. For example, if the `targetSdkVersion` is less than 14, your app may get an option button in the UI.  \n\nTo fix this issue, set the `targetSdkVersion` to the highest available value. Then test your app to make sure everything works correctly. You may want to consult the compatibility notes to see what changes apply to each version you are adding support for: <https://developer.android.com/reference/android/os/Build.VERSION_CODES.html> as well as follow this guide:  \n<https://developer.android.com/distribute/best-practices/develop/target-sdk.html>  \n\nIssue id: OldTargetApi"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "AndroidLintOldTargetApi",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Android Lint: Correctness",
                      "index": 5,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "AndroidLintCommitTransaction",
                "shortDescription": {
                  "text": "Missing commit() calls"
                },
                "fullDescription": {
                  "text": "Missing 'commit()' calls After creating a 'FragmentTransaction', you typically need to commit it as well Issue id: CommitTransaction",
                  "markdown": "Missing `commit()` calls  \n\nAfter creating a `FragmentTransaction`, you typically need to commit it as well  \n\nIssue id: CommitTransaction"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "AndroidLintCommitTransaction",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Android Lint: Correctness",
                      "index": 5,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "AndroidLintLambdaLast",
                "shortDescription": {
                  "text": "Lambda Parameters Last"
                },
                "fullDescription": {
                  "text": "Lambda Parameters Last To improve calling this code from Kotlin, parameter types eligible for SAM conversion should be last. Issue id: LambdaLast https://android.github.io/kotlin-guides/interop.html#lambda-parameters-last",
                  "markdown": "Lambda Parameters Last  \n\nTo improve calling this code from Kotlin, parameter types eligible for SAM conversion should be last.  \n\nIssue id: LambdaLast  \n\n<https://android.github.io/kotlin-guides/interop.html#lambda-parameters-last>"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "AndroidLintLambdaLast",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Android Lint: Interoperability",
                      "index": 39,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "AndroidLintMipmapIcons",
                "shortDescription": {
                  "text": "Use Mipmap Launcher Icons"
                },
                "fullDescription": {
                  "text": "Use Mipmap Launcher Icons Launcher icons should be provided in the 'mipmap' resource directory. This is the same as the 'drawable' resource directory, except resources in the 'mipmap' directory will not get stripped out when creating density-specific APKs. In certain cases, the Launcher app may use a higher resolution asset (than would normally be computed for the device) to display large app shortcuts. If drawables for densities other than the device's resolution have been stripped out, then the app shortcut could appear blurry. To fix this, move your launcher icons from `drawable-`dpi to `mipmap-`dpi and change references from @drawable/ and R.drawable to @mipmap/ and R.mipmap. In Android Studio this lint warning has a quickfix to perform this automatically. Issue id: MipmapIcons",
                  "markdown": "Use Mipmap Launcher Icons  \n\nLauncher icons should be provided in the `mipmap` resource directory. This is the same as the `drawable` resource directory, except resources in the `mipmap` directory will not get stripped out when creating density-specific APKs.  \n\nIn certain cases, the Launcher app may use a higher resolution asset (than would normally be computed for the device) to display large app shortcuts. If drawables for densities other than the device's resolution have been stripped out, then the app shortcut could appear blurry.  \n\nTo fix this, move your launcher icons from \\`drawable-\\`dpi to \\`mipmap-\\`dpi and change references from @drawable/ and R.drawable to @mipmap/ and R.mipmap.  \n\nIn Android Studio this lint warning has a quickfix to perform this automatically.  \n\nIssue id: MipmapIcons"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "AndroidLintMipmapIcons",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Android Lint: Usability",
                      "index": 42,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "AndroidLintLabelFor",
                "shortDescription": {
                  "text": "Missing accessibility label"
                },
                "fullDescription": {
                  "text": "Missing accessibility label Editable text fields should provide an 'android:hint' or, provided your 'minSdkVersion' is at least 17, they may be referenced by a view with a 'android:labelFor' attribute. When using 'android:labelFor', be sure to provide an 'android:text' or an 'android:contentDescription'. If your view is labeled but by a label in a different layout which includes this one, just suppress this warning from lint. Issue id: LabelFor",
                  "markdown": "Missing accessibility label  \n\nEditable text fields should provide an `android:hint` or, provided your `minSdkVersion` is at least 17, they may be referenced by a view with a `android:labelFor` attribute.  \n\nWhen using `android:labelFor`, be sure to provide an `android:text` or an `android:contentDescription`.  \n\nIf your view is labeled but by a label in a different layout which includes this one, just suppress this warning from lint.  \n\nIssue id: LabelFor"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "AndroidLintLabelFor",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Android Lint: Accessibility",
                      "index": 68,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              }
            ],
            "language": "en-US",
            "contents": [
              "localizedData",
              "nonLocalizedData"
            ],
            "isComprehensive": false
          },
          {
            "name": "org.intellij.groovy",
            "version": "242.20224.419",
            "rules": [
              {
                "id": "GroovyListSetCanBeKeyedAccess",
                "shortDescription": {
                  "text": "Call to List.set can be keyed access"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "GroovyListSetCanBeKeyedAccess",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Groovy/GPath",
                      "index": 18,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "GroovyConstantNamingConvention",
                "shortDescription": {
                  "text": "Constant naming convention"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "GroovyConstantNamingConvention",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Groovy/Naming conventions",
                      "index": 29,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "GroovyInArgumentCheck",
                "shortDescription": {
                  "text": "Incompatible 'in' argument types"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "GroovyInArgumentCheck",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Groovy/Probable bugs",
                      "index": 40,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "GroovyMapPutCanBeKeyedAccess",
                "shortDescription": {
                  "text": "Call to Map.put can be keyed access"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "GroovyMapPutCanBeKeyedAccess",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Groovy/GPath",
                      "index": 18,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "GroovyAccessibility",
                "shortDescription": {
                  "text": "Inaccessible element"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "GroovyAccessibility",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Groovy/Probable bugs",
                      "index": 40,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "GroovyDoubleCheckedLocking",
                "shortDescription": {
                  "text": "Double-checked locking"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "GroovyDoubleCheckedLocking",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Groovy/Threading issues",
                      "index": 56,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "GroovyFallthrough",
                "shortDescription": {
                  "text": "Fallthrough in 'switch' statement"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "GroovyFallthrough",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Groovy/Control flow issues",
                      "index": 57,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "GroovyLocalVariableNamingConvention",
                "shortDescription": {
                  "text": "Local variable naming convention"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "GroovyLocalVariableNamingConvention",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Groovy/Naming conventions",
                      "index": 29,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "GroovyIfStatementWithIdenticalBranches",
                "shortDescription": {
                  "text": "If statement with identical branches"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "GroovyIfStatementWithIdenticalBranches",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Groovy/Control flow issues",
                      "index": 57,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "GroovyNonShortCircuitBoolean",
                "shortDescription": {
                  "text": "Non short-circuit boolean"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "GroovyNonShortCircuitBoolean",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Groovy/Probable bugs",
                      "index": 40,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "JavaStylePropertiesInvocation",
                "shortDescription": {
                  "text": "Java-style property access"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "note",
                  "parameters": {
                    "suppressToolId": "JavaStylePropertiesInvocation",
                    "ideaSeverity": "INFORMATION",
                    "qodanaSeverity": "Info"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Groovy/Style",
                      "index": 59,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "GroovyTrivialConditional",
                "shortDescription": {
                  "text": "Redundant conditional expression"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "GroovyTrivialConditional",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Groovy/Control flow issues",
                      "index": 57,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "GrFinalVariableAccess",
                "shortDescription": {
                  "text": "Final variable access"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "GrFinalVariableAccess",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Groovy/Control flow issues",
                      "index": 57,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "DelegatesTo",
                "shortDescription": {
                  "text": "@DelegatesTo"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "DelegatesTo",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Groovy/Annotations",
                      "index": 73,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "GroovyOverlyComplexArithmeticExpression",
                "shortDescription": {
                  "text": "Overly complex arithmetic expression"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "GroovyOverlyComplexArithmeticExpression",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Groovy/Potentially confusing code constructs",
                      "index": 78,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "GroovyThrowFromFinallyBlock",
                "shortDescription": {
                  "text": "'throw' inside 'finally' block"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "GroovyThrowFromFinallyBlock",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Groovy/Error handling",
                      "index": 81,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "ChangeToOperator",
                "shortDescription": {
                  "text": "Method call can be replaced with operator invocation"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "note",
                  "parameters": {
                    "suppressToolId": "ChangeToOperator",
                    "ideaSeverity": "WEAK WARNING",
                    "qodanaSeverity": "Moderate"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Groovy/Style",
                      "index": 59,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "GroovyMapGetCanBeKeyedAccess",
                "shortDescription": {
                  "text": "Call to Map.get can be keyed access"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "GroovyMapGetCanBeKeyedAccess",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Groovy/GPath",
                      "index": 18,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "GroovyResultOfAssignmentUsed",
                "shortDescription": {
                  "text": "Result of assignment used"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "GroovyResultOfAssignmentUsed",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Groovy/Assignment issues",
                      "index": 89,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "GroovyNestedAssignment",
                "shortDescription": {
                  "text": "Nested assignment"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "GroovyNestedAssignment",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Groovy/Assignment issues",
                      "index": 89,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "GroovySynchronizedMethod",
                "shortDescription": {
                  "text": "Synchronized method"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "GroovySynchronizedMethod",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Groovy/Threading issues",
                      "index": 56,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "GroovyUnconditionalWait",
                "shortDescription": {
                  "text": "Unconditional 'wait' call"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "GroovyUnconditionalWait",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Groovy/Threading issues",
                      "index": 56,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "GroovyContinue",
                "shortDescription": {
                  "text": "'continue' statement"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "GroovyContinue",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Groovy/Control flow issues",
                      "index": 57,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "GroovyUnsynchronizedMethodOverridesSynchronizedMethod",
                "shortDescription": {
                  "text": "Unsynchronized method overrides synchronized method"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "GroovyUnsynchronizedMethodOverridesSynchronizedMethod",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Groovy/Threading issues",
                      "index": 56,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "GroovyNegatedIf",
                "shortDescription": {
                  "text": "Negated if condition expression"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "GroovyNegatedIf",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Groovy/Potentially confusing code constructs",
                      "index": 78,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "NewGroovyClassNamingConvention",
                "shortDescription": {
                  "text": "Class naming convention"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "NewGroovyClassNamingConvention",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Groovy/Naming conventions",
                      "index": 29,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "ClashingGetters",
                "shortDescription": {
                  "text": "Clashing getters"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "ClashingGetters",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Groovy/Potentially confusing code constructs",
                      "index": 78,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "GroovySwitchStatementWithNoDefault",
                "shortDescription": {
                  "text": "Switch statement with no default case"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "GroovySwitchStatementWithNoDefault",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Groovy/Control flow issues",
                      "index": 57,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "GroovyListGetCanBeKeyedAccess",
                "shortDescription": {
                  "text": "Call to List.get can be keyed access"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "GroovyListGetCanBeKeyedAccess",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Groovy/GPath",
                      "index": 18,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "NewInstanceOfSingleton",
                "shortDescription": {
                  "text": "New instance of class annotated with @groovy.lang.Singleton"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "NewInstanceOfSingleton",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Groovy/Potentially confusing code constructs",
                      "index": 78,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "GrReassignedInClosureLocalVar",
                "shortDescription": {
                  "text": "Local variable is reassigned in closure or anonymous class"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "GrReassignedInClosureLocalVar",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Groovy/Potentially confusing code constructs",
                      "index": 78,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "GroovyMethodParameterCount",
                "shortDescription": {
                  "text": "Method with too many parameters"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "GroovyMethodParameterCount",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Groovy/Method metrics",
                      "index": 109,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "GroovyNestedConditional",
                "shortDescription": {
                  "text": "Nested conditional expression"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "GroovyNestedConditional",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Groovy/Potentially confusing code constructs",
                      "index": 78,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "GroovyLabeledStatement",
                "shortDescription": {
                  "text": "Labeled statement inspection"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "GroovyLabeledStatement",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Groovy/Probable bugs",
                      "index": 40,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "GroovyEmptyStatementBody",
                "shortDescription": {
                  "text": "Statement with empty body"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "GroovyEmptyStatementBody",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Groovy/Potentially confusing code constructs",
                      "index": 78,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "GroovyAssignmentToForLoopParameter",
                "shortDescription": {
                  "text": "Assignment to 'for' loop parameter"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "GroovyAssignmentToForLoopParameter",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Groovy/Assignment issues",
                      "index": 89,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "GroovyAssignmentCanBeOperatorAssignment",
                "shortDescription": {
                  "text": "Assignment can be replaced with operator assignment"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "note",
                  "parameters": {
                    "suppressToolId": "GroovyAssignmentCanBeOperatorAssignment",
                    "ideaSeverity": "INFORMATION",
                    "qodanaSeverity": "Info"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Groovy/Assignment issues",
                      "index": 89,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "GroovyImplicitNullArgumentCall",
                "shortDescription": {
                  "text": "Implicit null argument"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "note",
                  "parameters": {
                    "suppressToolId": "GroovyImplicitNullArgumentCall",
                    "ideaSeverity": "WEAK WARNING",
                    "qodanaSeverity": "Moderate"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Groovy/Potentially confusing code constructs",
                      "index": 78,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "GroovyConditionalWithIdenticalBranches",
                "shortDescription": {
                  "text": "Ternary expression with identical branches"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "GroovyConditionalWithIdenticalBranches",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Groovy/Control flow issues",
                      "index": 57,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "GrAnnotationReferencingUnknownIdentifiers",
                "shortDescription": {
                  "text": "@TupleConstructor and @MapConstructor"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "GrAnnotationReferencingUnknownIdentifiers",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Groovy/Annotations",
                      "index": 73,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "GrUnnecessaryDefModifier",
                "shortDescription": {
                  "text": "Unnecessary 'def'"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "GrUnnecessaryDefModifier",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Groovy/Style",
                      "index": 59,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "GrPOJO",
                "shortDescription": {
                  "text": "@POJO without @CompileStatic"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "GrPOJO",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Groovy/Annotations",
                      "index": 73,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "GroovyWaitWhileNotSynchronized",
                "shortDescription": {
                  "text": "'wait()' while not synced"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "GroovyWaitWhileNotSynchronized",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Groovy/Threading issues",
                      "index": 56,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "GroovyConditionalCanBeElvis",
                "shortDescription": {
                  "text": "Ternary expression can be replaced with elvis expression"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "note",
                  "parameters": {
                    "suppressToolId": "GroovyConditionalCanBeElvis",
                    "ideaSeverity": "INFORMATION",
                    "qodanaSeverity": "Info"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Groovy/Control flow issues",
                      "index": 57,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "GroovyOverlyLongMethod",
                "shortDescription": {
                  "text": "Overly long method"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "GroovyOverlyLongMethod",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Groovy/Method metrics",
                      "index": 109,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "SecondUnsafeCall",
                "shortDescription": {
                  "text": "Second unsafe call"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "SecondUnsafeCall",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Groovy/Probable bugs",
                      "index": 40,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "GrPackage",
                "shortDescription": {
                  "text": "Package mismatch"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "GrPackage",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Groovy/Potentially confusing code constructs",
                      "index": 78,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "GroovyOverlyComplexBooleanExpression",
                "shortDescription": {
                  "text": "Overly complex boolean expression"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "GroovyOverlyComplexBooleanExpression",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Groovy/Potentially confusing code constructs",
                      "index": 78,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "GroovySystemRunFinalizersOnExit",
                "shortDescription": {
                  "text": "Call to System.runFinalizersOnExit()"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "GroovySystemRunFinalizersOnExit",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Groovy/Threading issues",
                      "index": 56,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "GrUnnecessaryPublicModifier",
                "shortDescription": {
                  "text": "Unnecessary 'public'"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "GrUnnecessaryPublicModifier",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Groovy/Style",
                      "index": 59,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "SingletonConstructor",
                "shortDescription": {
                  "text": "@Singleton constructors"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "error",
                  "parameters": {
                    "suppressToolId": "SingletonConstructor",
                    "ideaSeverity": "ERROR",
                    "qodanaSeverity": "Critical"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Groovy/Annotations",
                      "index": 73,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "GroovyUnusedIncOrDec",
                "shortDescription": {
                  "text": "Unused incrementing or decrementing"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "GroovyUnusedIncOrDec",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Groovy/Data flow",
                      "index": 131,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "GroovyEmptyCatchBlock",
                "shortDescription": {
                  "text": "Empty 'catch' block"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "GroovyEmptyCatchBlock",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Groovy/Error handling",
                      "index": 81,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "GroovyOverlyNestedMethod",
                "shortDescription": {
                  "text": "Overly nested method"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "GroovyOverlyNestedMethod",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Groovy/Method metrics",
                      "index": 109,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "GroovyVariableNotAssigned",
                "shortDescription": {
                  "text": "Variable not assigned"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "GroovyVariableNotAssigned",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Groovy/Data flow",
                      "index": 131,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "GroovyMethodWithMoreThanThreeNegations",
                "shortDescription": {
                  "text": "Method with more than three negations"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "GroovyMethodWithMoreThanThreeNegations",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Groovy/Method metrics",
                      "index": 109,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "GrNamedVariantLabels",
                "shortDescription": {
                  "text": "@NamedVariant/@NamedParam/@NamedDelegate unresolved label"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "GrNamedVariantLabels",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Groovy/Annotations",
                      "index": 73,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "GroovyNegatedConditional",
                "shortDescription": {
                  "text": "Negated conditional expression"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "GroovyNegatedConditional",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Groovy/Potentially confusing code constructs",
                      "index": 78,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "GroovyWhileLoopSpinsOnField",
                "shortDescription": {
                  "text": "While loop spins on field"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "GroovyWhileLoopSpinsOnField",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Groovy/Threading issues",
                      "index": 56,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "GroovySillyAssignment",
                "shortDescription": {
                  "text": "Silly assignment"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "GroovySillyAssignment",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Groovy/Assignment issues",
                      "index": 89,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "GroovyNestedSwitch",
                "shortDescription": {
                  "text": "Nested switch statement"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "GroovyNestedSwitch",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Groovy/Potentially confusing code constructs",
                      "index": 78,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "GroovyRangeTypeCheck",
                "shortDescription": {
                  "text": "Incorrect range arguments"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "GroovyRangeTypeCheck",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Groovy/Probable bugs",
                      "index": 40,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "GrUnnecessarySealedModifier",
                "shortDescription": {
                  "text": "Unnecessary 'sealed' modifier"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "GrUnnecessarySealedModifier",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Groovy/Style",
                      "index": 59,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "GrDeprecatedAPIUsage",
                "shortDescription": {
                  "text": "Deprecated API usage"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "GrDeprecatedAPIUsage",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Groovy/Potentially confusing code constructs",
                      "index": 78,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "GroovyMissingReturnStatement",
                "shortDescription": {
                  "text": "Missing return statement"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "GroovyMissingReturnStatement",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Groovy/Data flow",
                      "index": 131,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "GroovyPublicFieldAccessedInSynchronizedContext",
                "shortDescription": {
                  "text": "Non-private field accessed in synchronized context"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "GroovyPublicFieldAccessedInSynchronizedContext",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Groovy/Threading issues",
                      "index": 56,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "GroovyUnusedAssignment",
                "shortDescription": {
                  "text": "Unused assignment"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "GroovyUnusedAssignment",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Groovy/Data flow",
                      "index": 131,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "GroovyBusyWait",
                "shortDescription": {
                  "text": "Busy wait"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "GroovyBusyWait",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Groovy/Threading issues",
                      "index": 56,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "GroovyOctalInteger",
                "shortDescription": {
                  "text": "Octal integer"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "GroovyOctalInteger",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Groovy/Potentially confusing code constructs",
                      "index": 78,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "GroovySynchronizationOnVariableInitializedWithLiteral",
                "shortDescription": {
                  "text": "Synchronization on variable initialized with literal"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "GroovySynchronizationOnVariableInitializedWithLiteral",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Groovy/Threading issues",
                      "index": 56,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "GroovyResultOfIncrementOrDecrementUsed",
                "shortDescription": {
                  "text": "Result of increment or decrement used"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "GroovyResultOfIncrementOrDecrementUsed",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Groovy/Potentially confusing code constructs",
                      "index": 78,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "GroovySynchronizationOnNonFinalField",
                "shortDescription": {
                  "text": "Synchronization on non-final field"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "GroovySynchronizationOnNonFinalField",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Groovy/Threading issues",
                      "index": 56,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "GroovyThreadStopSuspendResume",
                "shortDescription": {
                  "text": "Call to Thread.stop(), Thread.suspend(), or Thread.resume()"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "GroovyThreadStopSuspendResume",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Groovy/Threading issues",
                      "index": 56,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "GroovyContinueOrBreakFromFinallyBlock",
                "shortDescription": {
                  "text": "'continue' or 'break' from 'finally' block"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "GroovyContinueOrBreakFromFinallyBlock",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Groovy/Error handling",
                      "index": 81,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "GroovyAssignmentToMethodParameter",
                "shortDescription": {
                  "text": "Assignment to method parameter"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "GroovyAssignmentToMethodParameter",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Groovy/Assignment issues",
                      "index": 89,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "GroovyStaticMethodNamingConvention",
                "shortDescription": {
                  "text": "Static method naming convention"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "GroovyStaticMethodNamingConvention",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Groovy/Naming conventions",
                      "index": 29,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "GroovyTrivialIf",
                "shortDescription": {
                  "text": "Redundant 'if' statement"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "GroovyTrivialIf",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Groovy/Control flow issues",
                      "index": 57,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "GroovyPointlessArithmetic",
                "shortDescription": {
                  "text": "Pointless arithmetic expression"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "GroovyPointlessArithmetic",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Groovy/Potentially confusing code constructs",
                      "index": 78,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "GroovyUncheckedAssignmentOfMemberOfRawType",
                "shortDescription": {
                  "text": "Unchecked assignment from members of raw type"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "GroovyUncheckedAssignmentOfMemberOfRawType",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Groovy/Assignment issues",
                      "index": 89,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "GrMethodMayBeStatic",
                "shortDescription": {
                  "text": "Method can be made 'static'"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "GrMethodMayBeStatic",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Groovy/Other",
                      "index": 139,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "GroovyDivideByZero",
                "shortDescription": {
                  "text": "Division by zero"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "GroovyDivideByZero",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Groovy/Probable bugs",
                      "index": 40,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "GrUnnecessarySemicolon",
                "shortDescription": {
                  "text": "Unnecessary semicolon"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "GrUnnecessarySemicolon",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Groovy/Style",
                      "index": 59,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "UnnecessaryQualifiedReference",
                "shortDescription": {
                  "text": "Unnecessary qualified reference"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "UnnecessaryQualifiedReference",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Groovy/Potentially confusing code constructs",
                      "index": 78,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "ChangeToMethod",
                "shortDescription": {
                  "text": "Operator invocation can be replaced with method call"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "note",
                  "parameters": {
                    "suppressToolId": "ChangeToMethod",
                    "ideaSeverity": "INFORMATION",
                    "qodanaSeverity": "Info"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Groovy/Style",
                      "index": 59,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "GroovyBreak",
                "shortDescription": {
                  "text": "'break' statement"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "GroovyBreak",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Groovy/Control flow issues",
                      "index": 57,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "GroovyConstantConditional",
                "shortDescription": {
                  "text": "Constant conditional expression"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "GroovyConstantConditional",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Groovy/Control flow issues",
                      "index": 57,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "GrSwitchExhaustivenessCheck",
                "shortDescription": {
                  "text": "Exhaustiveness check for switch expressions"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "note",
                  "parameters": {
                    "suppressToolId": "GrSwitchExhaustivenessCheck",
                    "ideaSeverity": "WEAK WARNING",
                    "qodanaSeverity": "Moderate"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Groovy/Probable bugs",
                      "index": 40,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "GroovyAssignabilityCheck",
                "shortDescription": {
                  "text": "Incompatible type assignments"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "GroovyAssignabilityCheck",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Groovy/Assignment issues",
                      "index": 89,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "GroovyUntypedAccess",
                "shortDescription": {
                  "text": "Untyped reference expression"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "GroovyUntypedAccess",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Groovy/Probable bugs",
                      "index": 40,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "GroovyResultOfObjectAllocationIgnored",
                "shortDescription": {
                  "text": "Result of object allocation ignored"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "GroovyResultOfObjectAllocationIgnored",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Groovy/Probable bugs",
                      "index": 40,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "GroovyDocCheck",
                "shortDescription": {
                  "text": "Unresolved GroovyDoc reference"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "error",
                  "parameters": {
                    "suppressToolId": "GroovyDocCheck",
                    "ideaSeverity": "ERROR",
                    "qodanaSeverity": "Critical"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Groovy/Probable bugs",
                      "index": 40,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "GroovyUnusedCatchParameter",
                "shortDescription": {
                  "text": "Unused 'catch' parameter"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "GroovyUnusedCatchParameter",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Groovy/Error handling",
                      "index": 81,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "GroovyInstanceMethodNamingConvention",
                "shortDescription": {
                  "text": "Instance method naming convention"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "GroovyInstanceMethodNamingConvention",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Groovy/Naming conventions",
                      "index": 29,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "GroovyDuplicateSwitchBranch",
                "shortDescription": {
                  "text": "Duplicate switch case"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "GroovyDuplicateSwitchBranch",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Groovy/Validity issues",
                      "index": 141,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "GroovySynchronizationOnThis",
                "shortDescription": {
                  "text": "Synchronization on 'this'"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "GroovySynchronizationOnThis",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Groovy/Threading issues",
                      "index": 56,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "GroovyNestedSynchronizedStatement",
                "shortDescription": {
                  "text": "Nested 'synchronized' statement"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "GroovyNestedSynchronizedStatement",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Groovy/Threading issues",
                      "index": 56,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "GroovyGStringKey",
                "shortDescription": {
                  "text": "GString map key"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "GroovyGStringKey",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Groovy/Potentially confusing code constructs",
                      "index": 78,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "GroovyVariableCanBeFinal",
                "shortDescription": {
                  "text": "Variable can be final"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "GroovyVariableCanBeFinal",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Groovy/Data flow",
                      "index": 131,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "GroovyWaitCallNotInLoop",
                "shortDescription": {
                  "text": "'wait()' not in loop"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "GroovyWaitCallNotInLoop",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Groovy/Threading issues",
                      "index": 56,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "GroovyUnnecessaryReturn",
                "shortDescription": {
                  "text": "Unnecessary 'return' statement"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "GroovyUnnecessaryReturn",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Groovy/Control flow issues",
                      "index": 57,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "GroovyConditional",
                "shortDescription": {
                  "text": "Ternary expression"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "GroovyConditional",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Groovy/Style",
                      "index": 59,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "GroovyAccessToStaticFieldLockedOnInstance",
                "shortDescription": {
                  "text": "Access to static field locked on instance data"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "GroovyAccessToStaticFieldLockedOnInstance",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Groovy/Threading issues",
                      "index": 56,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "GrUnnecessaryAlias",
                "shortDescription": {
                  "text": "Unnecessary import alias"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "note",
                  "parameters": {
                    "suppressToolId": "GrUnnecessaryAlias",
                    "ideaSeverity": "WEAK WARNING",
                    "qodanaSeverity": "Moderate"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Groovy/Style",
                      "index": 59,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "GroovyReturnFromFinallyBlock",
                "shortDescription": {
                  "text": "'return' inside 'finally' block"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "GroovyReturnFromFinallyBlock",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Groovy/Error handling",
                      "index": 81,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "GroovyConstructorNamedArguments",
                "shortDescription": {
                  "text": "Named arguments of constructor call"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "GroovyConstructorNamedArguments",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Groovy/Probable bugs",
                      "index": 40,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "GrUnnecessaryNonSealedModifier",
                "shortDescription": {
                  "text": "Unnecessary 'non-sealed' modifier"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "GrUnnecessaryNonSealedModifier",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Groovy/Style",
                      "index": 59,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "GrUnresolvedAccess",
                "shortDescription": {
                  "text": "Unresolved reference expression"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "note",
                  "parameters": {
                    "suppressToolId": "GrUnresolvedAccess",
                    "ideaSeverity": "WEAK WARNING",
                    "qodanaSeverity": "Moderate"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Groovy/Probable bugs",
                      "index": 40,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "GroovyMultipleReturnPointsPerMethod",
                "shortDescription": {
                  "text": "Method with multiple return points"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "GroovyMultipleReturnPointsPerMethod",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Groovy/Method metrics",
                      "index": 109,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "GrUnnecessaryFinalModifier",
                "shortDescription": {
                  "text": "Unnecessary 'final'"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "GrUnnecessaryFinalModifier",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Groovy/Style",
                      "index": 59,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "GroovyUnreachableStatement",
                "shortDescription": {
                  "text": "Unreachable statement"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "GroovyUnreachableStatement",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Groovy/Validity issues",
                      "index": 141,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "GroovyInstanceVariableNamingConvention",
                "shortDescription": {
                  "text": "Instance variable naming convention"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "GroovyInstanceVariableNamingConvention",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Groovy/Naming conventions",
                      "index": 29,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "GroovyConstantIfStatement",
                "shortDescription": {
                  "text": "Constant if statement"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "GroovyConstantIfStatement",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Groovy/Control flow issues",
                      "index": 57,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "GroovyParameterNamingConvention",
                "shortDescription": {
                  "text": "Method parameter naming convention"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "GroovyParameterNamingConvention",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Groovy/Naming conventions",
                      "index": 29,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "GrStringStyleViolation",
                "shortDescription": {
                  "text": "String style violation"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "note",
                  "parameters": {
                    "suppressToolId": "GrStringStyleViolation",
                    "ideaSeverity": "WEAK WARNING",
                    "qodanaSeverity": "Moderate"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Groovy/Style",
                      "index": 59,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "GroovyPointlessBoolean",
                "shortDescription": {
                  "text": "Pointless boolean expression"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "GroovyPointlessBoolean",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Groovy/Potentially confusing code constructs",
                      "index": 78,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "GroovyStaticVariableNamingConvention",
                "shortDescription": {
                  "text": "Static variable naming convention"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "GroovyStaticVariableNamingConvention",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Groovy/Naming conventions",
                      "index": 29,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "GroovyInfiniteLoopStatement",
                "shortDescription": {
                  "text": "Infinite loop statement"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "GroovyInfiniteLoopStatement",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Groovy/Probable bugs",
                      "index": 40,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "GroovyEmptyTryBlock",
                "shortDescription": {
                  "text": "Empty 'try' block"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "GroovyEmptyTryBlock",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Groovy/Error handling",
                      "index": 81,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "GrPermitsClause",
                "shortDescription": {
                  "text": "Non-extending permitted subclasses"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "error",
                  "parameters": {
                    "suppressToolId": "GrPermitsClause",
                    "ideaSeverity": "ERROR",
                    "qodanaSeverity": "Critical"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Groovy/Probable bugs",
                      "index": 40,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "ClashingTraitMethods",
                "shortDescription": {
                  "text": "Clashing trait methods"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "ClashingTraitMethods",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Groovy/Potentially confusing code constructs",
                      "index": 78,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "GroovyOverlyComplexMethod",
                "shortDescription": {
                  "text": "Overly complex method"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "GroovyOverlyComplexMethod",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Groovy/Method metrics",
                      "index": 109,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "TypeCustomizer",
                "shortDescription": {
                  "text": "Type customizer inspection"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "TypeCustomizer",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Groovy/Other",
                      "index": 139,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "GroovyDoubleNegation",
                "shortDescription": {
                  "text": "Double negation"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "GroovyDoubleNegation",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Groovy/Potentially confusing code constructs",
                      "index": 78,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "GroovyIfStatementWithTooManyBranches",
                "shortDescription": {
                  "text": "If statement with too many branches"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "GroovyIfStatementWithTooManyBranches",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Groovy/Control flow issues",
                      "index": 57,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "GrEqualsBetweenInconvertibleTypes",
                "shortDescription": {
                  "text": "'equals()' between objects of inconvertible types"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "GrEqualsBetweenInconvertibleTypes",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Groovy/Probable bugs",
                      "index": 40,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "GroovyEmptySyncBlock",
                "shortDescription": {
                  "text": "Empty 'synchronized' block"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "GroovyEmptySyncBlock",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Groovy/Threading issues",
                      "index": 56,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "GroovyConditionalCanBeConditionalCall",
                "shortDescription": {
                  "text": "Ternary expression can be replaced with safe call"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "note",
                  "parameters": {
                    "suppressToolId": "GroovyConditionalCanBeConditionalCall",
                    "ideaSeverity": "INFORMATION",
                    "qodanaSeverity": "Info"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Groovy/Control flow issues",
                      "index": 57,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "GroovyInfiniteRecursion",
                "shortDescription": {
                  "text": "Infinite recursion"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "GroovyInfiniteRecursion",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Groovy/Probable bugs",
                      "index": 40,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "GroovyUnnecessaryContinue",
                "shortDescription": {
                  "text": "Unnecessary 'continue' statement"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "GroovyUnnecessaryContinue",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Groovy/Control flow issues",
                      "index": 57,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "GroovyNotifyWhileNotSynchronized",
                "shortDescription": {
                  "text": "'notify()' or 'notifyAll()' while not synced"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "GroovyNotifyWhileNotSynchronized",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Groovy/Threading issues",
                      "index": 56,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "GroovyEmptyFinallyBlock",
                "shortDescription": {
                  "text": "Empty 'finally' block"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "GroovyEmptyFinallyBlock",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Groovy/Error handling",
                      "index": 81,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "GroovyUnusedDeclaration",
                "shortDescription": {
                  "text": "Unused declaration"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "GroovyUnusedDeclaration",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Groovy/Declaration redundancy",
                      "index": 149,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "GroovyLoopStatementThatDoesntLoop",
                "shortDescription": {
                  "text": "Loop statement that doesn't loop"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "GroovyLoopStatementThatDoesntLoop",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Groovy/Control flow issues",
                      "index": 57,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "GroovyReturnFromClosureCanBeImplicit",
                "shortDescription": {
                  "text": "'return' statement can be implicit"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "GroovyReturnFromClosureCanBeImplicit",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Groovy/Control flow issues",
                      "index": 57,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              }
            ],
            "language": "en-US",
            "contents": [
              "localizedData",
              "nonLocalizedData"
            ],
            "isComprehensive": false
          },
          {
            "name": "org.jetbrains.idea.maven",
            "version": "242.20224.419",
            "rules": [
              {
                "id": "MavenDuplicatePluginInspection",
                "shortDescription": {
                  "text": "Duplicate plugin declaration"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "MavenDuplicatePluginInspection",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Maven",
                      "index": 20,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "MavenPropertyInParent",
                "shortDescription": {
                  "text": "Usage of properties in parent description"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "MavenPropertyInParent",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Maven",
                      "index": 20,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "MavenDuplicateDependenciesInspection",
                "shortDescription": {
                  "text": "Duplicate Dependencies"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "MavenDuplicateDependenciesInspection",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Maven",
                      "index": 20,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "MavenModelInspection",
                "shortDescription": {
                  "text": "Maven Model Inspection"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "error",
                  "parameters": {
                    "suppressToolId": "MavenModelInspection",
                    "ideaSeverity": "ERROR",
                    "qodanaSeverity": "Critical"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Maven",
                      "index": 20,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "MavenParentMissedVersionInspection",
                "shortDescription": {
                  "text": "Parent version missed"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "error",
                  "parameters": {
                    "suppressToolId": "MavenParentMissedVersionInspection",
                    "ideaSeverity": "ERROR",
                    "qodanaSeverity": "Critical"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Maven",
                      "index": 20,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "MavenRedundantGroupId",
                "shortDescription": {
                  "text": "Redundant groupId"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "MavenRedundantGroupId",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Maven",
                      "index": 20,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              }
            ],
            "language": "en-US",
            "contents": [
              "localizedData",
              "nonLocalizedData"
            ],
            "isComprehensive": false
          },
          {
            "name": "com.intellij",
            "version": "242.20224.419",
            "rules": [
              {
                "id": "HtmlUnknownBooleanAttribute",
                "shortDescription": {
                  "text": "Incorrect boolean attribute"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "HtmlUnknownBooleanAttribute",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "HTML",
                      "index": 26,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "RedundantSuppression",
                "shortDescription": {
                  "text": "Redundant suppression"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "RedundantSuppression",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "General",
                      "index": 36,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "CustomRegExpInspection",
                "shortDescription": {
                  "text": "Custom RegExp inspection"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": true,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "CustomRegExpInspection",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "RegExp",
                      "index": 65,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "IncorrectFormatting",
                "shortDescription": {
                  "text": "Incorrect formatting"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "note",
                  "parameters": {
                    "suppressToolId": "IncorrectFormatting",
                    "ideaSeverity": "WEAK WARNING",
                    "qodanaSeverity": "Moderate"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "General",
                      "index": 36,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "RegExpUnexpectedAnchor",
                "shortDescription": {
                  "text": "Begin or end anchor in unexpected position"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": true,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "RegExpUnexpectedAnchor",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "RegExp",
                      "index": 65,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "SpellCheckingInspection",
                "shortDescription": {
                  "text": "Typo"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "note",
                  "parameters": {
                    "suppressToolId": "SpellCheckingInspection",
                    "ideaSeverity": "TYPO",
                    "qodanaSeverity": "Low"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Proofreading",
                      "index": 74,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "CheckXmlFileWithXercesValidator",
                "shortDescription": {
                  "text": "Failed external validation"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "error",
                  "parameters": {
                    "suppressToolId": "CheckXmlFileWithXercesValidator",
                    "ideaSeverity": "ERROR",
                    "qodanaSeverity": "Critical"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "XML",
                      "index": 75,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "RegExpEscapedMetaCharacter",
                "shortDescription": {
                  "text": "Escaped meta character"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "note",
                  "parameters": {
                    "suppressToolId": "RegExpEscapedMetaCharacter",
                    "ideaSeverity": "INFORMATION",
                    "qodanaSeverity": "Info"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "RegExp",
                      "index": 65,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "XmlUnusedNamespaceDeclaration",
                "shortDescription": {
                  "text": "Unused schema declaration"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "XmlUnusedNamespaceDeclaration",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "XML",
                      "index": 75,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "RegExpSimplifiable",
                "shortDescription": {
                  "text": "Regular expression can be simplified"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "note",
                  "parameters": {
                    "suppressToolId": "RegExpSimplifiable",
                    "ideaSeverity": "WEAK WARNING",
                    "qodanaSeverity": "Moderate"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "RegExp",
                      "index": 65,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "RegExpEmptyAlternationBranch",
                "shortDescription": {
                  "text": "Empty branch in alternation"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": true,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "RegExpEmptyAlternationBranch",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "RegExp",
                      "index": 65,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "RegExpUnnecessaryNonCapturingGroup",
                "shortDescription": {
                  "text": "Unnecessary non-capturing group"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": true,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "RegExpUnnecessaryNonCapturingGroup",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "RegExp",
                      "index": 65,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "TodoComment",
                "shortDescription": {
                  "text": "TODO comment"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "TodoComment",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "General",
                      "index": 36,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "XmlDefaultAttributeValue",
                "shortDescription": {
                  "text": "Redundant attribute with default value"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "XmlDefaultAttributeValue",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "XML",
                      "index": 75,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "JsonSchemaCompliance",
                "shortDescription": {
                  "text": "Compliance with JSON schema"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "JsonSchemaCompliance",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "JSON and JSON5",
                      "index": 108,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "EmptyDirectory",
                "shortDescription": {
                  "text": "Empty directory"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "EmptyDirectory",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "General",
                      "index": 36,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "CheckDtdRefs",
                "shortDescription": {
                  "text": "Unresolved DTD reference"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "error",
                  "parameters": {
                    "suppressToolId": "CheckDtdRefs",
                    "ideaSeverity": "ERROR",
                    "qodanaSeverity": "Critical"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "XML",
                      "index": 75,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "NonAsciiCharacters",
                "shortDescription": {
                  "text": "Non-ASCII characters"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "NonAsciiCharacters",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Internationalization",
                      "index": 113,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "IgnoreFileDuplicateEntry",
                "shortDescription": {
                  "text": "Ignore file duplicates"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "IgnoreFileDuplicateEntry",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Version control",
                      "index": 117,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "JsonStandardCompliance",
                "shortDescription": {
                  "text": "Compliance with JSON standard"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "error",
                  "parameters": {
                    "suppressToolId": "JsonStandardCompliance",
                    "ideaSeverity": "ERROR",
                    "qodanaSeverity": "Critical"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "JSON and JSON5",
                      "index": 108,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "JsonSchemaRefReference",
                "shortDescription": {
                  "text": "Unresolved '$ref' and '$schema' references"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "JsonSchemaRefReference",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "JSON and JSON5",
                      "index": 108,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "SSBasedInspection",
                "shortDescription": {
                  "text": "Structural search inspection"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "SSBasedInspection",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Structural search",
                      "index": 120,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "RegExpSuspiciousBackref",
                "shortDescription": {
                  "text": "Suspicious back reference"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": true,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "RegExpSuspiciousBackref",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "RegExp",
                      "index": 65,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "RegExpSingleCharAlternation",
                "shortDescription": {
                  "text": "Single character alternation"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": true,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "RegExpSingleCharAlternation",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "RegExp",
                      "index": 65,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "CheckTagEmptyBody",
                "shortDescription": {
                  "text": "Empty element content"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "CheckTagEmptyBody",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "XML",
                      "index": 75,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "UnresolvedReference",
                "shortDescription": {
                  "text": "Unresolved reference"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "error",
                  "parameters": {
                    "suppressToolId": "UnresolvedReference",
                    "ideaSeverity": "ERROR",
                    "qodanaSeverity": "Critical"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "RELAX NG",
                      "index": 125,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "HtmlMissingClosingTag",
                "shortDescription": {
                  "text": "Missing closing tag"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "note",
                  "parameters": {
                    "suppressToolId": "HtmlMissingClosingTag",
                    "ideaSeverity": "INFORMATION",
                    "qodanaSeverity": "Info"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "HTML",
                      "index": 26,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "XmlInvalidId",
                "shortDescription": {
                  "text": "Unresolved 'id' reference"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "error",
                  "parameters": {
                    "suppressToolId": "XmlInvalidId",
                    "ideaSeverity": "ERROR",
                    "qodanaSeverity": "Critical"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "XML",
                      "index": 75,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "ReassignedToPlainText",
                "shortDescription": {
                  "text": "Reassigned to plain text"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "ReassignedToPlainText",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "General",
                      "index": 36,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "XmlDeprecatedElement",
                "shortDescription": {
                  "text": "Deprecated symbol"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "XmlDeprecatedElement",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "XML",
                      "index": 75,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "RegExpAnonymousGroup",
                "shortDescription": {
                  "text": "Anonymous capturing group or numeric back reference"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "RegExpAnonymousGroup",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "RegExp",
                      "index": 65,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "XmlUnresolvedReference",
                "shortDescription": {
                  "text": "Unresolved references"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "error",
                  "parameters": {
                    "suppressToolId": "XmlUnresolvedReference",
                    "ideaSeverity": "ERROR",
                    "qodanaSeverity": "Critical"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "XML",
                      "index": 75,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "RegExpRepeatedSpace",
                "shortDescription": {
                  "text": "Consecutive spaces"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": true,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "RegExpRepeatedSpace",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "RegExp",
                      "index": 65,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "CheckEmptyScriptTag",
                "shortDescription": {
                  "text": "Empty tag"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "CheckEmptyScriptTag",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "HTML",
                      "index": 26,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "InconsistentLineSeparators",
                "shortDescription": {
                  "text": "Inconsistent line separators"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "InconsistentLineSeparators",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "General",
                      "index": 36,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "ProblematicWhitespace",
                "shortDescription": {
                  "text": "Problematic whitespace"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "ProblematicWhitespace",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "General",
                      "index": 36,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "HtmlUnknownTarget",
                "shortDescription": {
                  "text": "Unresolved file in a link"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "HtmlUnknownTarget",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "HTML",
                      "index": 26,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "LongLine",
                "shortDescription": {
                  "text": "Line is longer than allowed by code style"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "LongLine",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "General",
                      "index": 36,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "XmlWrongRootElement",
                "shortDescription": {
                  "text": "Wrong root element"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "error",
                  "parameters": {
                    "suppressToolId": "XmlWrongRootElement",
                    "ideaSeverity": "ERROR",
                    "qodanaSeverity": "Critical"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "XML",
                      "index": 75,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "HtmlUnknownAttribute",
                "shortDescription": {
                  "text": "Unknown attribute"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "HtmlUnknownAttribute",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "HTML",
                      "index": 26,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "RegExpRedundantEscape",
                "shortDescription": {
                  "text": "Redundant character escape"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "RegExpRedundantEscape",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "RegExp",
                      "index": 65,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "HtmlExtraClosingTag",
                "shortDescription": {
                  "text": "Redundant closing tag"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "HtmlExtraClosingTag",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "HTML",
                      "index": 26,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "HtmlUnknownTag",
                "shortDescription": {
                  "text": "Unknown tag"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "HtmlUnknownTag",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "HTML",
                      "index": 26,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "XmlHighlighting",
                "shortDescription": {
                  "text": "XML highlighting"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "error",
                  "parameters": {
                    "suppressToolId": "XmlHighlighting",
                    "ideaSeverity": "ERROR",
                    "qodanaSeverity": "Critical"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "XML",
                      "index": 75,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "XmlDuplicatedId",
                "shortDescription": {
                  "text": "Duplicate 'id' attribute"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "error",
                  "parameters": {
                    "suppressToolId": "XmlDuplicatedId",
                    "ideaSeverity": "ERROR",
                    "qodanaSeverity": "Critical"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "XML",
                      "index": 75,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "RegExpDuplicateCharacterInClass",
                "shortDescription": {
                  "text": "Duplicate character in character class"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": true,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "RegExpDuplicateCharacterInClass",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "RegExp",
                      "index": 65,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "XmlUnboundNsPrefix",
                "shortDescription": {
                  "text": "Unbound namespace prefix"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "XmlUnboundNsPrefix",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "XML",
                      "index": 75,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "RequiredAttributes",
                "shortDescription": {
                  "text": "Missing required attribute"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "RequiredAttributes",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "HTML",
                      "index": 26,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "RegExpRedundantClassElement",
                "shortDescription": {
                  "text": "Redundant '\\d', '[:digit:]', or '\\D' class elements"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": true,
                  "level": "note",
                  "parameters": {
                    "suppressToolId": "RegExpRedundantClassElement",
                    "ideaSeverity": "WEAK WARNING",
                    "qodanaSeverity": "Moderate"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "RegExp",
                      "index": 65,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "XmlPathReference",
                "shortDescription": {
                  "text": "Unresolved file reference"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "error",
                  "parameters": {
                    "suppressToolId": "XmlPathReference",
                    "ideaSeverity": "ERROR",
                    "qodanaSeverity": "Critical"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "XML",
                      "index": 75,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "Json5StandardCompliance",
                "shortDescription": {
                  "text": "Compliance with JSON5 standard"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "error",
                  "parameters": {
                    "suppressToolId": "Json5StandardCompliance",
                    "ideaSeverity": "ERROR",
                    "qodanaSeverity": "Critical"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "JSON and JSON5",
                      "index": 108,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "HtmlWrongAttributeValue",
                "shortDescription": {
                  "text": "Wrong attribute value"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "HtmlWrongAttributeValue",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "HTML",
                      "index": 26,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "LossyEncoding",
                "shortDescription": {
                  "text": "Lossy encoding"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "LossyEncoding",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Internationalization",
                      "index": 113,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "JsonSchemaDeprecation",
                "shortDescription": {
                  "text": "Deprecated JSON property"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "note",
                  "parameters": {
                    "suppressToolId": "JsonSchemaDeprecation",
                    "ideaSeverity": "WEAK WARNING",
                    "qodanaSeverity": "Moderate"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "JSON and JSON5",
                      "index": 108,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "CheckValidXmlInScriptTagBody",
                "shortDescription": {
                  "text": "Malformed content of 'script' tag"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "error",
                  "parameters": {
                    "suppressToolId": "CheckValidXmlInScriptTagBody",
                    "ideaSeverity": "ERROR",
                    "qodanaSeverity": "Critical"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "HTML",
                      "index": 26,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "HtmlUnknownAnchorTarget",
                "shortDescription": {
                  "text": "Unresolved fragment in a link"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "HtmlUnknownAnchorTarget",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "HTML",
                      "index": 26,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "Annotator",
                "shortDescription": {
                  "text": "Annotator"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "error",
                  "parameters": {
                    "suppressToolId": "Annotator",
                    "ideaSeverity": "ERROR",
                    "qodanaSeverity": "Critical"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "General",
                      "index": 36,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "JsonDuplicatePropertyKeys",
                "shortDescription": {
                  "text": "Duplicate keys in object literals"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "JsonDuplicatePropertyKeys",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "JSON and JSON5",
                      "index": 108,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "RegExpRedundantNestedCharacterClass",
                "shortDescription": {
                  "text": "Redundant nested character class"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": true,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "RegExpRedundantNestedCharacterClass",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "RegExp",
                      "index": 65,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "RegExpOctalEscape",
                "shortDescription": {
                  "text": "Octal escape"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "note",
                  "parameters": {
                    "suppressToolId": "RegExpOctalEscape",
                    "ideaSeverity": "INFORMATION",
                    "qodanaSeverity": "Info"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "RegExp",
                      "index": 65,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "UnusedDefine",
                "shortDescription": {
                  "text": "Unused define"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "UnusedDefine",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "RELAX NG",
                      "index": 125,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "RegExpDuplicateAlternationBranch",
                "shortDescription": {
                  "text": "Duplicate branch in alternation"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": true,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "RegExpDuplicateAlternationBranch",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "RegExp",
                      "index": 65,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              }
            ],
            "language": "en-US",
            "contents": [
              "localizedData",
              "nonLocalizedData"
            ],
            "isComprehensive": false
          },
          {
            "name": "com.intellij.java-i18n",
            "version": "242.20224.419",
            "rules": [
              {
                "id": "UnusedMessageFormatParameter",
                "shortDescription": {
                  "text": "Missing message format parameter"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "UnusedMessageFormatParameter",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Properties files",
                      "index": 28,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "InconsistentResourceBundle",
                "shortDescription": {
                  "text": "Inconsistent resource bundle"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "error",
                  "parameters": {
                    "suppressToolId": "InconsistentResourceBundle",
                    "ideaSeverity": "ERROR",
                    "qodanaSeverity": "Critical"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Properties files",
                      "index": 28,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "UnresolvedPropertyKey",
                "shortDescription": {
                  "text": "Invalid property key"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": true,
                  "level": "error",
                  "parameters": {
                    "suppressToolId": "UnresolvedPropertyKey",
                    "ideaSeverity": "ERROR",
                    "qodanaSeverity": "Critical"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Properties files",
                      "index": 127,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "ConvertToBasicLatin",
                "shortDescription": {
                  "text": "Non-Basic Latin character"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "note",
                  "parameters": {
                    "suppressToolId": "ConvertToBasicLatin",
                    "ideaSeverity": "INFORMATION",
                    "qodanaSeverity": "Info"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Internationalization",
                      "index": 7,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "HardCodedStringLiteral",
                "shortDescription": {
                  "text": "Hardcoded strings"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "HardCodedStringLiteral",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Internationalization",
                      "index": 7,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "DialogTitleCapitalization",
                "shortDescription": {
                  "text": "Incorrect string capitalization"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": true,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "DialogTitleCapitalization",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Internationalization",
                      "index": 7,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "SuspiciousLocalesLanguages",
                "shortDescription": {
                  "text": "Suspicious resource bundle locale languages"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "SuspiciousLocalesLanguages",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Properties files",
                      "index": 28,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "DuplicateStringLiteralInspection",
                "shortDescription": {
                  "text": "Duplicate string literal"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "DuplicateStringLiteralInspection",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/Internationalization",
                      "index": 7,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              }
            ],
            "language": "en-US",
            "contents": [
              "localizedData",
              "nonLocalizedData"
            ],
            "isComprehensive": false
          },
          {
            "name": "org.jetbrains.plugins.gradle",
            "version": "242.20224.419",
            "rules": [
              {
                "id": "ForeignDelegate",
                "shortDescription": {
                  "text": "Possibly misplaced call to Gradle method"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "note",
                  "parameters": {
                    "suppressToolId": "ForeignDelegate",
                    "ideaSeverity": "WEAK WARNING",
                    "qodanaSeverity": "Moderate"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Gradle/Probable bugs",
                      "index": 33,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "IncorrectPluginDslStructure",
                "shortDescription": {
                  "text": "Plugin DSL structure"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "error",
                  "parameters": {
                    "suppressToolId": "IncorrectPluginDslStructure",
                    "ideaSeverity": "ERROR",
                    "qodanaSeverity": "Critical"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Gradle/Validity issues",
                      "index": 37,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "DependencyNotationArgument",
                "shortDescription": {
                  "text": "Unrecognized dependency notation"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "DependencyNotationArgument",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Gradle/Probable bugs",
                      "index": 33,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "UnusedVersionCatalogEntry",
                "shortDescription": {
                  "text": "Unused version catalog entry"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "UnusedVersionCatalogEntry",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Gradle/Style",
                      "index": 121,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "MultipleRepositoryUrls",
                "shortDescription": {
                  "text": "Multiple repository urls"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "MultipleRepositoryUrls",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Gradle/Probable bugs",
                      "index": 33,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "BintrayPublishingPlugin",
                "shortDescription": {
                  "text": "Bintray publishing plugin may stop working on May 1st, 2021"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "BintrayPublishingPlugin",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Gradle/Probable bugs",
                      "index": 33,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "DeprecatedConfigurations",
                "shortDescription": {
                  "text": "Deprecated configurations"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "DeprecatedConfigurations",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Gradle/Validity issues",
                      "index": 37,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "JCenterRepository",
                "shortDescription": {
                  "text": "Builds will no longer be able to resolve artifacts from JCenter after February 1st, 2022"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "JCenterRepository",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Gradle/Probable bugs",
                      "index": 33,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "ConfigurationAvoidance",
                "shortDescription": {
                  "text": "Configuration avoidance"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "ConfigurationAvoidance",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Gradle/Best practises",
                      "index": 147,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              }
            ],
            "language": "en-US",
            "contents": [
              "localizedData",
              "nonLocalizedData"
            ],
            "isComprehensive": false
          },
          {
            "name": "org.editorconfig.editorconfigjetbrains",
            "version": "242.20224.419",
            "rules": [
              {
                "id": "EditorConfigNumerousWildcards",
                "shortDescription": {
                  "text": "Too many wildcards"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "note",
                  "parameters": {
                    "suppressToolId": "EditorConfigNumerousWildcards",
                    "ideaSeverity": "WEAK WARNING",
                    "qodanaSeverity": "Moderate"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "EditorConfig",
                      "index": 35,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "EditorConfigKeyCorrectness",
                "shortDescription": {
                  "text": "Unknown property"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "EditorConfigKeyCorrectness",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "EditorConfig",
                      "index": 35,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "EditorConfigEncoding",
                "shortDescription": {
                  "text": "File encoding doesn't match EditorConfig charset"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "EditorConfigEncoding",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "EditorConfig",
                      "index": 35,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "EditorConfigEmptyHeader",
                "shortDescription": {
                  "text": "Empty header"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "error",
                  "parameters": {
                    "suppressToolId": "EditorConfigEmptyHeader",
                    "ideaSeverity": "ERROR",
                    "qodanaSeverity": "Critical"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "EditorConfig",
                      "index": 35,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "EditorConfigMissingRequiredDeclaration",
                "shortDescription": {
                  "text": "Required declarations are missing"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "error",
                  "parameters": {
                    "suppressToolId": "EditorConfigMissingRequiredDeclaration",
                    "ideaSeverity": "ERROR",
                    "qodanaSeverity": "Critical"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "EditorConfig",
                      "index": 35,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "EditorConfigSpaceInHeader",
                "shortDescription": {
                  "text": "Space in file pattern"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "note",
                  "parameters": {
                    "suppressToolId": "EditorConfigSpaceInHeader",
                    "ideaSeverity": "WEAK WARNING",
                    "qodanaSeverity": "Moderate"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "EditorConfig",
                      "index": 35,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "EditorConfigOptionRedundancy",
                "shortDescription": {
                  "text": "Redundant property"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "EditorConfigOptionRedundancy",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "EditorConfig",
                      "index": 35,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "EditorConfigPartialOverride",
                "shortDescription": {
                  "text": "Overlapping sections"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "note",
                  "parameters": {
                    "suppressToolId": "EditorConfigPartialOverride",
                    "ideaSeverity": "WEAK WARNING",
                    "qodanaSeverity": "Moderate"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "EditorConfig",
                      "index": 35,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "EditorConfigListAcceptability",
                "shortDescription": {
                  "text": "Unexpected value list"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "error",
                  "parameters": {
                    "suppressToolId": "EditorConfigListAcceptability",
                    "ideaSeverity": "ERROR",
                    "qodanaSeverity": "Critical"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "EditorConfig",
                      "index": 35,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "EditorConfigPatternEnumerationRedundancy",
                "shortDescription": {
                  "text": "Unnecessary braces"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "error",
                  "parameters": {
                    "suppressToolId": "EditorConfigPatternEnumerationRedundancy",
                    "ideaSeverity": "ERROR",
                    "qodanaSeverity": "Critical"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "EditorConfig",
                      "index": 35,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "EditorConfigPairAcceptability",
                "shortDescription": {
                  "text": "Unexpected key-value pair"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "error",
                  "parameters": {
                    "suppressToolId": "EditorConfigPairAcceptability",
                    "ideaSeverity": "ERROR",
                    "qodanaSeverity": "Critical"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "EditorConfig",
                      "index": 35,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "EditorConfigNoMatchingFiles",
                "shortDescription": {
                  "text": "No matching files"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "EditorConfigNoMatchingFiles",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "EditorConfig",
                      "index": 35,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "EditorConfigWildcardRedundancy",
                "shortDescription": {
                  "text": "Redundant wildcard"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "EditorConfigWildcardRedundancy",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "EditorConfig",
                      "index": 35,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "EditorConfigHeaderUniqueness",
                "shortDescription": {
                  "text": "EditorConfig section is not unique"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "EditorConfigHeaderUniqueness",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "EditorConfig",
                      "index": 35,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "EditorConfigValueCorrectness",
                "shortDescription": {
                  "text": "Invalid property value"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "error",
                  "parameters": {
                    "suppressToolId": "EditorConfigValueCorrectness",
                    "ideaSeverity": "ERROR",
                    "qodanaSeverity": "Critical"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "EditorConfig",
                      "index": 35,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "EditorConfigUnusedDeclaration",
                "shortDescription": {
                  "text": "Unused declaration"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "EditorConfigUnusedDeclaration",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "EditorConfig",
                      "index": 35,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "EditorConfigRootDeclarationUniqueness",
                "shortDescription": {
                  "text": "Extra top-level declaration"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "error",
                  "parameters": {
                    "suppressToolId": "EditorConfigRootDeclarationUniqueness",
                    "ideaSeverity": "ERROR",
                    "qodanaSeverity": "Critical"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "EditorConfig",
                      "index": 35,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "EditorConfigRootDeclarationCorrectness",
                "shortDescription": {
                  "text": "Unexpected top-level declaration"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "error",
                  "parameters": {
                    "suppressToolId": "EditorConfigRootDeclarationCorrectness",
                    "ideaSeverity": "ERROR",
                    "qodanaSeverity": "Critical"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "EditorConfig",
                      "index": 35,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "EditorConfigPatternRedundancy",
                "shortDescription": {
                  "text": "Duplicate or redundant pattern"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "EditorConfigPatternRedundancy",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "EditorConfig",
                      "index": 35,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "EditorConfigDeprecatedDescriptor",
                "shortDescription": {
                  "text": "Deprecated property"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "EditorConfigDeprecatedDescriptor",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "EditorConfig",
                      "index": 35,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "EditorConfigShadowedOption",
                "shortDescription": {
                  "text": "Overridden property"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "EditorConfigShadowedOption",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "EditorConfig",
                      "index": 35,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "EditorConfigValueUniqueness",
                "shortDescription": {
                  "text": "Non-unique list value"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "error",
                  "parameters": {
                    "suppressToolId": "EditorConfigValueUniqueness",
                    "ideaSeverity": "ERROR",
                    "qodanaSeverity": "Critical"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "EditorConfig",
                      "index": 35,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "EditorConfigUnexpectedComma",
                "shortDescription": {
                  "text": "Unexpected comma"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "error",
                  "parameters": {
                    "suppressToolId": "EditorConfigUnexpectedComma",
                    "ideaSeverity": "ERROR",
                    "qodanaSeverity": "Critical"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "EditorConfig",
                      "index": 35,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "EditorConfigCharClassRedundancy",
                "shortDescription": {
                  "text": "Unnecessary character class"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "EditorConfigCharClassRedundancy",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "EditorConfig",
                      "index": 35,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "EditorConfigEmptySection",
                "shortDescription": {
                  "text": "Empty section"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "EditorConfigEmptySection",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "EditorConfig",
                      "index": 35,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "EditorConfigShadowingOption",
                "shortDescription": {
                  "text": "Overriding property"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "EditorConfigShadowingOption",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "EditorConfig",
                      "index": 35,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "EditorConfigReferenceCorrectness",
                "shortDescription": {
                  "text": "Invalid reference"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "error",
                  "parameters": {
                    "suppressToolId": "EditorConfigReferenceCorrectness",
                    "ideaSeverity": "ERROR",
                    "qodanaSeverity": "Critical"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "EditorConfig",
                      "index": 35,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "EditorConfigVerifyByCore",
                "shortDescription": {
                  "text": "Invalid .editorconfig file"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "error",
                  "parameters": {
                    "suppressToolId": "EditorConfigVerifyByCore",
                    "ideaSeverity": "ERROR",
                    "qodanaSeverity": "Critical"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "EditorConfig",
                      "index": 35,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "EditorConfigCharClassLetterRedundancy",
                "shortDescription": {
                  "text": "Duplicate character class letter"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "EditorConfigCharClassLetterRedundancy",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "EditorConfig",
                      "index": 35,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              }
            ],
            "language": "en-US",
            "contents": [
              "localizedData",
              "nonLocalizedData"
            ],
            "isComprehensive": false
          },
          {
            "name": "com.intellij.properties",
            "version": "242.20224.419",
            "rules": [
              {
                "id": "UseEllipsisInPropertyInspection",
                "shortDescription": {
                  "text": "Three dot characters instead of the ellipsis"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "UseEllipsisInPropertyInspection",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Properties files",
                      "index": 28,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "AlphaUnsortedPropertiesFile",
                "shortDescription": {
                  "text": "Properties file or resource bundle is alphabetically unsorted"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "note",
                  "parameters": {
                    "suppressToolId": "AlphaUnsortedPropertiesFile",
                    "ideaSeverity": "WEAK WARNING",
                    "qodanaSeverity": "Moderate"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Properties files",
                      "index": 28,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "TrailingSpacesInProperty",
                "shortDescription": {
                  "text": "Trailing spaces in property"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "TrailingSpacesInProperty",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Properties files",
                      "index": 28,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "WrongPropertyKeyValueDelimiter",
                "shortDescription": {
                  "text": "Property key/value delimiter doesn't match code style settings"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "note",
                  "parameters": {
                    "suppressToolId": "WrongPropertyKeyValueDelimiter",
                    "ideaSeverity": "WEAK WARNING",
                    "qodanaSeverity": "Moderate"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Properties files",
                      "index": 28,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "DuplicatePropertyInspection",
                "shortDescription": {
                  "text": "Duplicate property"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "DuplicatePropertyInspection",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Properties files",
                      "index": 28,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "UnusedProperty",
                "shortDescription": {
                  "text": "Unused property"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "UnusedProperty",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Properties files",
                      "index": 28,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              }
            ],
            "language": "en-US",
            "contents": [
              "localizedData",
              "nonLocalizedData"
            ],
            "isComprehensive": false
          },
          {
            "name": "org.jetbrains.plugins.javaFX",
            "version": "242.20224.419",
            "rules": [
              {
                "id": "JavaFxEventHandler",
                "shortDescription": {
                  "text": "Event handler method signature problems"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "JavaFxEventHandler",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "JavaFX",
                      "index": 61,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "JavaFxRedundantPropertyValue",
                "shortDescription": {
                  "text": "JavaFX redundant property values"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "JavaFxRedundantPropertyValue",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "JavaFX",
                      "index": 61,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "JavaFxUnresolvedFxIdReference",
                "shortDescription": {
                  "text": "Unresolved fx:id attribute reference"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "JavaFxUnresolvedFxIdReference",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "JavaFX",
                      "index": 61,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "JavaFxUnusedImports",
                "shortDescription": {
                  "text": "JavaFX unused imports"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "JavaFxUnusedImports",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "JavaFX",
                      "index": 61,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "JavaFxDefaultTag",
                "shortDescription": {
                  "text": "Unnecessary default tag"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "JavaFxDefaultTag",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "JavaFX",
                      "index": 61,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "JavaFxColorRgb",
                "shortDescription": {
                  "text": "Color component is out of range"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "JavaFxColorRgb",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "JavaFX",
                      "index": 61,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "JavaFxResourcePropertyValue",
                "shortDescription": {
                  "text": "The value from properties file is incompatible with the attribute type"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "JavaFxResourcePropertyValue",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "JavaFX",
                      "index": 61,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              }
            ],
            "language": "en-US",
            "contents": [
              "localizedData",
              "nonLocalizedData"
            ],
            "isComprehensive": false
          },
          {
            "name": "TestNG-J",
            "version": "242.20224.419",
            "rules": [
              {
                "id": "ConvertJavadoc",
                "shortDescription": {
                  "text": "TestNG Javadoc can be converted to annotations"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "ConvertJavadoc",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/TestNG",
                      "index": 62,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "DataProviderReturnType",
                "shortDescription": {
                  "text": "Invalid data provider return type"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": true,
                  "level": "error",
                  "parameters": {
                    "suppressToolId": "DataProviderReturnType",
                    "ideaSeverity": "ERROR",
                    "qodanaSeverity": "Critical"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/TestNG",
                      "index": 62,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "dependsOnMethodTestNG",
                "shortDescription": {
                  "text": "Illegal method name passed to 'dependsOnMethods'"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": true,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "dependsOnMethodTestNG",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/TestNG",
                      "index": 62,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "MalformedDataProvider",
                "shortDescription": {
                  "text": "Data provider problems"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": true,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "MalformedDataProvider",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/TestNG",
                      "index": 62,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "groupsTestNG",
                "shortDescription": {
                  "text": "Undefined group name"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": true,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "groupsTestNG",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/TestNG",
                      "index": 62,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "JUnitTestNG",
                "shortDescription": {
                  "text": "JUnit Test can be converted to TestNG"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "JUnitTestNG",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/TestNG",
                      "index": 62,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "ExpectedExceptionNeverThrownTestNG",
                "shortDescription": {
                  "text": "Expected exception never thrown in test method body"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "ExpectedExceptionNeverThrownTestNG",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/TestNG",
                      "index": 62,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "UndeclaredTests",
                "shortDescription": {
                  "text": "Undeclared test"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "UndeclaredTests",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/TestNG",
                      "index": 62,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "ConvertOldAnnotations",
                "shortDescription": {
                  "text": "Old TestNG annotation @Configuration is used"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "ConvertOldAnnotations",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/TestNG",
                      "index": 62,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "DuplicatedDataProviderNames",
                "shortDescription": {
                  "text": "Duplicated data provider names"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": true,
                  "level": "error",
                  "parameters": {
                    "suppressToolId": "DuplicatedDataProviderNames",
                    "ideaSeverity": "ERROR",
                    "qodanaSeverity": "Critical"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Java/TestNG",
                      "index": 62,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              }
            ],
            "language": "en-US",
            "contents": [
              "localizedData",
              "nonLocalizedData"
            ],
            "isComprehensive": false
          },
          {
            "name": "JUnit",
            "version": "242.20224.419",
            "rules": [
              {
                "id": "ExpectedExceptionNeverThrown",
                "shortDescription": {
                  "text": "Expected exception never thrown in test method body"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "ExpectedExceptionNeverThrown",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "JUnit",
                      "index": 67,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "JUnitMixedFramework",
                "shortDescription": {
                  "text": "JUnit API usage from multiple versions in a single TestCase"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "JUnitMixedFramework",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "JUnit",
                      "index": 67,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "AssertEqualsMayBeAssertSame",
                "shortDescription": {
                  "text": "'assertEquals()' may be 'assertSame()'"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "AssertEqualsMayBeAssertSame",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "JUnit",
                      "index": 67,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "SuperTearDownInFinally",
                "shortDescription": {
                  "text": "JUnit 3 'super.tearDown()' is not called from 'finally' block"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "SuperTearDownInFinally",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "JUnit",
                      "index": 67,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "AssertEqualsCalledOnArray",
                "shortDescription": {
                  "text": "'assertEquals()' called on array"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "AssertEqualsCalledOnArray",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "JUnit",
                      "index": 67,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "JUnit5Converter",
                "shortDescription": {
                  "text": "JUnit 4 test can be JUnit 5"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "JUnit5Converter",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "JUnit",
                      "index": 67,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "IgnoredJUnitTest",
                "shortDescription": {
                  "text": "JUnit test annotated with '@Ignore'/'@Disabled'"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "IgnoredJUnitTest",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "JUnit",
                      "index": 67,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "MultipleExceptionsDeclaredOnTestMethod",
                "shortDescription": {
                  "text": "Multiple exceptions declared on test method"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "MultipleExceptionsDeclaredOnTestMethod",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "JUnit",
                      "index": 67,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "UseOfObsoleteAssert",
                "shortDescription": {
                  "text": "Usage of obsolete 'junit.framework.Assert' method"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "UseOfObsoleteAssert",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "JUnit",
                      "index": 67,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "JUnit3StyleTestMethodInJUnit4Class",
                "shortDescription": {
                  "text": "Old style JUnit test method in JUnit 4 class"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "JUnit3StyleTestMethodInJUnit4Class",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "JUnit",
                      "index": 67,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "JUnitMalformedDeclaration",
                "shortDescription": {
                  "text": "JUnit malformed declaration"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "error",
                  "parameters": {
                    "suppressToolId": "JUnitMalformedDeclaration",
                    "ideaSeverity": "ERROR",
                    "qodanaSeverity": "Critical"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "JUnit",
                      "index": 67,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "JUnit5AssertionsConverter",
                "shortDescription": {
                  "text": "JUnit 5 obsolete assertions"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "JUnit5AssertionsConverter",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "JUnit",
                      "index": 67,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "ParameterizedParametersStaticCollection",
                "shortDescription": {
                  "text": "Parameterized test class without data provider method"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "ParameterizedParametersStaticCollection",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "JUnit",
                      "index": 67,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "Junit4RunWithInspection",
                "shortDescription": {
                  "text": "'@RunWith' annotation already exists in a parent class"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "Junit4RunWithInspection",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "JUnit",
                      "index": 67,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "Junit4Converter",
                "shortDescription": {
                  "text": "JUnit 3 test can be JUnit 4"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "note",
                  "parameters": {
                    "suppressToolId": "Junit4Converter",
                    "ideaSeverity": "INFORMATION",
                    "qodanaSeverity": "Info"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "JUnit",
                      "index": 67,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "MigrateAssertToMatcherAssert",
                "shortDescription": {
                  "text": "JUnit assertion can be 'assertThat()' call"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "MigrateAssertToMatcherAssert",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "JUnit",
                      "index": 67,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              }
            ],
            "language": "en-US",
            "contents": [
              "localizedData",
              "nonLocalizedData"
            ],
            "isComprehensive": false
          },
          {
            "name": "com.intellij.uiDesigner",
            "version": "242.20224.419",
            "rules": [
              {
                "id": "InvalidPropertyKeyForm",
                "shortDescription": {
                  "text": "Invalid property key in a UI form"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "InvalidPropertyKeyForm",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "UI form",
                      "index": 69,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "MissingMnemonic",
                "shortDescription": {
                  "text": "Missing mnemonics"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "MissingMnemonic",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "UI form",
                      "index": 69,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "NoScrollPane",
                "shortDescription": {
                  "text": "Scrollable component not in JScrollPane"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "NoScrollPane",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "UI form",
                      "index": 69,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "FormSpellChecking",
                "shortDescription": {
                  "text": "Typo in a UI form"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "FormSpellChecking",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "UI form",
                      "index": 69,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "I18nForm",
                "shortDescription": {
                  "text": "Hardcoded string literal in a UI form"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "I18nForm",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "UI form",
                      "index": 69,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "BoundFieldAssignment",
                "shortDescription": {
                  "text": "Assignment to UI-bound field"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "BoundFieldAssignment",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "UI form",
                      "index": 69,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "NoLabelFor",
                "shortDescription": {
                  "text": "No label for component"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "NoLabelFor",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "UI form",
                      "index": 69,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "OneButtonGroup",
                "shortDescription": {
                  "text": "Button group with one button"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "OneButtonGroup",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "UI form",
                      "index": 69,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "DuplicateMnemonic",
                "shortDescription": {
                  "text": "Duplicate mnemonics"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "DuplicateMnemonic",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "UI form",
                      "index": 69,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "NoButtonGroup",
                "shortDescription": {
                  "text": "Radio button not in a group"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "NoButtonGroup",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "UI form",
                      "index": 69,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              }
            ],
            "language": "en-US",
            "contents": [
              "localizedData",
              "nonLocalizedData"
            ],
            "isComprehensive": false
          },
          {
            "name": "com.android.tools.design",
            "version": "242.20224.419",
            "rules": [
              {
                "id": "TransitionPropertiesLabel",
                "shortDescription": {
                  "text": "Transition property label parameter not set"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "TransitionPropertiesLabel",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Compose preview",
                      "index": 72,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "ComposePreviewNeedsComposableAnnotation",
                "shortDescription": {
                  "text": "Preview used on a non-Composable function"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "error",
                  "parameters": {
                    "suppressToolId": "ComposePreviewNeedsComposableAnnotation",
                    "ideaSeverity": "ERROR",
                    "qodanaSeverity": "Critical"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Compose preview",
                      "index": 72,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "LocaleText",
                "shortDescription": {
                  "text": "Locale text"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "LocaleText",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Android/Lint/Screen sizes",
                      "index": 88,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "ButtonSize",
                "shortDescription": {
                  "text": "Button size"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "ButtonSize",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Android/Lint/Screen sizes",
                      "index": 88,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "UpdateTransitionLabel",
                "shortDescription": {
                  "text": "Transition label parameter not set"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "UpdateTransitionLabel",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Compose preview",
                      "index": 72,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "CrossfadeLabel",
                "shortDescription": {
                  "text": "Crossfade label parameter not set"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "CrossfadeLabel",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Compose preview",
                      "index": 72,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "WearTilePreviewComposableAnnotationIsNotSupported",
                "shortDescription": {
                  "text": "The @Composable annotation is not supported on Tile previews"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "error",
                  "parameters": {
                    "suppressToolId": "WearTilePreviewComposableAnnotationIsNotSupported",
                    "ideaSeverity": "ERROR",
                    "qodanaSeverity": "Critical"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Wear Tile preview",
                      "index": 111,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "Bounds",
                "shortDescription": {
                  "text": "Bounds"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "Bounds",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Android/Lint/Screen sizes",
                      "index": 88,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "WearMargin",
                "shortDescription": {
                  "text": "Wear margins"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "WearMargin",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Android/Lint/Screen sizes",
                      "index": 88,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "GlancePreviewDimensionRespectsLimit",
                "shortDescription": {
                  "text": "Preview dimension has a minimum and a maximum limit"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "GlancePreviewDimensionRespectsLimit",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Glance Preview",
                      "index": 129,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "InfinitePropertiesLabel",
                "shortDescription": {
                  "text": "InfiniteTransition property label parameter not set"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "InfinitePropertiesLabel",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Compose preview",
                      "index": 72,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "PreviewShouldNotBeCalledRecursively",
                "shortDescription": {
                  "text": "Recursive call to preview function"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "note",
                  "parameters": {
                    "suppressToolId": "PreviewShouldNotBeCalledRecursively",
                    "ideaSeverity": "WEAK WARNING",
                    "qodanaSeverity": "Moderate"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Compose preview",
                      "index": 72,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "WearTilePreviewNotSupportedInUnitTestFiles",
                "shortDescription": {
                  "text": "Preview is not supported in unit test files"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "error",
                  "parameters": {
                    "suppressToolId": "WearTilePreviewNotSupportedInUnitTestFiles",
                    "ideaSeverity": "ERROR",
                    "qodanaSeverity": "Critical"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Wear Tile preview",
                      "index": 111,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "PreviewMultipleParameterProviders",
                "shortDescription": {
                  "text": "Multiple @PreviewParameter are not allowed"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "error",
                  "parameters": {
                    "suppressToolId": "PreviewMultipleParameterProviders",
                    "ideaSeverity": "ERROR",
                    "qodanaSeverity": "Critical"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Compose preview",
                      "index": 72,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "WearTilePreviewContextComesFromParameter",
                "shortDescription": {
                  "text": "The Context must come from the Preview method parameters"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "error",
                  "parameters": {
                    "suppressToolId": "WearTilePreviewContextComesFromParameter",
                    "ideaSeverity": "ERROR",
                    "qodanaSeverity": "Critical"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Wear Tile preview",
                      "index": 111,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "PreviewAnnotationInFunctionWithParameters",
                "shortDescription": {
                  "text": "Preview used on a Composable function with parameters"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "error",
                  "parameters": {
                    "suppressToolId": "PreviewAnnotationInFunctionWithParameters",
                    "ideaSeverity": "ERROR",
                    "qodanaSeverity": "Critical"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Compose preview",
                      "index": 72,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "WearTilePreviewMethodIsAnnotatedWithTilePreviewAnnotation",
                "shortDescription": {
                  "text": "In order to preview a Tile, the Preview annotation must be from androidx.wear.tiles.tooling.preview"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "error",
                  "parameters": {
                    "suppressToolId": "WearTilePreviewMethodIsAnnotatedWithTilePreviewAnnotation",
                    "ideaSeverity": "ERROR",
                    "qodanaSeverity": "Critical"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Wear Tile preview",
                      "index": 111,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "PreviewPickerAnnotation",
                "shortDescription": {
                  "text": "Preview device parameter must have valid syntax"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "error",
                  "parameters": {
                    "suppressToolId": "PreviewPickerAnnotation",
                    "ideaSeverity": "ERROR",
                    "qodanaSeverity": "Critical"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Compose preview",
                      "index": 72,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "AccessibilityTestFramework",
                "shortDescription": {
                  "text": "Accessibility"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "AccessibilityTestFramework",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Android/Lint/Screen sizes",
                      "index": 88,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "AnimateAsStateLabel",
                "shortDescription": {
                  "text": "animate*AsState label parameter not set"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "AnimateAsStateLabel",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Compose preview",
                      "index": 72,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "GlancePreviewMustBeTopLevelFunction",
                "shortDescription": {
                  "text": "Glance Preview must be a top level declaration or in a top level class with a default constructor."
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "error",
                  "parameters": {
                    "suppressToolId": "GlancePreviewMustBeTopLevelFunction",
                    "ideaSeverity": "ERROR",
                    "qodanaSeverity": "Critical"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Glance Preview",
                      "index": 129,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "BottomAppBar",
                "shortDescription": {
                  "text": "Bottom app bar"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "BottomAppBar",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Android/Lint/Screen sizes",
                      "index": 88,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "PreviewFontScaleMustBeGreaterThanZero",
                "shortDescription": {
                  "text": "Non-positive fontScale parameter"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "error",
                  "parameters": {
                    "suppressToolId": "PreviewFontScaleMustBeGreaterThanZero",
                    "ideaSeverity": "ERROR",
                    "qodanaSeverity": "Critical"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Compose preview",
                      "index": 72,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "GlancePreviewNotSupportedInUnitTestFiles",
                "shortDescription": {
                  "text": "Glance Preview is not supported in unit test files"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "error",
                  "parameters": {
                    "suppressToolId": "GlancePreviewNotSupportedInUnitTestFiles",
                    "ideaSeverity": "ERROR",
                    "qodanaSeverity": "Critical"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Glance Preview",
                      "index": 129,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "PreviewApiLevelMustBeValid",
                "shortDescription": {
                  "text": "Preview apiLevel must correspond to a supported API level"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "error",
                  "parameters": {
                    "suppressToolId": "PreviewApiLevelMustBeValid",
                    "ideaSeverity": "ERROR",
                    "qodanaSeverity": "Critical"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Compose preview",
                      "index": 72,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "BottomNav",
                "shortDescription": {
                  "text": "Bottom nav"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "BottomNav",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Android/Lint/Screen sizes",
                      "index": 88,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "AnimatedContentLabel",
                "shortDescription": {
                  "text": "AnimatedContent label parameter not set"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "AnimatedContentLabel",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Compose preview",
                      "index": 72,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "GlancePreviewNeedsComposableAnnotation",
                "shortDescription": {
                  "text": "Glance Preview used on a non-Composable function"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "error",
                  "parameters": {
                    "suppressToolId": "GlancePreviewNeedsComposableAnnotation",
                    "ideaSeverity": "ERROR",
                    "qodanaSeverity": "Critical"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Glance Preview",
                      "index": 129,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "WearTilePreviewDeviceSpec",
                "shortDescription": {
                  "text": "The Preview's device parameter must be valid"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "error",
                  "parameters": {
                    "suppressToolId": "WearTilePreviewDeviceSpec",
                    "ideaSeverity": "ERROR",
                    "qodanaSeverity": "Critical"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Wear Tile preview",
                      "index": 111,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "ComposePreviewNotSupportedInUnitTestFiles",
                "shortDescription": {
                  "text": "Preview is not supported in unit test files"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "error",
                  "parameters": {
                    "suppressToolId": "ComposePreviewNotSupportedInUnitTestFiles",
                    "ideaSeverity": "ERROR",
                    "qodanaSeverity": "Critical"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Compose preview",
                      "index": 72,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "WearTilePreviewShouldBeTopLevelFunction",
                "shortDescription": {
                  "text": "The Preview must be a top level declaration or in a top level class with a default constructor"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "error",
                  "parameters": {
                    "suppressToolId": "WearTilePreviewShouldBeTopLevelFunction",
                    "ideaSeverity": "ERROR",
                    "qodanaSeverity": "Critical"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Wear Tile preview",
                      "index": 111,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "WearTilePreviewHasValidMethodSignature",
                "shortDescription": {
                  "text": "The Preview method should return an androidx.wear.tiles.tooling.preview.TilePreviewData and have a single optional android.content.Context parameter"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "error",
                  "parameters": {
                    "suppressToolId": "WearTilePreviewHasValidMethodSignature",
                    "ideaSeverity": "ERROR",
                    "qodanaSeverity": "Critical"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Wear Tile preview",
                      "index": 111,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "ComposePreviewMustBeTopLevelFunction",
                "shortDescription": {
                  "text": "Preview must be a top level declaration or in a top level class with a default constructor."
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "error",
                  "parameters": {
                    "suppressToolId": "ComposePreviewMustBeTopLevelFunction",
                    "ideaSeverity": "ERROR",
                    "qodanaSeverity": "Critical"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Compose preview",
                      "index": 72,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "InfiniteTransitionLabel",
                "shortDescription": {
                  "text": "rememberInfiniteTransition label parameter not set"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "InfiniteTransitionLabel",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Compose preview",
                      "index": 72,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "LongText",
                "shortDescription": {
                  "text": "Long text"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "LongText",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Android/Lint/Screen sizes",
                      "index": 88,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "Overlap",
                "shortDescription": {
                  "text": "Overlap"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "Overlap",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Android/Lint/Screen sizes",
                      "index": 88,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "TextFieldSize",
                "shortDescription": {
                  "text": "Text field size"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "TextFieldSize",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Android/Lint/Screen sizes",
                      "index": 88,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "ComposePreviewDimensionRespectsLimit",
                "shortDescription": {
                  "text": "Preview dimension has a minimum and a maximum limit"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "ComposePreviewDimensionRespectsLimit",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Compose preview",
                      "index": 72,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              }
            ],
            "language": "en-US",
            "contents": [
              "localizedData",
              "nonLocalizedData"
            ],
            "isComprehensive": false
          },
          {
            "name": "org.intellij.qodana",
            "version": "242.20224.419",
            "rules": [
              {
                "id": "JavaAnnotator",
                "shortDescription": {
                  "text": "Java annotator"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "error",
                  "parameters": {
                    "suppressToolId": "JavaAnnotator",
                    "ideaSeverity": "ERROR",
                    "qodanaSeverity": "Critical"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "General",
                      "index": 36,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "JvmCoverageInspection",
                "shortDescription": {
                  "text": "Check Kotlin and Java source code coverage"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": true,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "JvmCoverageInspection",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Code Coverage",
                      "index": 96,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "QodanaKotlinSanity",
                "shortDescription": {
                  "text": "Kotlin sanity"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "error",
                  "parameters": {
                    "suppressToolId": "QodanaKotlinSanity",
                    "ideaSeverity": "ERROR",
                    "qodanaSeverity": "Critical"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "General",
                      "index": 36,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "QodanaSanity",
                "shortDescription": {
                  "text": "Sanity"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "error",
                  "parameters": {
                    "suppressToolId": "QodanaSanity",
                    "ideaSeverity": "ERROR",
                    "qodanaSeverity": "Critical"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Qodana",
                      "index": 133,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "QodanaJavaSanity",
                "shortDescription": {
                  "text": "Java sanity"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "error",
                  "parameters": {
                    "suppressToolId": "QodanaJavaSanity",
                    "ideaSeverity": "ERROR",
                    "qodanaSeverity": "Critical"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "General",
                      "index": 36,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              }
            ],
            "language": "en-US",
            "contents": [
              "localizedData",
              "nonLocalizedData"
            ],
            "isComprehensive": false
          },
          {
            "name": "org.intellij.plugins.markdown",
            "version": "242.20224.419",
            "rules": [
              {
                "id": "MarkdownLinkDestinationWithSpaces",
                "shortDescription": {
                  "text": "Links should not contain spaces"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "MarkdownLinkDestinationWithSpaces",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Markdown",
                      "index": 80,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "MarkdownOutdatedTableOfContents",
                "shortDescription": {
                  "text": "Outdated table of contents section"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "MarkdownOutdatedTableOfContents",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Markdown",
                      "index": 80,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "MarkdownUnresolvedLinkLabel",
                "shortDescription": {
                  "text": "Unresolved link label"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "MarkdownUnresolvedLinkLabel",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Markdown",
                      "index": 80,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "MarkdownIncorrectTableFormatting",
                "shortDescription": {
                  "text": "Incorrect table formatting"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "note",
                  "parameters": {
                    "suppressToolId": "MarkdownIncorrectTableFormatting",
                    "ideaSeverity": "WEAK WARNING",
                    "qodanaSeverity": "Moderate"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Markdown",
                      "index": 80,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "MarkdownNoTableBorders",
                "shortDescription": {
                  "text": "Table doesn't have side borders"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "MarkdownNoTableBorders",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Markdown",
                      "index": 80,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "MarkdownIncorrectlyNumberedListItem",
                "shortDescription": {
                  "text": "Incorrectly numbered list item"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "MarkdownIncorrectlyNumberedListItem",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Markdown",
                      "index": 80,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "MarkdownUnresolvedFileReference",
                "shortDescription": {
                  "text": "Unresolved file references"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "MarkdownUnresolvedFileReference",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Markdown",
                      "index": 80,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "MarkdownUnresolvedHeaderReference",
                "shortDescription": {
                  "text": "Unresolved header reference"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "MarkdownUnresolvedHeaderReference",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Markdown",
                      "index": 80,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              }
            ],
            "language": "en-US",
            "contents": [
              "localizedData",
              "nonLocalizedData"
            ],
            "isComprehensive": false
          },
          {
            "name": "org.jetbrains.security.package-checker",
            "version": "242.20224.419",
            "rules": [
              {
                "id": "MaliciousLibrariesLocal",
                "shortDescription": {
                  "text": "Malicious dependency"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": true,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "MaliciousLibrariesLocal",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Security",
                      "index": 92,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "VulnerableCodeUsages",
                "shortDescription": {
                  "text": "Vulnerable API usage"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": true,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "VulnerableCodeUsages",
                    "cweIds": [
                      1395
                    ],
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Security",
                      "index": 92,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "VulnerableLibrariesLocal",
                "shortDescription": {
                  "text": "Vulnerable declared dependency"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": true,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "VulnerableLibrariesLocal",
                    "cweIds": [
                      1395
                    ],
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Security",
                      "index": 92,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "VulnerableLibrariesGlobal",
                "shortDescription": {
                  "text": "Vulnerable imported dependency"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "VulnerableLibrariesGlobal",
                    "cweIds": [
                      1395
                    ],
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Security",
                      "index": 92,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              }
            ],
            "language": "en-US",
            "contents": [
              "localizedData",
              "nonLocalizedData"
            ],
            "isComprehensive": false
          },
          {
            "name": "HtmlTools",
            "version": "242.20224.419",
            "rules": [
              {
                "id": "HtmlDeprecatedTag",
                "shortDescription": {
                  "text": "Obsolete tag"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "HtmlDeprecatedTag",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "HTML",
                      "index": 26,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "HtmlRequiredSummaryAttribute",
                "shortDescription": {
                  "text": "Missing required 'summary' attribute"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "note",
                  "parameters": {
                    "suppressToolId": "HtmlRequiredSummaryAttribute",
                    "ideaSeverity": "INFORMATION",
                    "qodanaSeverity": "Info"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "HTML/Accessibility",
                      "index": 107,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "HtmlNonExistentInternetResource",
                "shortDescription": {
                  "text": "Unresolved web link"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "HtmlNonExistentInternetResource",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "HTML",
                      "index": 26,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "HtmlFormInputWithoutLabel",
                "shortDescription": {
                  "text": "Missing associated label"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "HtmlFormInputWithoutLabel",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "HTML/Accessibility",
                      "index": 107,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "HtmlRequiredTitleAttribute",
                "shortDescription": {
                  "text": "Missing required 'title' attribute"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "note",
                  "parameters": {
                    "suppressToolId": "HtmlRequiredTitleAttribute",
                    "ideaSeverity": "INFORMATION",
                    "qodanaSeverity": "Info"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "HTML/Accessibility",
                      "index": 107,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "HtmlRequiredTitleElement",
                "shortDescription": {
                  "text": "Missing required 'title' element"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "HtmlRequiredTitleElement",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "HTML/Accessibility",
                      "index": 107,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "HtmlDeprecatedAttribute",
                "shortDescription": {
                  "text": "Obsolete attribute"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "HtmlDeprecatedAttribute",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "HTML",
                      "index": 26,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "HtmlRequiredAltAttribute",
                "shortDescription": {
                  "text": "Missing required 'alt' attribute"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "HtmlRequiredAltAttribute",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "HTML/Accessibility",
                      "index": 107,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "CheckImageSize",
                "shortDescription": {
                  "text": "Mismatched image size"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "CheckImageSize",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "HTML",
                      "index": 26,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "HtmlRequiredLangAttribute",
                "shortDescription": {
                  "text": "Missing required 'lang' attribute"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "HtmlRequiredLangAttribute",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "HTML/Accessibility",
                      "index": 107,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "HtmlPresentationalElement",
                "shortDescription": {
                  "text": "Presentational tag"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "note",
                  "parameters": {
                    "suppressToolId": "HtmlPresentationalElement",
                    "ideaSeverity": "INFORMATION",
                    "qodanaSeverity": "Info"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "HTML",
                      "index": 26,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              }
            ],
            "language": "en-US",
            "contents": [
              "localizedData",
              "nonLocalizedData"
            ],
            "isComprehensive": false
          },
          {
            "name": "org.jetbrains.plugins.yaml",
            "version": "242.20224.419",
            "rules": [
              {
                "id": "YAMLIncompatibleTypes",
                "shortDescription": {
                  "text": "Suspicious type mismatch"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "YAMLIncompatibleTypes",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "YAML",
                      "index": 122,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "YAMLDuplicatedKeys",
                "shortDescription": {
                  "text": "Duplicated YAML keys"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "error",
                  "parameters": {
                    "suppressToolId": "YAMLDuplicatedKeys",
                    "ideaSeverity": "ERROR",
                    "qodanaSeverity": "Critical"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "YAML",
                      "index": 122,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "YAMLSchemaValidation",
                "shortDescription": {
                  "text": "Validation by JSON Schema"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "YAMLSchemaValidation",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "YAML",
                      "index": 122,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "YAMLUnresolvedAlias",
                "shortDescription": {
                  "text": "Unresolved alias"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "error",
                  "parameters": {
                    "suppressToolId": "YAMLUnresolvedAlias",
                    "ideaSeverity": "ERROR",
                    "qodanaSeverity": "Critical"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "YAML",
                      "index": 122,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "YAMLSchemaDeprecation",
                "shortDescription": {
                  "text": "Deprecated YAML key"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "note",
                  "parameters": {
                    "suppressToolId": "YAMLSchemaDeprecation",
                    "ideaSeverity": "WEAK WARNING",
                    "qodanaSeverity": "Moderate"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "YAML",
                      "index": 122,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "YAMLRecursiveAlias",
                "shortDescription": {
                  "text": "Recursive alias"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "error",
                  "parameters": {
                    "suppressToolId": "YAMLRecursiveAlias",
                    "ideaSeverity": "ERROR",
                    "qodanaSeverity": "Critical"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "YAML",
                      "index": 122,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "YAMLUnusedAnchor",
                "shortDescription": {
                  "text": "Unused anchor"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "YAMLUnusedAnchor",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "YAML",
                      "index": 122,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              }
            ],
            "language": "en-US",
            "contents": [
              "localizedData",
              "nonLocalizedData"
            ],
            "isComprehensive": false
          },
          {
            "name": "org.jetbrains.idea.gradle.dsl",
            "version": "242.20224.419",
            "rules": [
              {
                "id": "DeclarativeUnresolvedReference",
                "shortDescription": {
                  "text": "Unresolved reference"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "DeclarativeUnresolvedReference",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Gradle Declarative",
                      "index": 135,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              }
            ],
            "language": "en-US",
            "contents": [
              "localizedData",
              "nonLocalizedData"
            ],
            "isComprehensive": false
          },
          {
            "name": "com.jetbrains.sh",
            "version": "242.20224.419",
            "rules": [
              {
                "id": "ShellCheck",
                "shortDescription": {
                  "text": "ShellCheck"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "error",
                  "parameters": {
                    "suppressToolId": "ShellCheck",
                    "ideaSeverity": "ERROR",
                    "qodanaSeverity": "Critical"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Shell script",
                      "index": 137,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              }
            ],
            "language": "en-US",
            "contents": [
              "localizedData",
              "nonLocalizedData"
            ],
            "isComprehensive": false
          },
          {
            "name": "tanvd.grazi",
            "version": "242.20224.419",
            "rules": [
              {
                "id": "LanguageDetectionInspection",
                "shortDescription": {
                  "text": "Natural language detection"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "LanguageDetectionInspection",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Proofreading",
                      "index": 74,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              },
              {
                "id": "GrazieInspection",
                "shortDescription": {
                  "text": "Grammar"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": false,
                  "level": "note",
                  "parameters": {
                    "suppressToolId": "GrazieInspection",
                    "ideaSeverity": "GRAMMAR_ERROR",
                    "qodanaSeverity": "Info"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "Proofreading",
                      "index": 74,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              }
            ],
            "language": "en-US",
            "contents": [
              "localizedData",
              "nonLocalizedData"
            ],
            "isComprehensive": false
          },
          {
            "name": "org.toml.lang",
            "version": "242.20224.419",
            "rules": [
              {
                "id": "TomlUnresolvedReference",
                "shortDescription": {
                  "text": "Unresolved reference"
                },
                "fullDescription": {
                  "text": "No description available",
                  "markdown": "No description available"
                },
                "defaultConfiguration": {
                  "enabled": true,
                  "level": "warning",
                  "parameters": {
                    "suppressToolId": "TomlUnresolvedReference",
                    "ideaSeverity": "WARNING",
                    "qodanaSeverity": "High"
                  }
                },
                "relationships": [
                  {
                    "target": {
                      "id": "TOML",
                      "index": 142,
                      "toolComponent": {
                        "name": "IC"
                      }
                    },
                    "kinds": [
                      "superset"
                    ]
                  }
                ]
              }
            ],
            "language": "en-US",
            "contents": [
              "localizedData",
              "nonLocalizedData"
            ],
            "isComprehensive": false
          }
        ]
      },
      "invocations": [
        {
          "startTimeUtc": "2024-08-28T10:45:04.3664089Z",
          "exitCode": 0,
          "executionSuccessful": true
        }
      ],
      "language": "en-US",
      "versionControlProvenance": [
        {
          "properties": {
            "repoUrl": "",
            "vcsType": "Git"
          }
        }
      ],
      "results": [],
      "automationDetails": {
        "id": "ShoppingApp/qodana/2024-08-28",
        "guid": "3fd4e9b5-3e42-4b33-b9b1-b961161ea7b1",
        "properties": {
          "jobUrl": "",
          "analysisKind": "ide"
        }
      },
      "newlineSequences": [
        "\r\n",
        "\n"
      ],
      "properties": {
        "qodana.sanity.results": [
          {
            "ruleId": "QodanaKotlinSanity",
            "kind": "fail",
            "level": "error",
            "message": {
              "text": "Unresolved reference AppCompactActivity",
              "markdown": "Unresolved reference AppCompactActivity"
            },
            "locations": [
              {
                "physicalLocation": {
                  "artifactLocation": {
                    "uri": "app/src/main/kotlin/Main.kt",
                    "uriBaseId": "SRCROOT"
                  },
                  "region": {
                    "startLine": 5,
                    "startColumn": 22,
                    "charOffset": 62,
                    "charLength": 18,
                    "snippet": {
                      "text": "AppCompactActivity"
                    },
                    "sourceLanguage": "kotlin"
                  },
                  "contextRegion": {
                    "startLine": 3,
                    "startColumn": 1,
                    "charOffset": 33,
                    "charLength": 150,
                    "snippet": {
                      "text": "import\n\nclass MainActivity : AppCompactActivity() {\n    override fun onCreate(savedInstanceState: Bundle?){\n        super.onCreate(savedInstanceState)"
                    },
                    "sourceLanguage": "kotlin"
                  }
                },
                "logicalLocations": [
                  {
                    "fullyQualifiedName": "ShoppingApp",
                    "kind": "module"
                  }
                ]
              }
            ],
            "partialFingerprints": {
              "equalIndicator/v2": "aa6800b8a6de610c",
              "equalIndicator/v1": "ea17ba5ff58407f06e6d45c898d388497069c63480ce77ae4cefa9118e00ef0d"
            },
            "properties": {
              "ideaSeverity": "ERROR",
              "qodanaSeverity": "Critical"
            }
          }
        ],
        "configProfile": "starter",
        "deviceId": "280824136fc8ab1-68f2-4b3a-bb70-f5d3ed14adff",
        "qodanaNewResultSummary": {
          "total": 0
        }
      }
    }
  ],
  "properties": {
    "runTimestamp": "1724841907401"
  }
}